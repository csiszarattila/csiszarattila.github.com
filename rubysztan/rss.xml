<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rubyszt&#225;n</title>
    <description>Minden ami Ruby.</description>
    <link>http://csiszarattila.com</link>
    <atom:link href="http://feeds.feedburner.com/rubysztan" type="application/rss+xml" rel="self"/>
    <item>
      <title>Els&#337; railsszes project...done</title>
      <link>http://csiszarattila.com/posztok/elso_rails_project.html</link>
      <description>&lt;p&gt;H&#225;t ezt is meg&#233;rt&#252;k&amp;#8230; elindult az els&#337; &lt;a href='http://www.euxpert.com/'&gt;&#233;les Railsszes alkalmaz&#225;s (Euxpert)&lt;/a&gt; amiben &#233;n is k&#246;zrem&#369;k&#246;dtem. Igaz a fejleszt&#233;s javar&#233;szt m&#225;r k&#233;szen volt &#233;s r&#225;m m&#225;r csak az utols&#243; m&#243;d&#243;s&#237;t&#225;sok, finom&#237;t&#225;sok v&#225;rtak, de &#237;gy is hatalmas tapasztalatot jelentett.&lt;/p&gt;

&lt;p&gt;R&#246;viden n&#233;h&#225;ny technikai fog&#225;s:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href='http://wiki.opscode.com/display/chef/FAQ'&gt;Chef&lt;/a&gt; A szerver &#252;zemeltet&#233;s&#233;re chefet haszn&#225;lunk, Linode alapokon. Tulajdonk&#233;ppen ez volt a legf&#337;bb feladatom. T&#246;bbnyire az opscode cookbookjai bev&#225;ltak, egy-k&#233;t saj&#225;t egyedi recepttel vegy&#237;tve.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Solr A sz&#246;veges keres&#233;s Solr szerveren kereszt&#252;l t&#246;rt&#233;nik. A &lt;a href='https://github.com/outoftime/sunspot'&gt;Sunspot&lt;/a&gt; gemmel egyszer&#369;en megoldhat&#243; a Railsszes integr&#225;ci&#243;. Csak egy tan&#225;cs: &#233;lesben ne haszn&#225;lj&#225;tok a sunspot be&#233;p&#237;tett Solr szerver&#233;t!&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='https://github.com/plataformatec/devise'&gt;Devise&lt;/a&gt; Dont reinvent the weel: user/accountok kezel&#233;s&#233;hez.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='https://github.com/jamesgolick/resource_controller'&gt;Resource controller&lt;/a&gt; Mint az el&#337;bbi csak a kontrollerek &amp;#8220;tiszt&#225;n&amp;#8221; tart&#225;s&#225;ra. Must have.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Haml, Sass, Compass A Hamlr&#243;l m&#225;r &#237;rtam. A &lt;a href='http://compass-style.org'&gt;Sass+Compass&lt;/a&gt; p&#225;ros pedig verhetetlen. Pr&#243;b&#225;lj&#225;tok ki!&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='http://hoptoadapp.com/pages/home'&gt;Hoptoad&lt;/a&gt; A fut&#225;s k&#246;zbeni hib&#225;k elkap&#225;s&#225;ra, &#233;rtes&#237;t&#233;sre.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='http://www.newrelic.com'&gt;New relic rpm&lt;/a&gt; Teljes&#237;tm&#233;ny m&#233;r&#233;sre.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='http://lighthouseapp.com'&gt;Lighthouse&lt;/a&gt; Bugok, feladatok nyomon k&#246;vet&#233;s&#233;re.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Persze a feladat d&#246;nt&#337; r&#233;sze viszont most j&#246;n, hiszen egy dolog elind&#237;tani valamit &#233;s ut&#225;na tov&#225;bb fejleszteni:) &amp;#8230;Ohh by the way mostan&#225;ban az &lt;a href='http://www.pragprog.com/titles/achbd/the-rspec-book'&gt;Rspec k&#246;nyvet&lt;/a&gt; olvasgatom.&lt;/p&gt;</description>
      <pubDate>Sat, 27 Nov 2010 00:00:00 +0100</pubDate>
      <guid>/posztok/elso_rails_project.html</guid>
    </item>
    <item>
      <title>IRB felv&#233;rtez&#233;se</title>
      <link>http://csiszarattila.com/posztok/irb_felvertezese.html</link>
      <description>&lt;p&gt;Nem tudom ti mennyire haszn&#225;lj&#225;tok az irb-t. &#201;n szinte mindenre: kisebb Rubys k&#243;dok kipr&#243;b&#225;l&#225;s&#225;ra, Railsben pedig k&#243;dok debuggol&#225;s&#225;ra (ala. script/console). Nagyon hasznos tud lenni, mivel azonnal ki lehet benne k&#243;dokat pr&#243;b&#225;lni, a visszaadott &#233;rt&#233;kekkel elj&#225;tszadozhatunk, &#233;s van k&#243;dkieg&#233;sz&#237;t&#233;s! (Annak idej&#233;n ez volt az ami els&#337;k&#233;nt megtetszett a Rubyban.)&lt;/p&gt;

&lt;p&gt;Most k&#233;t gemet aj&#225;nlan&#233;k az irb-hez ami tov&#225;bb n&#246;velheti a produktivit&#225;sunkat. Egyik&#252;k az &lt;a href='http://utilitybelt.rubyforge.org/index.html' title='utility_belt gem oldala'&gt;utility_belt&lt;/a&gt;, ami hasznos kieg&#233;sz&#237;t&#233;sekkel l&#225;tja el az irb konzolt(szintakszis-kiemel&#233;s, m&#369;velet-history, stb.).&lt;/p&gt;

&lt;p&gt;M&#225;sik a &lt;a href='http://tagaholic.me/2009/03/13/hirb-irb-on-the-good-stuff.html' title='Hirb bemutat&#225;sa'&gt;hirb&lt;/a&gt;, amely objektumokat t&#225;bl&#225;zatos form&#225;ban &#237;ratja ki, ez&#225;ltal jobban &#225;tl&#225;that&#243;bb&#225; v&#225;lnak, ez rails konzol eset&#233;n a lek&#233;rdez&#233;sek ut&#225;n visszaadott objektum-kollekci&#243;k vizsg&#225;lat&#225;n&#225;l tud nagyon hasznos lenni.&lt;/p&gt;

&lt;p&gt;A k&#233;t gemet a legegyszer&#369;bben - a mostm&#225;r &amp;#8216;szabv&#225;nny&#225;&amp;#8217; v&#225;l&#243; - &lt;a href='http://gembundler.com/' title='Bundler gem oldala'&gt;bundlerrel&lt;/a&gt; vehetj&#252;k haszn&#225;latba, ha hozz&#225;adjuk &#337;ket a Gemfile-unkban &#233;s futtatjuk a &lt;strong&gt;bundle install&lt;/strong&gt; parancsot.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;group :development do
  gem &amp;#39;utility_belt&amp;#39;
  gem &amp;#39;hirb&amp;#39;
end&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A hirb haszn&#225;lat&#225;hoz m&#233;g enged&#233;lyezn&#252;nk kell azt, a &lt;strong&gt;Hirb.enable&lt;/strong&gt; utas&#237;t&#225;s kiad&#225;s&#225;val az irb konzolban.&lt;/p&gt;</description>
      <pubDate>Tue, 31 Aug 2010 00:00:00 +0200</pubDate>
      <guid>/posztok/irb_felvertezese.html</guid>
    </item>
    <item>
      <title>markItUp! B&#246;ng&#233;sz&#337;s sz&#246;vegszerkeszt&#337; alternat&#237;va</title>
      <link>http://csiszarattila.com/posztok/markitup_textare_szerkeszto_alternativa.html</link>
      <description>&lt;p&gt;V&#233;gre egy sz&#225;momra is megfelel&#337; textareas sz&#246;vegszerkeszt&#337; alternat&#237;va: &lt;a href='http://markitup.jaysalvat.com/home/' title='markItUp!'&gt;markItUp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JQuery alap&#250;, kicsi, t&#246;bb markup nyelvet is tud(HTML, Textile, Markdown stb.) baromi k&#246;nnyen konfigur&#225;lhat&#243;, &#233;s kiterjeszhet&#337;.&lt;/p&gt;

&lt;p&gt;&#201;n a Markdown editor l&#337;ttem be, r&#225;ad&#225;sul p&#225;r &#243;ra alatt siker&#252;lt hozz&#225;faragnom egy k&#233;pfelt&#246;lt&#337;s/beilleszt&#337;s plugint is, annak ellen&#233;re, hogy nem vagyok egy JS guru.:)&lt;/p&gt;</description>
      <pubDate>Mon, 23 Aug 2010 00:00:00 +0200</pubDate>
      <guid>/posztok/markitup_textare_szerkeszto_alternativa.html</guid>
    </item>
    <item>
      <title>Vide&#243;k Ipod form&#225;tumra hoz&#225;sa egyszer&#369;en</title>
      <link>http://csiszarattila.com/posztok/videok_ipod_formatumra_alakitasa.html</link>
      <description>&lt;p&gt;Mivel hetente k&#233;tszer megteszem a Szeged-T&#246;r&#246;kszentmikl&#243;s t&#225;vot a hossz&#250; utaz&#225;s alatt lehet&#337;leg szeretem hasznosan elt&#246;lteni az id&#337;t, ami gyakorlatilag teljes Rubys content-fogyaszt&#225;st jelent:), f&#337;leg mi&#243;ta szert tettem egy Ipod Touchra. Viszont nem minden vide&#243;-form&#225;tumot hajland&#243; lej&#225;tszani, az iTunes be&#233;p&#237;tett vide&#243;-konvert&#225;l&#243;ja pedig lass&#250;&amp;#8230;nagyon lass&#250;.&lt;/p&gt;

&lt;p&gt;Persze ilyenkor r&#246;gt&#246;n kib&#250;juk az emberb&#337;l a unixos &#246;szt&#246;n:) &#233;s az ffmpeg-re gondol mint megold&#225;s, nekem viszont most nem volt kedvem paranccsorban vacakolni, a sz&#252;ks&#233;ges libraryk telep&#237;t&#233;s&#233;r&#337;l nem is besz&#233;lve.&lt;/p&gt;

&lt;p&gt;Szerencs&#233;re egy kis gugliz&#225;s ut&#225;n kider&#252;lt, hogy l&#233;tezik az ffmepg al&#225; &#237;rt grafikus kliens &lt;a href='http://www.ffmpegx.com' title='ffmpegX-re &#233;p&#252;l&#337; OSX grafikus fel&#252;let'&gt;ffmpegX&lt;/a&gt; n&#233;ven. Ami t&#233;nyleg gyors &#233;s n&#233;mileg egyszer&#369;bb is.(DHH 70perces Railsconfos vide&#243;j&#225;t pl. f&#233;l &#243;ra alatt &#225;tkonvert&#225;lta:).&lt;/p&gt;</description>
      <pubDate>Sun, 20 Jun 2010 00:00:00 +0200</pubDate>
      <guid>/posztok/videok_ipod_formatumra_alakitasa.html</guid>
    </item>
    <item>
      <title>Upgrading a Rails 2 App to Rails 3</title>
      <link>http://railsdispatch.com/posts/upgrading-a-rails-2-app-to-rails-3</link>
      <description>&lt;p&gt;A great blogpost about what changes in Rail 3 fundamentally and how to deal with it when you are planning to upgrade your 2.x app.&lt;/p&gt;</description>
      <pubDate>Mon, 07 Jun 2010 00:00:00 +0200</pubDate>
      <guid>/linkek/upgrading-a-rails-2-app-to-rails-3/</guid>
    </item>
    <item>
      <title>Zend Framework: Zend_Application + Bootstrap + Resource</title>
      <link>http://csiszarattila.com/tutorialok/zend_bootstrap.html</link>
      <description>&lt;p&gt;A k&#246;vetkez&#337; a cikksorozatokban - a Rubyszt&#225;n blog t&#246;rt&#233;net&#233;ben el&#337;sz&#246;r - PHP-s t&#233;m&#225;ra ker&#252;l a sor, m&#233;ghozz&#225; a mostans&#225;g k&#233;t legdivatosabb library, a Zend keretrendszer &#233;s a Doctrine &#246;sszehangol&#225;s&#225;ra. Railsszel fejleszt&#337;k figyelem: j&#246;het egy kis Zend vs. Rails &#246;sszehasonl&#237;t&#225;s:)&lt;/p&gt;

&lt;p&gt;Az al&#225;bbi p&#233;ldak&#243;dok az elm&#250;lt id&#337;szakban tett er&#337;fesz&#237;t&#233;seim eredm&#233;nyei, amelyben &#225;ltal&#225;nos, t&#246;bb c&#233;lra felhaszn&#225;lhat&#243; Zend keretrendszerre &#233;p&#252;l&#337; alkalmaz&#225;s-v&#225;z l&#233;trehoz&#225;s&#225;t t&#369;ztem ki c&#233;lul.&lt;/p&gt;

&lt;p&gt;A p&#233;ldak&#243;dok k&#246;vethet&#337;ek vagy teljes alkalmaz&#225;s-v&#225;z let&#246;lthet&#337; &lt;a href='http://github.com/csiszarattila/zendframework_base' title='A projekt Github oldala'&gt;a projekt Github oldal&#225;r&#243;l&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A sorozat els&#337; r&#233;szek&#233;nt egy, a Zend keretrendszerre &#233;p&#252;l&#337; MVC alkalmaz&#225;sv&#225;z l&#233;trehoz&#225;sa, a bootstrappel&#233;s &#233;s a hozz&#225; kapcsol&#243;d&#243; fogalmak ker&#252;lnek bemutat&#225;sra. A folytat&#225;s a &lt;a href='/tutorialok/zend_doctrine_1_2_integracio.html' title='Le&#237;r&#225;s a Zend_Framework-Doctrine integr&#225;ci&#243;r&#243;l'&gt;Doctrine 1.2-es verzi&#243;j&#225;nak integr&#225;ci&#243;&lt;/a&gt;j&#225;r&#243;l sz&#243;l.&lt;/p&gt;

&lt;h2 id='bootstrap_a_zend_applicationel'&gt;Bootstrap a Zend Application-el&lt;/h2&gt;

&lt;p&gt;A Zend 1.8-as verzi&#243;i el&#337;tt az alkalmaz&#225;s ind&#237;t&#225;sa finoman sz&#243;lva is el&#233;gg&#233; hektikus ter&#252;letnek sz&#225;m&#237;tott. Mivel a Zend keretrendszer modul&#225;ris fel&#233;p&#237;t&#233;s&#369;nek sz&#252;letett, azzal az &#246;tlettel, hogy a fejleszt&#337;knek a legnagyobb szabads&#225;got biztos&#237;tsa, a keretrendszer bootstrappel&#233;s&#233;re sem adott igaz&#225;n egys&#233;ges megold&#225;st. Ez csak egy eredm&#233;nyhez: a t&#246;k&#233;letes k&#225;oszhoz vezethetett. F&#233;lmegold&#225;sok &#233;s &#246;tletek sz&#252;lettek, kinek ez, kinek az a megold&#225;s m&#369;k&#246;d&#246;tt - sajnos fejleszt&#337;k&#233;nt a mindennapok sor&#225;n m&#233;g nekem is ezekkel a katasztr&#243;f&#225;lis megold&#225;sokkal kell megb&#237;rk&#243;znom.&lt;/p&gt;

&lt;p&gt;Az 1.8-as verzi&#243; megjelen&#233;se azonban mag&#225;val hozta a Zend_Application oszt&#225;lyt, &#233;s vele egy&#252;tt a kor&#225;bbi gondok megold&#225;s&#225;t, hiszen ez lehet&#337;v&#233; teszi, hogy egys&#233;ges &#233;s objektumorient&#225;lt m&#243;don, egy oszt&#225;lyon kereszt&#252;l v&#233;gezhess&#252;k az alkalmaz&#225;s bootstrappel&#233;s&#233;t &#233;s konfigur&#225;ci&#243;j&#225;t. A megold&#225;s fokozatosan finomodott, &#233;s v&#233;lem&#233;nyem szerint az egyik leghasznosabb fejl&#337;d&#233;st hozta hossz&#250; id&#337; &#243;ta a Zend keretrendszerbe.&lt;/p&gt;

&lt;p&gt;Az alkalmaz&#225;s ind&#237;t&#225;sa annyira legegyszer&#369;s&#246;d&#246;tt, hogy mind&#246;ssze egy Zend_Application p&#233;ld&#225;nyt kell l&#233;trehoznunk, amely k&#233;t param&#233;tert v&#225;r: a k&#246;rnyezet&#233;t, &#233;s egy konfigur&#225;ci&#243;s f&#225;jlt.&lt;/p&gt;

&lt;p&gt;A p&#233;ld&#225;nyos&#237;t&#225;st megtehetj&#252;k az alkalmaz&#225;s bel&#233;p&#337; pontj&#225;n, ez az &#233;n esetemben a public/index.php f&#225;jl - minden k&#233;r&#233;st ide fut be:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A public k&#246;nyvt&#225;rba csak azoknak a f&#225;jloknak szabad ker&#252;lni&#252;k, amelyeket a webszervernek statikusan kell kiszolg&#225;nia, minden alkalmaz&#225;sbeli logika ett&#337;l elv&#225;lasztva, az application k&#246;nyvt&#225;rba ker&#252;l.&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# public/index.php
$application = new Zend_Application(
  APP_ENV,
  APPLICATION_ROOT . &amp;#39;/config/application.ini&amp;#39;
);

$application-&amp;gt;bootstrap()-&amp;gt;run();&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A fenti k&#243;dsor haszn&#225;lat&#225;hoz term&#233;szetesen el&#337;bb sz&#252;ks&#233;g&#252;nk van:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A megfelel&#337; oszt&#225;lyok el&#233;r&#233;s&#233;hez, &#233;s n&#233;h&#225;ny fontosabb &#250;tvonal defini&#225;l&#225;s&#225;hoz:&lt;/p&gt;

&lt;p&gt;&#201;n ezeket egy k&#252;l&#246;n f&#225;jlban (__config/include_paths.php__) helyeztem el, amit sz&#252;ks&#233;ges esetben beincludolva fel tudok haszn&#225;lni.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Itt adom hozz&#225; az include&lt;/em&gt;path-okhoz a Zend keretrendszer library/ k&#246;nyvt&#225;r&#225;nak el&#233;r&#233;s&#233;t is, k&#252;l&#246;nben a public/index.php f&#225;jlban hi&#225;ba hivatkozn&#233;k a Zend_Application oszt&#225;lyra._&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;A k&#246;rnyezet meg&#225;llap&#237;t&#225;sa:&lt;/p&gt;

&lt;p&gt;Ezt egyszer&#369;en az APP_ENV k&#246;rnyezeti v&#225;ltoz&#243;b&#243;l veszem, amely &#237;gy b&#225;rhol be&#225;ll&#237;that&#243;v&#225; v&#225;lik:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Apache direkt&#237;v&#225;val:&lt;/p&gt;

&lt;p&gt;SetEnv APP_ENV development&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Parancssorb&#243;l:&lt;/p&gt;

&lt;p&gt;export APP_ENV=development&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Fut&#225;s alatt PHP-ben:&lt;/p&gt;

&lt;p&gt;setenv(&amp;#8216;APP_ENV&amp;#8217;, &amp;#8216;development&amp;#8217;); getenv(&amp;#8216;APP_ENV&amp;#8217;);&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&#205;gy adott esetben k&#246;nnyed&#233;n megv&#225;ltoztathatom az alkalmaz&#225;s futtat&#225;si k&#246;rnyezet&#233;t ami lehet&#337;v&#233; teszi, hogy elt&#233;r&#337; be&#225;ll&#237;t&#225;sokat alkalmazzunk bizonyos helyezetekben: egy fejleszt&#337;i &#233;s egy &#233;les rendszer szinte biztosan teljesen m&#225;s be&#225;ll&#237;t&#225;sokat k&#246;vetel meg.&lt;/p&gt;

&lt;p&gt;Az alkalmazand&#243; be&#225;ll&#237;t&#225;sokat az Zend_Application a p&#233;ld&#225;nyos&#237;t&#225;sakor &#225;tadott konfigur&#225;ci&#243;s &#225;llom&#225;nyb&#243;l olvassa ki. K&#246;rnyezetet ebben - a PHP ini form&#225;tum&#250; s&#233;m&#225;iban megszokott m&#243;don - a &lt;em&gt;&lt;span /&gt;&lt;/em&gt; jelek k&#246;z&#246;tt hozhatunk l&#233;tre (pl. [production] ).&lt;/p&gt;

&lt;p&gt;Szerencs&#233;re a Zend keretrendszer konfigur&#225;ci&#243;j&#243; lehet&#337;v&#233; tesz olyan alapvet&#337; dolgokat, mint a be&#225;ll&#237;t&#225;sok egym&#225;sb&#243;l sz&#225;rmaztat&#225;sa, fel&#252;lb&#237;r&#225;l&#225;sa. &#201;n szem&#233;ly szerint azt a konvenci&#243;t k&#246;vetem, hogy minden alapbe&#225;ll&#237;t&#225;st egy [default] c&#237;mk&#233;vel l&#225;tok el, amelyet a tov&#225;bbi k&#246;rnyezetek kiterjeszthetnek, &#237;gy a sz&#252;ks&#233;ges be&#225;ll&#237;t&#225;sok egyszer&#369;en fel&#252;ldefini&#225;lhat&#243;ak. Lesz&#225;rmaztat&#225;st a &lt;em&gt;:&lt;/em&gt; jellel adhatjuk meg. Az al&#225;bbi p&#233;ld&#225;ban az production(&#233;les) k&#246;rnyezet mindenben a default be&#225;ll&#237;tasait haszn&#225;lja, kiv&#233;ve, hogy a regisztr&#225;ci&#243;kr&#243;l sz&#243;l&#243; &#233;rtes&#237;t&#233;seket egy m&#225;sik c&#237;mre ir&#225;ny&#237;tom &#225;t.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[default]
email.registration.email_to = csiszar.ati@gmail.com

[production : default]
email.registration.email_to = administrator@example.com&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A konfigur&#225;ci&#243; beolvas&#225;sa ut&#225;n az alkalmaz&#225;s fel&#225;ll&#237;t&#225;sa a bootstrappel&#233;ssel folytat&#243;dik, amelyet a k&#246;vetkez&#337; k&#243;dsor h&#237;v meg:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$application-&amp;gt;bootstrap();&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id='bootstrap_bootstrap_osztly_s_a_bootstrap_resourceok'&gt;Bootstrap, Bootstrap oszt&#225;ly &#233;s a Bootstrap Resource-ok&lt;/h2&gt;

&lt;p&gt;A Zend_Application a bootstrap sor&#225;n a konfigur&#225;ci&#243;ban megadott Bootstrap oszt&#225;lyhoz fordul, amely egyszer&#369;en leford&#237;tva futtat minden benne megadott &lt;em&gt;init prefixszel kezd&#337;d&#337; met&#243;dust.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;P&#233;ld&#225;ul az &lt;em&gt;initView met&#243;dus a n&#233;zetekhez tartoz&#243; alapvet&#337; feladatokat defini&#225;lhatja, &#233;s elv&#233;gzi bizonyos param&#233;terek be&#225;ll&#237;t&#225;s&#225;t:&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# application/Bootstrap.php
public function _initView()
{
  $viewRenderer = Zend_Controller_Action_HelperBroker::getStaticHelper(&amp;#39;viewRenderer&amp;#39;);
  $viewRenderer-&amp;gt;initView();
  $viewRenderer-&amp;gt;view-&amp;gt;doctype(&amp;#39;XHTML1_TRANSITIONAL&amp;#39;);
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A bootstrappel&#233;st ugyanakkor egyszer&#369;bb&#233; tehetj&#252;k, ha a fentihez hasonl&#243; met&#243;dusokat k&#252;l&#246;n oszt&#225;lyokban, a Zend terminil&#243;gi&#225;j&#225;ban &#250;gynevezett er&#337;forr&#225;s plugineken kereszt&#252;l val&#243;s&#237;tjuk meg. Az er&#337;forr&#225;sok haszn&#225;lat&#225;val a bootstrappel&#233;s modul&#225;risabb&#225; tehet&#337;: a gyakran haszn&#225;lt er&#337;forr&#225;sok k&#246;nnyed&#233;n &#225;tvihet&#337;ek lesznek egyik alkalmaz&#225;sb&#243;l a m&#225;sikba.&lt;/p&gt;

&lt;p&gt;Er&#337;forr&#225;s l&#233;trehoz&#225;s&#225;hoz a Zend_Application_Resource_ResourceAbstract absztrakt oszt&#225;lyt kell megval&#243;s&#237;tanunk.&lt;/p&gt;

&lt;p&gt;A fenti p&#233;lda valahogy &#237;gy n&#233;zne ki er&#337;forr&#225;sk&#233;t megval&#243;s&#237;tva:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class zf_Application_Resource_XhtmlView extends Zend_Application_Resource_ResourceAbstract
{

  public function init()
  {
    $viewRenderer = Zend_Controller_Action_HelperBroker::getStaticHelper(&amp;#39;viewRenderer&amp;#39;);
    $viewRenderer-&amp;gt;initView();
    $viewRenderer-&amp;gt;view-&amp;gt;doctype(&amp;#39;XHTML1_TRANSITIONAL&amp;#39;);
  }
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Haszn&#225;lat&#225;hoz az alkalmaz&#225;s konfigur&#225;ci&#243;j&#225;ban PluginPath &#250;tvonalk&#233;nt kell regisztr&#225;lnunk az el&#233;r&#233;s&#233;t:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# application.ini
pluginPaths.custom_resources = LIBRARY_PATH &amp;quot;/zf/Application/Resource&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Az er&#337;forr&#225;s oszt&#225;ly automatikus megh&#237;v&#225;s&#225;t a bootstrap sor&#225;n egy hozz&#225; kapcsol&#243;d&#243; be&#225;ll&#237;t&#225;s megad&#225;s&#225;val &#233;rhetj&#252;k el, amit k&#246;nnyed&#233;n el&#233;rhet&#252;nk, hiszen a resources t&#246;mb&#246;n kereszt&#252;l lehet&#337;s&#233;g&#252;nk van r&#225; hivatkozni:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;resources.xhtmlview.[]&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ebb&#337;l k&#246;vetkezik,hogy mivel a bootstrap sor&#225;n az alap &#233;p&#237;t&#337;elemeit (a MVC mint&#225;hoz elengedhetetlen FrontController, View, Router stb. elemeket) a Zend keretrendszer maga is ilyen Resource-okon kereszt&#252;l h&#237;vja meg, a konfigur&#225;ci&#243;s &#225;llom&#225;nyb&#243;l ezek rendk&#237;v&#252;l k&#246;nnyen konfigur&#225;lhat&#243;ak lesznek. Az al&#225;bbi p&#233;ld&#225;ban p&#233;ld&#225;ul egyszer&#369;en meg tudom adni az MVC mint&#225;ban elengedhetetlen controller oszt&#225;lyok el&#233;r&#233;s&#233;t:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;resources.frontController.controllerDirectory = APPLICATION_PATH &amp;quot;/controllers&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ha mindezzel megvagyunk k&#246;vetkezhet az MVC M r&#233;sze, azaz a modellek kezel&#233;se, amelyre &#233;n a Doctrine ORM-t haszn&#225;ltam fel.&lt;/p&gt;

&lt;p&gt;A Zend_Framework - Doctrine integr&#225;ci&#243;j&#225;r&#243;l &lt;a href='/tutorialok/zend_doctrine_1_2_integracio.html' title='Le&#237;r&#225;s a Zend_Framework-Doctrine integr&#225;ci&#243;r&#243;l'&gt;a folytat&#225;sban olvashatsz&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id='a_sorozatban_eddig_megjelent'&gt;A sorozatban eddig megjelent&lt;/h2&gt;

&lt;p&gt;&lt;a href='/tutorialok/zend_bootstrap.html' title='Zend_Framework bootstrap'&gt;Zend Framework: Zend_Application + Bootstrap + Resource&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href='/tutorialok/zend_doctrine_1_2_integracio.html' title='Le&#237;r&#225;s a Zend_Framework-Doctrine integr&#225;ci&#243;r&#243;l'&gt;Zend Framework: Doctrine 1.2 integr&#225;l&#225;sa&lt;/a&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 18 Dec 2009 00:00:00 +0100</pubDate>
      <guid>/tutorialok/zend_bootstrap.html</guid>
    </item>
    <item>
      <title>Zend Framework: Doctrine 1.2 integr&#225;l&#225;sa</title>
      <link>http://csiszarattila.com/tutorialok/zend_doctrine_1_2_integracio.html</link>
      <description>&lt;p&gt;Az &lt;a href='/tutorialok/zend_bootstrap.html' title='Zend_Framework bootstrap'&gt;el&#337;z&#337; cikkben&lt;/a&gt; m&#225;r eml&#237;tettem, hogy maga a Zend keretrendszer teljesen szabd utat biztos&#237;t minden komponens tekintet&#233;ben &#237;gy az elengedhetetlen adatb&#225;ziskezel&#233;sre sem ny&#250;jt egy konvekci&#243;zus megold&#225;st. &lt;em&gt;Szemben mondjuk a Railsszel, amelyben az ActiveRecordot mint defacto megold&#225;s kapjuk.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ekkor j&#246;n a k&#233;rd&#233;s, milyen adatb&#225;ziskezel&#337; r&#233;teget haszn&#225;ljunk. &#214;sszetett alkalmaz&#225;sok eset&#233;ben nem lehet k&#233;rd&#233;s, hogy ne valamilyen ORM megold&#225;st v&#225;lasszunk. A szem&#233;lyes tapasztalataim szerint PHP-s szinten a napjainkban el&#233;rhet&#337; legjobb ilyen megval&#243;s&#237;t&#225;st a Doctrine ny&#250;jtja.&lt;/p&gt;

&lt;p&gt;L&#225;ssuk teh&#225;t, hogy &#201;n hogyam tudtam megoldani a Doctrine integr&#225;ci&#243;j&#225;t a &lt;a href='http://github.com/csiszarattila/zendframework_base' title='A projekt Github oldala'&gt;Zend alap&#250; alkalmaz&#225;somba&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Figyelem az itt le&#237;rtak csak a Doctrine 1.2-es v&#225;ltozat&#225;val m&#369;k&#246;dnek.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id='doctrine_mint_bootstrap_resource_plugin'&gt;Doctrine, mint Bootstrap Resource Plugin&lt;/h2&gt;

&lt;p&gt;Els&#337; l&#233;p&#233;sk&#233;nt vil&#225;goss&#225; v&#225;lt, hogy a Doctrine-t is, mint bootstrap er&#337;forr&#225;sk&#233;nt hozom l&#233;tre, &#237;gy k&#233;s&#337;bb minden tov&#225;bbi alkalmaz&#225;sban felhaszn&#225;lhatom. Els&#337;k&#233;nt saj&#225;t megold&#225;s &#237;r&#225;s&#225;ba kezdtem, k&#233;s&#337;bb fedeztem fel, hogy a &lt;a href='http://framework.zend.com/wiki/display/ZFDEV/Doctrine+Integration+Todo' title='Doctrine Integration Todo'&gt;Doctrine - Zend keretrendszer integr&#225;ci&#243;j&#225;t c&#233;lz&#243; el&#337;terjeszt&#233;s&lt;/a&gt; keret&#233;ben &lt;a href='http://framework.zend.com/wiki/display/ZFPROP/Zend_Application_Resource_Doctrine+-+Matthew+Lurz' title='Zend Application Resource Doctrine Proposal'&gt;m&#225;r k&#233;sz&#252;lt egy teljesebb&lt;/a&gt; megold&#225;s &#237;gy ezt haszn&#225;ltam fel:&lt;/p&gt;

&lt;h4 id='1_szerezzk_be_a__cmen_tallhat_forrst_s_teleptsk_a_library_knyvtrunkba'&gt;1. Szerezz&#252;k be a &lt;a href='http://github.com/mlurz71/parables'&gt;http://github.com/mlurz71/parables&lt;/a&gt; c&#237;men tal&#225;lhat&#243; forr&#225;st, &#233;s telep&#237;ts&#252;k a library k&#246;nyvt&#225;runkba.&lt;/h4&gt;

&lt;p&gt;&#201;n szem&#233;ly szerint szeretem a k&#252;ls&#337; k&#243;djaimat &amp;#8220;hordozhat&#243;v&#225;&amp;#8221; tenni, &#237;gy git sumodulek&#233;nt defini&#225;ltam:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  # config/application.ini
  git submodule add git://github.com/mlurz71/parables.git library/Parables
  git submodule init&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='2_majd_regisztrltam_a_libraryparablesapplicationresource__knyvtrt_ez_tartalmazza_a_bootstrap_resourceokat_mint_pluginpath_elrst'&gt;2. Majd regisztr&#225;ltam a &lt;strong&gt;library/Parables/Application/Resource&lt;/strong&gt;_ k&#246;nyvt&#225;rt (ez tartalmazza a Bootstrap Resourceokat), mint PluginPath el&#233;r&#233;st.&lt;/h4&gt;

&lt;p&gt;&#205;gy a Zend_Application tudni fogja, hogy innen is v&#225;rhat Bootstrap er&#337;forr&#225;sokat. Ezt a regisztr&#225;ci&#243;t elv&#233;gezhetj&#252;k egyszer&#369;en az alkalmaz&#225;s konfigur&#225;ci&#243;s &#225;llom&#225;ny&#225;n kereszt&#252;l is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  # config/application.ini
  pluginPaths.parables_Application_Resource = LIBRARY_PATH &amp;quot;/Parables/Parables/Application/Resource&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='3_ezek_utn_kvetkezhet_a_doctrine_osztlyok_automatikus_betltsnek_hozzadsa'&gt;3. Ezek ut&#225;n k&#246;vetkezhet a Doctrine oszt&#225;lyok automatikus bet&#246;lt&#233;s&#233;nek hozz&#225;ad&#225;sa.&lt;/h4&gt;

&lt;p&gt;Ezt is jelent&#337;sen leegyszer&#369;s&#237;thetj&#252;k, ha mind&#246;ssze az Zend alap&#233;rtelmezett oszt&#225;lybet&#246;lt&#337;j&#233;nek a namespacei k&#246;z&#233; kell felvessz&#252;k a Doctrine-t, amit ism&#233;t csak el&#233;rhet&#252;nk az alkalmaz&#225;sunk konfigur&#225;ci&#243;s &#225;llom&#225;ny&#225;n kereszt&#252;l a k&#246;vetkez&#337; sorral:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  # config/application.ini
  autoloaderNamespaces[] = &amp;quot;Doctrine&amp;quot;

_Mindezt az&#233;rt tehetj&#252;k meg mert a Doctrine 1.2-es verzi&#243;ja a szabv&#225;nyosabb, PEAR tipus&#250; oszt&#225;lyhierarchia elnevez&#233;seket &#233;s elrendez&#233;st haszn&#225;lja, &#237;gy a Zend oszt&#225;lybet&#246;lt&#337;je minden gond n&#233;lk&#252;l meg tud b&#237;rk&#243;zni vel&#252;k._&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='4_modell_osztlyok_betltse'&gt;4. Modell oszt&#225;lyok bet&#246;lt&#233;se&lt;/h4&gt;

&lt;p&gt;A modell oszt&#225;lyok bet&#246;lt&#233;se sem nehezebb feladata, viszont itt v&#225;lasz&#250;t el&#233; ker&#252;l&#252;nk: Haszn&#225;lhatjuk a PEAR st&#237;lus&#250; oszt&#225;lyelnevez&#233;seket: ahol az oszt&#225;lyokk felveszik a k&#246;nyvt&#225;r hierarchi&#225;jukat, &#237;gy p&#233;ld&#225;ul a model/ k&#246;nyvt&#225;rban lev&#337; oszt&#225;lyoknak a Model_ prefixszel kell kezd&#337;dni&#252;k. &#205;gy lesz a Product.php-ban lev&#337; Product oszt&#225;lyb&#243;l Model_Product oszt&#225;ly.&lt;/p&gt;

&lt;p&gt;Nekem ez kicsit er&#337;ltetett &#233;s cs&#250;nya megold&#225;snak t&#369;nik - k&#243;d szinten szebb a Product oszt&#225;lyra hivatkozni, &#233;s m&#225;rcsak a kor&#225;bbi alkalmaz&#225;sokhoz val&#243; visszafele kompatibilit&#225;s miatt is ragaszkodom a modellek eset&#233;ben a mindenf&#233;le prefix &#233;s n&#233;vt&#233;r mentes elnevez&#233;sekhez.&lt;/p&gt;

&lt;p&gt;Sajnos a Zend default oszt&#225;lybet&#246;lt&#337;je ink&#225;bb az el&#337;bbi megold&#225;st favoriz&#225;lja, de lehet&#337;s&#233;get ad a n&#233;vt&#233;r n&#233;lk&#252;li oszt&#225;lybet&#246;lt&#233;sre is. Ehhez &#250;gynevezett fallback autoloaderk&#233;nt kell defini&#225;lnunk, amelyet a legegyszer&#369;bben a bootstrap oszt&#225;lyunkban tehet&#252;nk meg:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# application/Bootstrap.php 
class Bootstrap extends Zend_Application_Bootstrap_Bootstrap
{
  protected function _initAutoload()
  {
    $autoloader = $this-&amp;gt;getApplication()-&amp;gt;getAutoloader(); 
    if (!$autoloader-&amp;gt;isFallbackAutoloader()) { 
      $autoloader-&amp;gt;setFallbackAutoloader(true); 
    } 
    return $autoloader; 
  }
}&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id='a_doctrine_konfigurlsa'&gt;A Doctrine konfigur&#225;l&#225;sa&lt;/h2&gt;

&lt;p&gt;Mivel a Doctrine-t szabv&#225;nyos Resourcek&#233;nt defini&#225;ltuk, a k&#233;sz&#237;t&#337;je pedig gondolt a konfigur&#225;ci&#243;s be&#225;ll&#237;t&#225;sok teljes el&#233;r&#233;s&#233;re, a be&#225;ll&#237;t&#225;sok t&#246;bbs&#233;g&#233;t k&#246;nnyed&#233;n el&#233;rj&#252;k az alkalmaz&#225;s konfigur&#225;ci&#243;s &#225;llom&#225;ny&#225;n kereszt&#252;l:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# config/application.ini
resources.doctrine.connections.main.dsn = &amp;quot;mysql://user:pass@localhost/zendfw&amp;quot;
resources.doctrine.models_path          = APPLICATION_PATH &amp;quot;/models&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A Resource-al el&#233;rhet&#337; konfigur&#225;ci&#243;s be&#225;ll&#237;t&#225;sokat megtal&#225;ljuk az &lt;a href='http://framework.zend.com/wiki/display/ZFPROP/Zend_Application_Resource_Doctrine+-+Matthew+Lurz' title='Zend Application Resource Doctrine Proposal'&gt;el&#337;terjeszt&#233;s c&#237;m&#233;n&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id='zrsz'&gt;Z&#225;rsz&#243;&lt;/h2&gt;

&lt;p&gt;Az eddig bemutatott technik&#225;kat felhaszn&#225;lva el&#233;rhet&#337; a leg&#250;jabb Zend keretrendszer-verzi&#243;ra &#233;p&#252;l&#337; alkalmaz&#225;sv&#225;z, a Github-on&lt;span&gt;http://github.com/csiszarattila/zendframework_base&lt;/span&gt; kereszt&#252;l.&lt;/p&gt;

&lt;p&gt;Az alkalmaz&#225;sv&#225;z folyamatos fejleszt&#233;s alatt &#225;l, &#237;gy &#233;rdemes a figyeltek k&#246;z&#233; tenni Githubon, de ak&#225;r v&#225;rom a hasznos committokat is. A fejleszt&#233;shez kapcsol&#243;d&#243; sorozat pedig folytat&#243;dik&amp;#8230;&lt;/p&gt;

&lt;h2 id='a_sorozatban_eddig_megjelent'&gt;A sorozatban eddig megjelent&lt;/h2&gt;

&lt;p&gt;&lt;a href='/tutorialok/zend_bootstrap.html' title='Zend_Framework bootstrap'&gt;Zend Framework: Zend_Application + Bootstrap + Resource&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href='/tutorialok/zend_doctrine_1_2_integracio.html' title='Le&#237;r&#225;s a Zend_Framework-Doctrine integr&#225;ci&#243;r&#243;l'&gt;Zend Framework: Doctrine 1.2 integr&#225;l&#225;sa&lt;/a&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 18 Dec 2009 00:00:00 +0100</pubDate>
      <guid>/tutorialok/zend_doctrine_1_2_integracio.html</guid>
    </item>
    <item>
      <title>Hossz&#250; sz&#252;net ut&#225;n...</title>
      <link>http://csiszarattila.com/posztok/hosszu_szunet_utan.html</link>
      <description>&lt;p&gt;Hossz&#250; sz&#252;net ut&#225;n jelentkezek ism&#233;t bejegyz&#233;ssel. Sorolhatn&#225;m persze az okokat, hogy mi&#233;rt nem de most nem ez&#233;rt ragadtam billenty&#369;zetet, sokkal ink&#225;bb n&#233;zz&#252;k a fejlem&#233;nyeket.&lt;/p&gt;
&lt;p&gt;Legfontosabb, hogy mostant&#243;l f&#337;&#225;ll&#225;s&#250; webprogramoz&#243;k&#233;nt dolgozom, ugyan Ruby helyett PHP-ban, de &#233;rdekesek a feladatok, emellett f&#337;k&#233;nt &lt;a href="http://framework.zend.com/"&gt;Zend Framework&lt;/a&gt;-&#246;t haszn&#225;lunk, amely egy remek&#252;l fel&#233;p&#237;tett MVC keretrendszer.&lt;/p&gt;
&lt;p&gt;Emellett persze igyekszem nem elszakadni a Rubyt&#243;l se, egy kis id&#337; mindig akad egy-egy &#233;rdekesebbs t&#233;m&#225;ra. Az ut&#243;bbi id&#337;ben f&#337;k&#233;nt tesztel&#233;si elj&#225;r&#225;sokkal ismerkedtem - &lt;a href="http://pragprog.com/titles/achbd/the-rspec-book"&gt;RSpec &#233;s bar&#225;tai&lt;/a&gt; - amelyekr&#337;l terveim szerint hamarosan egy bejegyz&#233;s is sz&#252;letik majd, a pr&#243;b&#225;lkoz&#225;sokb&#243;l ezenfel&#252;l k&#233;t hobbiprojekt is sz&#252;letett.&lt;/p&gt;
&lt;p&gt;Az &lt;a href="http://github.com/csiszarattila/active_document"&gt;ActiveDocument&lt;/a&gt; egy r&#233;g&#243;ta tervezgetett &#246;tlet volt: filekezel&#233;s kicsit m&#225;sk&#233;pp, az ActiveRecord mint&#225;j&#225;ra. A koncepci&#243; onnan eredt, hogy annak idej&#233;n adatb&#225;zis helyett sima text f&#225;jlokban szerettem volna t&#225;rolni a blogbejegyz&#233;seimet - mivel &#237;gy sokkal k&#246;nnyebb a szerkeszt&#233;s&#252;k/kezel&#233;s&#252;nk - majd. Ennek egy kivonatak&#233;nt, &#246;n&#225;ll&#243; libraryk&#233;nt sz&#252;letett meg az elm&#250;lt h&#243;napokban apr&#243;donk&#233;nt ActiveRecord. P&#233;ld&#225;kat &#233;s a pontos haszn&#225;latot megtal&#225;lj&#225;tok a &lt;a href="http://github.com/csiszarattila/active_document"&gt;projekt Github oldal&#225;n&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A m&#225;sik Rubys projekt a Rubyszt&#225;n blog alapjainak az &#250;jra&#237;r&#225;sa volt: &#225;t&#252;ltetni az ActiveRecord libraryra, r&#233;szletesebb tesztel&#233;ssel, letisztultabb m&#369;k&#246;d&#233;ssel, amellyel egy&#252;tt egy &#225;ltal&#225;nos c&#233;l&#250; blogmotor j&#246;tt l&#233;tre. Ennek a &lt;a href="http://github.com/csiszarattila/mini"&gt;Mini&lt;/a&gt; nevet adtam, Githubon szint&#233;n el&#233;rhet&#337;.&lt;/p&gt;
&lt;p&gt;Hossz&#250; kihagy&#225;s ut&#225;n mindez kev&#233;snek t&#369;nhet, de ig&#233;rem mostant&#243;l igyekszem &#233;rdekes tartalommal felt&#246;lteni az oldalt.&lt;/p&gt;
</description>
      <pubDate>Wed, 04 Nov 2009 00:00:00 +0100</pubDate>
      <guid>/posztok/hosszu_szunet_utan.html</guid>
    </item>
    <item>
      <title>Kapcsosz&#225;r&#243;jel-szindr&#243;ma</title>
      <link>http://csiszarattila.com/posztok/kapcsos_zarojel_szindroma.html</link>
      <description>&lt;p&gt;B&#225;rmennyire is a legkedvesebb nyelv a Ruby sz&#225;momra, bizony r&#225;k&#233;nyszer&#252;l az ember, hogy m&#225;s programnyelveket is haszn&#225;ljon a mindennapokban. F&#233;l &#233;v ut&#225;n ism&#225;t PHP-t ragadtam.&lt;/p&gt;

&lt;p&gt;Nem mondom a PHP-ra val&#243; vissza&#225;ll&#225;s nem volt z&#246;kken&#337;mentes, de nem okozott t&#250;l nagy neh&#233;zs&#233;geket sem. A PHP-vel alapvet&#337;en nincs nagy baj, de nagyon sok dolog fur&#225;n hat &#233;s elgondolkoztatja az embert, ha hossz&#250; id&#337;t elt&#246;lt a Rubyval - f&#337;k&#233;pp az, hogy ut&#243;bbiban mennyire logikusabban vannak bizonyos dolgok megtervezve &#233;s implement&#225;lva.&lt;/p&gt;

&lt;p&gt;Hasonl&#243; a helyzet a keretrendszerekkel is: az elm&#250;lt h&#243;nap sor&#225;n j&#243;p&#225;r MVC alap&#250;t kipr&#243;b&#225;ltam (CodeIgniter, CakePHP, Zend Framework) &#233;s &#243;hatatlan volt a Railsszel val&#243; &#246;sszehasonl&#237;t&#225;suk. Itt megintcsak ism&#233;telni tudom &#246;nmagam: mintegyik rendszer nagyon j&#243;l haszn&#225;lhat&#243; &#233;s okosan val&#243;s&#237;tja meg az MVC szeml&#233;letet, de olyan apr&#243; n&#252;anszok hi&#225;nyoznak bel&#337;l&#252;k, amelyek miatt sz&#225;momra m&#233;g mindig a Rails fel&#233; h&#250;z a sz&#237;vem. A h&#225;rom PHP keretrendszer k&#246;z&#252;l egy&#233;bk&#233;nt a Zend Framework nyerte el legink&#225;bb a tetsz&#233;semet, mivel el&#233;g rugalmasan konfigur&#225;lhat&#243; &#233;s sok funkci&#243;t a Railshez hasonl&#243;an old meg, &#237;gy sz&#225;momra j&#243;val kevesebb meglepet&#233;st okozott.&lt;/p&gt;

&lt;p&gt;Ezzel egy&#252;tt az ut&#243;bbi id&#337;ben egyre gyakrabban mer&#252;lt fel bennem az a gondolat, hogy meg&#233;rte-e egy&#225;ltal&#225;n a Rubyt &#233;s a Railst v&#225;lasztani szakdolgozati t&#233;m&#225;nak, &#233;s nem mondjuk egy PHP alap&#250; rendszer tervez&#233;s&#233;r&#337;l &#237;rni, de az ut&#243;bbi id&#337;szak tapasztalatai meggy&#337;ztek, hogy helyesen d&#246;nt&#246;ttem. Mind a Ruby, mind a Rails nagyon sok hasznos fog&#225;st &#233;s (alap)ismeretet tan&#237;tott meg mind programoz&#225;sr&#243;l, mind keretrendszerekr&#337;l, nem is besz&#233;lve a m&#246;g&#246;tte rejl&#337; alapvet&#337; gondolkod&#225;sm&#243;dr&#243;l, amelyet b&#225;rmelyik nyelvben hasznos&#237;thatok.&lt;/p&gt;

&lt;p&gt;Hangs&#250;lyozni szeretn&#233;m, ezt a posztot nem offenz&#237;vak&#233;nt akartam sz&#225;nni a PHP ellen, &#233;s egy esetleges Ruby vs. PHP vit&#225;t elind&#237;tani. &#201;pp ellenkez&#337;leg a m&#250;ltbeli tapasztalatok tan&#237;tottak meg arra, hogy minden technol&#243;gia ir&#225;nt fog&#233;konynak kell lennie az embernek.&lt;/p&gt;</description>
      <pubDate>Thu, 07 May 2009 00:00:00 +0200</pubDate>
      <guid>/posztok/kapcsos_zarojel_szindroma.html</guid>
    </item>
    <item>
      <title>Nyelvtanul&#225;s puszt&#225;n kedvtel&#233;sb&#337;l?</title>
      <link>http://csiszarattila.com/posztok/nyelvtanulas_kedvtelesbol.html</link>
      <description>&lt;p&gt;Az ut&#243;bbi id&#337;ben egyre gyakrabban ker&#252;l sz&#243;ba a nyelvismeret (&#225;ll&#225;skeres&#233;s miatt t&#246;bbek k&#246;z&#246;tt), ami j&#243; aprop&#243;, hogy err&#337;l is &#237;rjak...r&#233;g&#243;ta terveztem m&#225;r ezt a t&#233;m&#225;t. Pontosabban nem is a nyelvismeretr&#337;l, hanem a nyelvtanul&#225;sr&#243;l lesz sz&#243;.&lt;/p&gt;
&lt;p&gt;Azt, hogy az iskol&#225;kban kritik&#225;n aluli a nyelvoktat&#225;s magamon tapasztaltam: 11 &#233;vnyi iskolapad koptat&#225;s ut&#225;n d&#246;nt&#246;ttem &#250;gy, hogy elegem van, &#233;n ezt magam is megtanulhatom.&lt;/p&gt;
&lt;p&gt;Szerencs&#233;mre addigra m&#225;r el&#233;g j&#243; sz&#243;kinccsel rendelkeztem: k&#233;t &#233;vnyi intenz&#237;v ford&#237;tgat&#225;s ut&#225;n olyan szintre ker&#252;ltem, hogy b&#225;rmilyen angol sz&#246;veggel megb&#237;rk&#243;ztam, a tartalm&#225;t meg&#233;rtettem. &#201;s ekkor &#233;rt az els&#337; meglepet&#233;s: az els&#337; n&#233;h&#225;ny nyelvk&#246;nyvet a kezembe v&#233;ve elkezdtem meg&#233;rteni a kor&#225;bban &#233;rthetetlennek t&#369;n&#337; nyelvtani szerkezeteket, szab&#225;lyokat &#233;s a magam ritmus&#225;ban siker&#252;lt apr&#225;nk&#233;nt magamba sz&#237;vnom. Olyananyira, hogy j&#243; f&#233;lv&#233;re r&#225; sikeres nyelvvizsg&#225;t tettem, els&#337;re &#225;tmentem!&lt;/p&gt;
&lt;p&gt;Ezzel m&#233;g magamat is siker&#252;lt meglepnem, hiszem j&#243; k&#233;t &#233;vvel kor&#225;bban m&#233;g meg voltam gy&#337;z&#337;dve r&#243;la - az iskol&#225;ban ezt &#233;reztett&#233;k velem, hogy &#233;n soha nem fogok el&#233;gs&#233;ges szintre eljutni angolb&#243;l! Ekkor d&#246;bbentem r&#225; a saj&#225;t tapasztalataim &#250;tj&#225;n, hogy nem a di&#225;kokkal, hanem legf&#337;k&#233;pp a tan&#237;t&#225;si m&#243;dszerekkel van a gond.&lt;/p&gt;
&lt;p&gt;N&#225;lam &#237;gy m&#369;k&#246;d&#246;tt: els&#337;k&#233;nt tal&#225;lj egy neked &#233;rdekesnek t&#369;n&#337; t&#233;m&#225;t(nekem a Forma 1 volt az) &#233;s kezdj el az adott nyelven olvasgatni, ford&#237;tani bel&#337;le. Megl&#225;tod nagyon gyorsan iszonyatos sz&#243;kincsre teszel szert...a sz&#243;t&#225;rb&#243;l val&#243; tanul&#225;st felejsd el, azok a szavak nem fognak megmaradni. A nyelvtant j&#243; f&#233;l&#233;v, &#233;v ut&#225;n p&#225;rhuzamosan kezd el tanulni, &#233;s ink&#225;bb a magad, mint egy k&#246;nyv ritmus&#225;ban - p&#233;ld&#225;ul, ha nem &#233;rtesz egy nyelvtani szerkezetet n&#233;zz ut&#225;na! Pr&#243;b&#225;lj meg min&#233;l t&#246;bb m&#243;don az adott nyelvvel kapcsolatba ker&#252;lni ...h&#237;rport&#225;lok, &#250;js&#225;gok olvas&#225;sa, filmek, zen&#233;k, r&#225;di&#243;k hallgat&#225;sa... az internet &#233;s a web szinte mindent a kez&#252;nkbe ad, csak j&#243;l kell tudni kihaszn&#225;lni. &#201;s ha m&#225;r sikeresen teljes&#237;tetted a nyelvvizsg&#225;d akkor se add fel a dolgot, folytasd a tanul&#225;st... &#233;n m&#233;g h&#225;rom &#233;vvel a nyelvvizsga ut&#225;n is &#250;gy &#233;rzem b&#337;ven van m&#233;g hova fejl&#337;dn&#246;m. Mindezt nem &#246;nf&#233;nyez&#233;sb&#337;l, hanem tanuls&#225;gk&#233;nt szeretn&#233;m megosztani, hogy m&#225;sok is okuljanak a dologb&#243;l: a nyelvtanul&#225;s nem misztikum, s&#337;t lehet ezt &#233;lvezetesen is csin&#225;lni a l&#233;nyeg a megfelel&#337; m&#243;dszer megtal&#225;l&#225;s&#225;ban rejlik meg persze kell hozz&#225; egy nagy adag kitart&#225;s is.&lt;/p&gt;
&lt;p&gt;&#201;s azt, hogy ez a m&#243;dszer helyes t&#246;bbek k&#246;zt az is bizony&#237;tja, hogy a csal&#225;don bel&#252;l is siker&#252;lt tov&#225;bbadnom, &#233;s m&#225;r l&#225;tszanak az eredm&#233;nyei.&lt;/p&gt;
&lt;p&gt;M&#225;sr&#233;szt &#233;rdekelne, hogy Ti hogyan tanultok nyelveket, hogyan tartj&#225;tok napi szinten a tud&#225;sotokat?&lt;/p&gt;
&lt;p&gt;&#201;n els&#337; k&#246;rben angolosoknak nagyon tudom aj&#225;nlani a &lt;a href="http://www.bbc.co.uk/worldservice/learningenglish/"&gt;BCC Learning English szekci&#243;j&#225;t&lt;/a&gt;, rendk&#237;v&#252;l hasznos!&lt;/p&gt;
</description>
      <pubDate>Thu, 16 Apr 2009 00:00:00 +0200</pubDate>
      <guid>/posztok/nyelvtanulas_kedvtelesbol.html</guid>
    </item>
    <item>
      <title>Blogmotor kevesebb, mint 150 k&#243;dsorban</title>
      <link>http://csiszarattila.com/posztok/blog_legkevesebb_sorban.html</link>
      <description>&lt;p&gt;Ami&#243;ta &lt;a href="http://www.sinatrarb.com"&gt;Sinatr&#225;zom&lt;/a&gt; foglalkoztatott egy projekt gondolata: vajon legkevesebb h&#225;ny k&#243;dsorb&#243;l lehetne egy alapfunkci&#243;j&#250; blogmotort &#237;rni?&lt;/p&gt;
&lt;p&gt;Az alapfunkci&#243;kon a k&#246;vetkez&#337;ket &#233;rtem: bejegyz&#233;sek hozz&#225;ad&#225;sa/m&#243;dos&#237;t&#225;sa/t&#246;rl&#233;se, kommentel&#233;s lehet&#337;s&#233;ge, RSS a bejegyz&#233;sekr&#337;l. A c&#233;l mindezt, a HTML k&#243;dokkal egy&#252;tt, egy f&#225;jlban (!) megval&#243;s&#237;tani, a lehet&#337; legkevesebb k&#243;dsorral!&lt;/p&gt;
&lt;p&gt;Ma reggel bele is v&#225;gtam, &#233;s gyorsan siker&#252;lt is az elk&#233;pzelt funkci&#243;kat megval&#243;s&#237;tani. Els&#337; c&#233;lk&#233;nt 100 k&#243;dsort jel&#246;ltem meg - &#233;s itt j&#243;l form&#225;zott k&#243;dot &#233;rtek, nem egym&#225;sra tolt defin&#237;ci&#243;kat. Hamar kider&#252;lt azonban, hogy ezt nem siker&#252;l tartani a n&#233;zetek HTML k&#243;djai miatt, a Haml haszn&#225;lta ellen&#233;re. A k&#246;vetkez&#337; hat&#225;rt, a 150 k&#243;dsort m&#225;r b&#337;ven siker&#252;lt tartani, &#233;s v&#233;g&#252;l 137 sorban siker&#252;lt is meg&#225;llni.&lt;/p&gt;
&lt;p&gt;
  &lt;a href='http://github.com/csiszarattila/wakeup/blob/98f1fd17dc088d4404216d7d037a464db689cb55/wakeup.rb'&gt;Az elk&#233;sz&#252;lt m&#369;vet, illetve pr&#243;b&#225;lkoz&#225;st itt n&#233;zhetitek meg.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;A bejegyz&#233;st vehetitek felh&#237;v&#225;snak is! V&#225;rom m&#225;sok pr&#243;b&#225;lkoz&#225;sait is: &#237;rjatok hasonl&#243; funkci&#243;j&#250; blogot b&#225;rmiben, a lehet&#337; legkevesebb k&#243;ddal! &#205;gy legal&#225;bb &#233;n is t&#246;rhetem a fejem azon, hol lehetne m&#233;g faragni a saj&#225;t k&#243;domb&#243;l:)&lt;/p&gt;
</description>
      <pubDate>Sat, 28 Mar 2009 00:00:00 +0100</pubDate>
      <guid>/posztok/blog_legkevesebb_sorban.html</guid>
    </item>
    <item>
      <title>Kezd&#337;dik, kezd&#337;dik...F1 id&#233;nnyit&#243;!</title>
      <link>http://csiszarattila.com/posztok/f1_kezdodik.html</link>
      <description>&lt;p&gt;Az ismer&#337;s&#246;k &#233;s csal&#225;dtagok k&#246;z&#246;tt nem ismeretlen, hogy nagy Formula 1 rajong&#243; vagyok... alig tudok kiv&#225;rni minden versenyh&#233;tv&#233;g&#233;t. Ez&#233;rt is voltam egyre t&#252;relmetlenebb mikor kezd&#337;dik m&#225;r el az idei F1-es &#233;vad, nem is eml&#233;kszem kezd&#337;d&#246;tt-e ennyire k&#233;s&#337;n az ut&#243;bbi &#233;vekben. Megszokta az ember, hogy jav&#225;ban benne szoktunk j&#225;rni m&#225;rciusban amikor k&#233;t versenyt is lefutottak t&#246;bbnyire. (J&#243; h&#237;r viszont, hogy a szezonnyit&#243; Ausztr&#225;l Nagyd&#237;jat k&#246;zvetlen&#252;l k&#246;veti majd a Mal&#225;j GP).&lt;/p&gt;
&lt;p&gt;Nekem egy&#233;bk&#233;nt nincs igaz&#225;n nagy kedvencem - j&#243; tal&#225;n R&#228;ikk&#246;nen - de &#225;ltal&#225;ban a neutr&#225;lis oldalhoz tartozok - &#237;gy p&#233;ld&#225;ul nem csin&#225;lok &#233;rzelmi k&#233;rd&#233;st, hogy ki a jobb az Alonso-Hamilton-R&#228;ikk&#246;nen h&#225;rmasb&#243;l-, &#233;s az igaz&#225;n izgalmas futamok&#233;rt drukkolok. Amire a radik&#225;lis szab&#225;lyoknak k&#246;sz&#246;nhet&#337;en most nagyobb es&#233;ly lehet &#233;s kicsit &#246;sszezavarodhat a mez&#337;ny, szerintem az els&#337; versenyekig b&#337;ven lesznek meglepet&#233;sek, ut&#225;na nagy val&#243;sz&#237;n&#369;s&#233;ggel vissza&#225;ll a McLaren-Ferrari uralom - ezt mutatt&#225;k az els&#337; szabadedz&#233;sek is - de ne legyen igazam!&lt;/p&gt;
&lt;p&gt;A favoritjaim id&#233;n a vb c&#237;m&#233;rt: R&#228;ikk&#246;nen, Massa, Lewis, Alonso. Akire figyelni kell, mert zavart okozhat az &#369;rben: Vettel:).&lt;/p&gt;
&lt;p&gt;Annak akit &#233;rdekel &#233;n &#237;gy k&#246;vetem az esem&#233;nyeket &#233;v k&#246;zben:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Szabadedz&#233;sek&lt;/p&gt;
    &lt;p&gt;Na igen, ez &#225;ltal&#225;ban kem&#233;ny di&#243; szokott lenni. Ahhoz hogy &#233;l&#337;-k&#246;zvet&#237;t&#233;st fogjon az ember vad&#225;szni kell a kal&#243;z stream k&#246;zvet&#237;t&#233;sekre, tavaly a brit ITV internetes k&#246;zvet&#237;t&#233;s&#233;t sokan osztott&#225;k meg, vagy angol proxy szerveren kereszt&#252;l el&#233;rhet&#337; volt(IP alapj&#225;n csak a britek n&#233;zhett&#233;k). Id&#233;n a BBC-vel &#225;ll&#237;t&#243;lag nehezebb lesz.&lt;/p&gt;
    &lt;p&gt;
      &lt;strong&gt;Most olvasom, hogy a &lt;a href="http://www.adtelly.tv/index.php"&gt;Firefoxhoz l&#233;tezik egy ADtelly nev&#369; kieg&#233;sz&#237;t&#337; amivel kij&#225;tszhat&#243; az BBC Iplayer&lt;/a&gt; (&#233;s t&#233;nyleg m&#369;k&#246;dik!).&lt;/strong&gt;
    &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href='http://www.bbc.co.uk/radio/podcasts/cff1/'&gt;Chequered Flag Formula 1 Podcast&lt;/a&gt;
    &lt;br /&gt;
    &lt;p&gt;A BBC 5-&#246;s r&#225;di&#243;j&#225;nak m&#369;sora verseny el&#337;tti &#233;s ut&#225;ni elemz&#233;sekkel, interj&#250;kkal, a legjobb F1 &#250;js&#225;g&#237;r&#243;kkal, riporterekkel! F1 rajong&#243;knak k&#246;telez&#337;!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href='http://news.bbc.co.uk/sport1/hi/motorsport/formula_one/default.stm'&gt;BBC Sports Formula 1&lt;/a&gt;
    &lt;br /&gt;
    &lt;p&gt;Id&#233;nt&#337;l a BBC k&#246;zvet&#237;ti &#250;jra Angli&#225;ban a F1-t, a h&#237;roldaluk eddig sem volt gyenge, de k&#246;sz&#246;nhet&#337;en a teljes k&#246;zvet&#237;t&#233;snek most m&#225;r vide&#243;kkal &#233;s m&#233;g t&#246;bb inform&#225;ci&#243;val eg&#233;sz&#237;tik ki az oldalukat.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href='http://f1vilag.hu'&gt;F1vil&#225;g.hu&lt;/a&gt;
    &lt;br /&gt;
    &lt;p&gt;Annak aki magyarul szeretn&#233; &#233;lvezni a h&#237;reket. Egy kis rekl&#225;m csin&#225;lok ennek az oldalnak - n&#233;zz&#233;tek el r&#233;gi ismerts&#233;g k&#246;t az oldal k&#233;sz&#237;t&#337;j&#233;hez (&#336; is megsz&#225;llott F1 rajong&#243;, &#233;s el&#233;g sokat k&#246;sz&#246;nhetek neki).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href='http://autosport.com'&gt;Autosport.com&lt;/a&gt;
    &lt;br /&gt;
    &lt;p&gt;A leghitelesebb F1-es h&#237;roldal, itt is a t&#369;z k&#246;zel&#233;ben l&#233;v&#337; &#250;js&#225;g&#237;r&#243;k publik&#225;lnak, sok &#233;rdekes tartalommal - a t&#246;bbs&#233;g&#252;k&#233;rt fizetni kell.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    Torrent oldalak...
    &lt;p&gt;Nem szeretn&#233;m itt rekl&#225;mozni, honnan lehet teljes (ak&#225;r bels&#337; kamer&#225;s!) futamokat is let&#246;lteni, de akit &#233;rdekel email-en kereszt&#252;l sz&#237;vesen megosztom.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href='http://www.f1racing.co.hu/'&gt;F1Racing &#250;js&#225;g&lt;/a&gt;
    &lt;br /&gt;
    &lt;p&gt;Nagy k&#225;r, hogy havonta jelenik meg... &#233;s szivesebben olvasn&#225;m angolul, b&#225;r a magyar ford&#237;t&#225;s is nagyon j&#243;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href='https://launchpad.net/live-f1'&gt;F1-live live timing (parancssorban)&lt;/a&gt;
    &lt;br /&gt;
    &lt;p&gt;Az F1-liveon el&#233;rhet&#337; live-timing rendszer...csak ehhez nem kell Java, ja &#233;s konzolon fut:)...linux-f1 m&#225;ni&#225;soknak k&#246;telez&#337;. OSX alatt sem neh&#233;z compileolni.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ezzel k&#237;v&#225;nok minden F1 rajong&#243; t&#225;rsamnak j&#243; szezont!;)&lt;/p&gt;
</description>
      <pubDate>Thu, 26 Mar 2009 00:00:00 +0100</pubDate>
      <guid>/posztok/f1_kezdodik.html</guid>
    </item>
    <item>
      <title>Metamorfozis</title>
      <link>http://csiszarattila.com/posztok/metamorfozis.html</link>
      <description>&lt;p&gt;Kisebb (ink&#225;bb nagyobb) &#225;talakul&#225;son esett &#225;t a Rubyszt&#225;n blog. A kor&#225;bbi hosszabb l&#233;legzetv&#233;tel&#369; le&#237;r&#225;sok mellett helyet szerettem volna szor&#237;tani a r&#246;videbb, nemcsak a Rubyt &#233;s programoz&#225;st &#233;rint&#337; t&#233;&#225;knak is - ezekre a r&#233;gi strukt&#250;r&#225;ban &#233;s form&#225;ban nem volt igaz&#225;n lehet&#337;s&#233;g. Egy k&#252;l&#246;n&#225;ll&#243; blog l&#233;trehoz&#225;s&#225;t nem tartottam &#233;sszer&#369;nek: a tartalmak friss&#237;t&#233;se, megoszt&#225;sa &#233;s k&#246;vet&#233;se t&#250;l bonyolult lett volna sz&#225;momra &#233;s sz&#225;motokra is. &#218;gyhogy ezent&#250;l kib&#337;v&#237;tett tartalommal jelentkezik a Rubyszt&#225;n blog!&lt;/p&gt;
&lt;p&gt;A tartalmi v&#225;ltoztat&#225;s a nyit&#243;oldal struktur&#225;j&#225;t is &#233;rintette: a r&#246;videbb bejegyz&#233;seket baloldalt, teljes hosszukban olvashatj&#225;tok, m&#237;g a kor&#225;bbi &#233;s a j&#246;v&#337;beni hosszabb tartalmak, azaz cikkek list&#225;j&#225;t jobboldalt tal&#225;lj&#225;tok meg. Ez&#233;rt k&#233;rem, akik (rss) h&#237;rolvas&#243;n kereszt&#252;l k&#246;vetik a blogot is vessenek r&#225; egy pillant&#225;st:). A hozz&#225;sz&#243;l&#225;s lehet&#337;s&#233;ge term&#233;szetesen tov&#225;bbra is megmaradt, s&#337;t mindenkit arra buzd&#237;tok, hogy tegye meg!&lt;/p&gt;
&lt;p&gt;Ami az oldal &lt;strong&gt;technikai r&#233;sz&#233;t&lt;/strong&gt; illeti: a blog alatt egy saj&#225;t, &lt;a href="http://www.sinatrarb.com"&gt;Sinatr&#225;ra&lt;/a&gt; &#233;p&#252;l&#337; rendszer fut. A bejegyz&#233;sek &#233;s cikkek adatb&#225;zis helyett sz&#246;veges f&#225;jlokban t&#225;rol&#243;dnak: a hozz&#225;juk kapcsol&#243;d&#243; fontosabb meta-inform&#225;ci&#243;k (pl. l&#233;trehoz&#225;si d&#225;tum) YAML form&#225;tumban a sz&#246;veg elej&#233;n, maga a tartalom egyszer&#369; Haml form&#225;tumban tal&#225;lhat&#243; meg. &#205;gy k&#233;nyelmesen, egy k&#243;deditorral, webes fel&#252;let n&#233;lk&#252;l szerkeszthetem a sz&#246;veget. A kommentek ezzel szemben egy t&#246;rpe SQLite adatb&#225;zisban kapnak helyet - ezeket egy ActiveRecord modellen kereszt&#252;l kezelem, &#237;gy nem kell az SQL lek&#233;rdez&#233;sek &#246;ssze&#225;ll&#237;t&#225;s&#225;val bajl&#243;dni. Ezenfel&#252;l &#237;rtam hozz&#225; p&#225;r automatizmust - bejegyz&#233;sek l&#233;trehoz&#225;sa, felt&#246;lt&#233;se az &#233;les szerverre - v&#233;grehajt&#243; Rake parancsot is.&lt;/p&gt;
</description>
      <pubDate>Sat, 07 Mar 2009 00:00:00 +0100</pubDate>
      <guid>/posztok/metamorfozis.html</guid>
    </item>
    <item>
      <title>A CouchDB tal&#225;lkoz&#225;sa a Rubyval</title>
      <link>http://csiszarattila.com/tutorialok/couchdb_rubyban.html</link>
      <description>&lt;p&gt;&lt;a href="/tutorialok/couchdb.html"&gt;A bejegyz&#233;s els&#337; r&#233;sz&#233;ben l&#225;thattuk&lt;/a&gt;, hogy a REST API-nak k&#246;sz&#246;nhet&#337;en hogyan tudjuk a CouchDB-t el&#233;rni &#233;s haszn&#225;lni. Mindez azt jelenti, hogy erre &#233;p&#237;tve Rubyban is nagyon egyszer&#369;en tudunk az adatb&#225;ziskezel&#337;vel kommunik&#225;lni, a &lt;a href="http://wiki.apache.org/couchdb/Getting_started_with_Ruby"&gt; CouchDB dokument&#225;ci&#243;j&#225;ban tal&#225;lunk is egy ezt megval&#243;s&#237;t&#243; oszt&#225;lyt&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A HTTP kommunik&#225;ci&#243;t &#233;rdemes a Ruby be&#233;p&#237;tett Net::HTTP modulj&#225;ra b&#237;zni. Ami fontosabb, hogy nyilv&#225;n nem JSON adatform&#225;tummal, hanem Ruby oszt&#225;lyokkal szeretn&#233;nk dolgozni: az adatb&#225;zisb&#243;l &#233;rkez&#337; adatokat Ruby objektumokk&#233;nt kapjuk meg, majd ugyan&#237;gy, az adatb&#225;zisba &#237;r&#225;skor is el tudjunk menteni a Ruby objektumokat. A JSON gem ezt az "&#225;tj&#225;r&#225;st" meg is val&#243;s&#237;tja a sz&#225;munkra, teh&#225;t k&#252;l&#246;n&#246;sebb agg&#225;lyunk ezzel kapcsolatban sem lehet.&lt;/p&gt;
&lt;p&gt;Ennek t&#252;kr&#233;ben nem is csoda, hogy t&#246;bb Ruby interf&#233;sz is k&#233;sz&#252;lt a CouchDB-hez, amelyek elv&#233;gzik helyett&#252;nk a "piszkos munk&#225;t". A k&#246;vetkez&#337;kben ezek haszn&#225;lat&#225;val ismerkedhet&#252;nk meg.&lt;/p&gt;
&lt;h2&gt;CouchRest&lt;/h2&gt;
&lt;h4&gt;Telep&#237;t&#233;s:&lt;/h4&gt;
&lt;pre&gt;sudo gem install couchrest&lt;/pre&gt;
&lt;p&gt;A CouchRest igaz&#225;n leegyszer&#369;s&#237;ti a dolgunkat. El&#233;g mind&#246;ssze egy URL seg&#237;ts&#233;g&#233;vel csatlakoz&#225;st l&#233;trehozni a CouchDB-s adatb&#225;zisunkhoz, a csatlakoz&#225;st pedig referencia-v&#225;ltoz&#243;k&#233;nt felhaszn&#225;lva m&#369;veleteket v&#233;gezni:&lt;/p&gt;
&lt;pre&gt;require 'rubygems'&amp;#x000A;require 'couchrest'&amp;#x000A;&amp;#x000A;@db = CouchRest.database!("http://localhost:5984/books")&amp;#x000A;&amp;#x000A;doc = @db.get("couchdb_cikk")&amp;#x000A;=&gt; {"_rev"=&gt;"3172282319", "_id"=&gt;"couchdb_cikk", &amp;#x000A;  "_attachments"=&gt;{"csatolt.txt"=&gt;{"content_type"=&gt;"text/plain", "stub"=&gt;true, "length"=&gt;18}}}&lt;span class="signal"&gt;1&lt;/span&gt;&amp;#x000A;&amp;#x000A;response = @db.save(&amp;#x000A;  {&amp;#x000A;    "id"=&gt;"wpgtr",&amp;#x000A;    :title=&gt;"Why's (poignant) guide to Ruby", &amp;#x000A;    :author=&gt;"why the lucky stiff",&amp;#x000A;    :motto=&gt;"chunky bacon!",&amp;#x000A;    :chapters=&gt;&amp;#x000A;    [&amp;#x000A;      "Kon&#8217;nichi wa, Ruby",&amp;#x000A;      "A Quick (and Hopefully Painless) Ride Through Ruby (with Cartoon Foxes)",&amp;#x000A;      "Floating Little Leaves of Code"&amp;#x000A;    ]&amp;#x000A;  }&lt;span class="signal"&gt;2&lt;/span&gt;&amp;#x000A;)&amp;#x000A;&amp;#x000A;response&amp;#x000A;=&gt; {"rev"=&gt;"887962467", "id"=&gt;"wpgtr", "ok"=&gt;true}&amp;#x000A;&amp;#x000A;@db.view('posts/find_by_title')&lt;span class="signal"&gt;3&lt;/span&gt;&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Mint l&#225;that&#243; az adatokat egyszer&#369; Ruby hashekk&#233;nt tudjuk kezelni&lt;span class="signal"&gt;1&lt;/span&gt;&lt;span class="signal"&gt;2&lt;/span&gt;. A n&#233;zetek l&#233;trehoz&#225;sa &#233;s lek&#233;rdez&#233;se&lt;span class="signal"&gt;3&lt;/span&gt; sem neh&#233;zkes h&#225;la a REST API-nak.&lt;/p&gt;
&lt;p&gt;A CouchRest r&#225;ad&#225;sul rendelkezik egy be&#233;p&#237;tett ORM megold&#225;ssal a CouchRest::Model oszt&#225;llyal, ha hash-ek helyett kicsit objektum-orient&#225;ltabban szeretn&#233;nk kezelni az adatokat, p&#233;ld&#225;ul modelleket szeretn&#233;nk alkalmazni.&lt;/p&gt;
&lt;p&gt;Haszn&#225;lat&#225;hoz el&#337;bb telep&#237;ts&#252;k az extlib gem-et mivel ez valahogy kimaradt a CouchRest f&#252;gg&#337;s&#233;gei k&#246;z&#252;l.&lt;/p&gt;
&lt;pre&gt;sudo gem install extlib&lt;/pre&gt;
&lt;p&gt;N&#233;zz&#252;nk a haszn&#225;lat&#225;ra egy teljes p&#233;ld&#225;t:&lt;/p&gt;
&lt;pre&gt;require 'rubygems'&amp;#x000A;require 'couchrest'&amp;#x000A;&amp;#x000A;class Book &lt; CouchRest::Model&amp;#x000A;  use_database CouchRest.database('http://localhost:5984/books')&amp;#x000A;  &amp;#x000A;  key_accessor :title, :author, :category &lt;span class="signal"&gt;1&lt;/span&gt;&amp;#x000A;  cast :author, :as=&gt; 'Author' &lt;span class="signal"&gt;2&lt;/span&gt;&amp;#x000A;  &amp;#x000A;  view_by :ruby, &lt;span class="signal"&gt;3&lt;/span&gt;&amp;#x000A;  :map=&gt;"function(doc){ if(doc.category == 'ruby') emit(null,doc) }"&amp;#x000A;  &amp;#x000A;  unique_id :title &lt;span class="signal"&gt;5&lt;/span&gt;&amp;#x000A;  before(:save, :convert_title) &lt;span class="signal"&gt;5&lt;/span&gt;&amp;#x000A;  def convert_title &lt;span class="signal"&gt;5&lt;/span&gt;&amp;#x000A;    self["title"] = title.gsub(/ /,'_')&amp;#x000A;  end&amp;#x000A;  &amp;#x000A;end&amp;#x000A;&amp;#x000A;class Author &lt; CouchRest::Model &lt;span class="signal"&gt;2&lt;/span&gt;&amp;#x000A;  key_accessor :name&amp;#x000A;end&amp;#x000A;&amp;#x000A;rails_book = Book.new&amp;#x000A;&amp;#x000A;rails_book.title= "Ruby for Rails" &lt;span class="signal"&gt;1&lt;/span&gt;&amp;#x000A;dt = Author.new() &amp;#x000A;dt.name= "Dave Thomas" &lt;span class="signal"&gt;2&lt;/span&gt;&amp;#x000A;rails_book.author.name= dt &lt;span class="signal"&gt;1&lt;/span&gt;&amp;#x000A;rails_book.category= "rails" &lt;span class="signal"&gt;1&lt;/span&gt;&amp;#x000A;&amp;#x000A;rails_book.save&amp;#x000A;&amp;#x000A;rails_book = Book.all[0]&amp;#x000A;rails_book.update_attributes({:author=&gt;{:name=&gt;"David A. Black"},:category=&gt;"ruby"})&amp;#x000A;&amp;#x000A;Book.all[0].author.name &lt;span class="signal"&gt;4&lt;/span&gt;&amp;#x000A;&amp;#x000A;Book.by_ruby &lt;span class="signal"&gt;3&lt;/span&gt;&amp;#x000A;=&gt; [{"category"=&gt;"ruby", "author"=&gt;{"name"=&gt;"David A. Black", "couchrest-type"=&gt;"Author"},&amp;#x000A;   "title"=&gt;"Ruby_for_Rails", "_rev"=&gt;"2415607020", "_id"=&gt;"Ruby_for_Rails", "couchrest-type"=&gt;"Book"}]&amp;#x000A;&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Ahhoz, hogy a dokumentumunk tulajdons&#225;gait met&#243;dusokkal &#233;rhess&#252;k el&lt;span class="signal"&gt;1&lt;/span&gt;, el&#337;bb defini&#225;lnunk kell &#337;ket a &lt;strong&gt;key_accessor&lt;/strong&gt;ral, a Ruby setter/getter seg&#233;dmet&#243;dusaihoz hasonlatosan. A tulajdons&#225;gokat lehet&#337;s&#233;g van oszt&#225;lyokra&lt;span class="signal"&gt;2&lt;/span&gt; is lek&#233;pezni, teh&#225;t nemcsak az egyszer&#369; Ruby t&#237;pusokat (Array,String,Hash stb.) haszn&#225;lhatjuk. A modellekhez n&#233;zeteket is defini&#225;lhatunk&lt;span class="signal"&gt;3&lt;/span&gt; - ezek beker&#252;lnek az adatb&#225;zisba is -, amelyeket met&#243;dusokk&#233;nt h&#237;vhatunk meg. Be&#233;p&#237;tettk&#233;nt is kapunk p&#225;rat, p&#233;ld&#225;ul az &lt;span class="signal"&gt;4&lt;/span&gt; &#246;sszes dokumentumot visszaad&#243; all-t, de ugyan&#237;gy a tulajdons&#225;gokkal is (pl. by_title), amelyeket lehet&#337;s&#233;g&#252;nk van egym&#225;sba is &#225;gyazni, a Rails named_scope-jaihoz hasonlatosan.&lt;/p&gt;
&lt;p&gt;Az unique_id lehet&#337;v&#233; teszi, hogy egy met&#243;dust megnevezz&#252;nk&lt;span class="signal"&gt;5&lt;/span&gt;, amelyben azut&#225;n egyedi azonos&#237;t&#243;t gener&#225;lunk, ez ker&#252;l majd az dokument _id mez&#337;j&#233;be - a fenti p&#233;ld&#225;ban a k&#246;nyv c&#237;m&#233;t (title attrib&#250;tum) haszn&#225;ltuk fel erre.&lt;/p&gt;
&lt;p&gt;A CouchRest::Model egy eg&#233;sz j&#243;l haszn&#225;lhat&#243; ORM, r&#225;ad&#225;sul sok hasonl&#243;s&#225;got mutat az ActiveRecorddal, &#237;gy haszn&#225;lata nem jelent t&#250;l nagy gondot, ugyanakkor nem t&#250;l biztos a j&#246;v&#337;je: a fejleszt&#233;se le&#225;llt &#233;s val&#243;sz&#237;n&#369;leg &lt;a href="http://groups.google.com/group/couchrest/browse_thread/thread/fe83daccf26128d8"&gt;hamarosan ki is ker&#252;l a CouchRest gem-b&#337;l&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Szerencs&#233;re azonban vannak alternat&#237;v&#225;ink.&lt;/p&gt;
&lt;h2&gt;CouchObject&lt;/h2&gt;
&lt;h4&gt;Telep&#237;t&#233;s:&lt;/h4&gt;
&lt;pre&gt;sudo gem install couchrest&lt;/pre&gt;
&lt;p&gt;A CouchObject a CouchResthez k&#233;pest kib&#337;v&#237;tett utas&#237;t&#225;sokkal, &#233;s APIval rendelkezik. Igaz&#225;b&#243;l A CouchObjectet kellene CouchRestnek h&#237;vni, mivel az adatb&#225;zis-kezel&#233;st illet&#337;en a met&#243;dusok m&#369;k&#246;d&#233;se jobban illeszkedik a REST elvekhez. Ehhez l&#225;sd a k&#246;vetkez&#337; p&#233;ld&#225;t:&lt;/p&gt;
&lt;pre&gt;require 'rubygems'&amp;#x000A;require 'couch_object'&amp;#x000A;require 'json'&amp;#x000A;&amp;#x000A;db = CouchObject::Database.open("http://localhost:5984/books")&amp;#x000A;&amp;#x000A;doc = db.get('wpgtr') &amp;#x000A;=&gt;#&amp;lt;CouchObject::Response:0x14db2f4 ...&amp;gt;&amp;#x000A;&amp;#x000A;# JSON form&#225;tum&amp;#x000A;doc.body&amp;#x000A;=&gt; "{\"_id\":\"wpgtr\",\"_rev\":\"1415663406\" ... }"&amp;#x000A;# Ruby form&#225;tum&amp;#x000A;doc.parsed_body&amp;#x000A;=&gt; {"title"=&gt;"Why's (poignant) guide to Ruby", &amp;#x000A;  "chapters"=&gt;&amp;#x000A;  [&amp;#x000A;    "Kon&#8217;nichi wa, Ruby", &amp;#x000A;    "A Quick (and Hopefully Painless) Ride Through Ruby (with Cartoon Foxes)", &amp;#x000A;    "Floating Little Leaves of Code"&amp;#x000A;  ]}&amp;#x000A;&amp;#x000A;wpgtr_expak_one = {&amp;#x000A;  :title=&gt;"Expansion Pak I: The Tiger&#8217;s Vest",&amp;#x000A;  :author=&gt;"why the lucky stiff",&amp;#x000A;  :description=&gt;"There was once a tiger who wore a vest, but that wasn't his biggest problem.&amp;#x000A;   Because the earth was going to crash into the Sun!"&amp;#x000A;}&amp;#x000A;&amp;#x000A;db.put('wpgtr',JSON.unparse(wpgtr_expak_one))&amp;#x000A;=&gt;#&amp;lt;CouchObject::Response:0x14d8388 ..&amp;gt;&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A CouchObject minden k&#233;r&#233;skor egy &lt;strong&gt;CouchObject::Response&lt;/strong&gt; objektummal v&#225;laszol, amelyben megtal&#225;ljuk a HTTP fejl&#233;ceket is - &#237;gy kicsit k&#246;nnyebb dolgunk van a hib&#225;k kezel&#233;sekor - r&#225;ad&#225;sul el&#233;rhetj&#252;k mind az eredeti JSON &#252;zenetet ( &lt;strong&gt;body&lt;/strong&gt; ), mind a Ruby objektumokra &#225;talak&#237;tottat ( &lt;strong&gt;parsed_body&lt;/strong&gt; ) egy egy met&#243;dussal.&lt;/p&gt;
&lt;p&gt;&#201;rdekess&#233;g, hogy a n&#233;zeteket nemcsak a get met&#243;dussal &#233;s k&#233;r&#233;ssel &#233;rhetj&#252;k el, hanem objektumokk&#233;nt (&lt;strong&gt;CouchObject::View&lt;/strong&gt;) is defini&#225;lhatjuk &#337;ket. P&#233;ldak&#233;nt hozzunk l&#233;tre egy _desing/books/all nev&#369; n&#233;zetet, majd k&#233;rdezz&#252;k le az eredm&#233;ny&#233;t:&lt;/p&gt;
&lt;pre&gt;db = CouchObject::Database.open("http://localhost:5984/books")&amp;#x000A;&amp;#x000A;CouchObject::View.create(db,"books",'{ "language": "javascript",&amp;#x000A;"views" : {"all" : {"map" : "function(doc) {emit(null,doc)}"}} }')&amp;#x000A;&amp;#x000A;CouchObject::View.new(db,"books/all").query&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A CouchObject rendelkezik egy speci&#225;lis oszt&#225;llyal(&lt;strong&gt;CouchObject::Document&lt;/strong&gt;) is, amely egyszer&#369;bb&#233; teszi a JSON-ban kapott dokumentumok kezel&#233;s&#233;t:&lt;/p&gt;
&lt;pre&gt;doc = db.get("wpgtr")&amp;#x000A;&amp;#x000A;wpgtr = doc.to_document # =&gt; #&amp;lt;CouchObject::Document ...&amp;gt;&amp;#x000A;&amp;#x000A;wpgtr.title # =&gt; "Why's (poignant) guide to Ruby"&amp;#x000A;wpgtr.author # =&gt; "why the lucky stiff"&amp;#x000A;&amp;#x000A;wpgtr["characters"] = ["The elf with a pet ham","Trady Blix", "Starmonkey"]&amp;#x000A;&amp;#x000A;wpgtr.save(db)&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Eml&#233;kezz, hogy a CouchObject a k&#233;r&#233;sek v&#225;laszaik&#233;nt nem egy dokumentumot, hanem mindig egy Response objektumot ad vissza, &#237;gy ez tartalmazza a a JSON v&#225;laszt is. Ebb&#337;l egyszer&#369;en a &lt;strong&gt;to_document&lt;/strong&gt; met&#243;dussal tudunk egy CouchObject::Document objektumot visszaadni, ezzel a Hash-ekhez k&#233;pest n&#233;mileg egyszer&#369;bben tudjuk a dokumentum tulajdons&#225;gait el&#233;rni/szerkeszteni.&lt;/p&gt;
&lt;p&gt;Egy m&#225;sik hasznos megold&#225;s a &lt;strong&gt;CouchObject::Persistable&lt;/strong&gt; modul, amellyel Rubys objektumainkat tudjuk CouchDB dokumentumokk&#225; alak&#237;tani. Haszn&#225;lat&#225;hoz el&#233;g a modult be 'mixin-elni' az oszt&#225;lyunkba, &#233;s m&#225;ris el&#233;rhet&#337;v&#233; v&#225;lnak a CouchDB-t el&#233;r&#337; met&#243;dusok - &#237;gy lehet&#337;v&#233; v&#225;lik az objektumok dokumentumokk&#225; alak&#237;t&#225;sa majd lek&#233;r&#233;skor a visszaalak&#237;t&#225;suk:&lt;/p&gt;
&lt;pre&gt;class Book&amp;#x000A;  include CouchObject::Persistable&amp;#x000A;  database 'http://localhost:5984/books' &lt;span class="signal"&gt;1&lt;/span&gt;&amp;#x000A;&amp;#x000A;  attr_accessor :author, :title, :year&amp;#x000A;&amp;#x000A;  def initialize(author, title, year)&amp;#x000A;    @author, @title, @year = author, title, year&amp;#x000A;  end&amp;#x000A;&amp;#x000A;  def self.from_couch(attributes)&amp;#x000A;    new attributes["author"], attributes["title"], attributes["year"]&amp;#x000A;  end&amp;#x000A;end&amp;#x000A;&amp;#x000A;data = Book.new("Ruby for Rails", "David A. Black", 2005).save() &amp;#x000A;=&gt; {:revision=&gt;"374633541", :id=&gt;"6f2f22fc0e80a76fd253365201e243c1"}&amp;#x000A;&amp;#x000A;rfr = Book.get(data[:id]) &amp;#x000A;=&gt; #&amp;lt;Book:0x14d5fd4 ...&amp;gt;&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Az oszt&#225;lyunkban opcion&#225;lisan megadhatjuk mely adatb&#225;zist haszn&#225;lja&lt;span class="signal"&gt;1&lt;/span&gt; ment&#233;skor illetve lek&#233;r&#233;skor, &#237;gy nem kell minden alkalommal a &lt;em&gt;save&lt;/em&gt; &#233;s &lt;em&gt;get&lt;/em&gt; met&#243;dusoknak megadnunk az el&#233;r&#233;st. A CouchObject a ment&#233;s illetve a visszaalak&#237;t&#225;s seg&#237;t&#233;s&#233;re k&#233;t met&#243;dust a &lt;strong&gt;to_couch&lt;/strong&gt; ill. a &lt;strong&gt;from_couch-t&lt;/strong&gt; is a rendelkez&#233;s&#252;nkre bocs&#225;jtja. Ezekkel kicsit bonyolultabb logik&#225;t rendelhet&#252;nk az objektumok dokumentumokb&#243;l val&#243; vissza&#225;ll&#237;t&#225;sakor &#233;s ford&#237;tva. Ha a konstruktorunk p&#233;ld&#225;ul param&#233;tereket is v&#225;r, akkor ut&#243;bbit mindenk&#233;ppen haszn&#225;lnunk kell m&#225;sk&#252;l&#246;nben a CouchObject nem tudja majd az objektumot l&#233;trehozni a dokumentumb&#243;l.&lt;/p&gt;
&lt;p&gt;A CouchObject is lehet&#337;v&#233; teszi, hogy adott attrib&#250;tumokat tov&#225;bbi oszt&#225;lyokra k&#233;pezz&#252;nk le - a CouchResthez hasonl&#243;an.&lt;/p&gt;
&lt;pre&gt;class Book&amp;#x000A;  ...&amp;#x000A;  def initialize(author, title, year)&amp;#x000A;  &lt;strong&gt;@author = Author.new(author)&lt;/strong&gt;&lt;span class="signal"&gt;1&lt;/span&gt;&amp;#x000A;  @title, @year = title, year&amp;#x000A;  end&amp;#x000A;  ...&amp;#x000A;end&amp;#x000A;&amp;#x000A;class Author&amp;#x000A;  include CouchObject::Persistable&amp;#x000A;&amp;#x000A;  def initialize(name)&amp;#x000A;    @name = name&amp;#x000A;  end&amp;#x000A;end&amp;#x000A;&amp;#x000A;rfr = Book.get('18c7df416f4f5cea94b1e420c614d4a1') &amp;#x000A;rfr.author&amp;#x000A;=&gt; #&amp;lt;Author ...&amp;gt;&amp;#x000A;&lt;/pre&gt;
&lt;em&gt;A p&#233;ld&#225;t tekintsd &#250;gy, mintha az el&#337;z&#337; p&#233;lda Book oszt&#225;ly&#225;t fel&#252;ldefini&#225;ltuk volna.&lt;/em&gt;
&lt;p&gt;Ebben az esetben az attrib&#250;tum &#233;rt&#233;ke k&#246;zvetlen&#252;l a dokumentumban t&#225;rol&#243;dik&lt;span class="signal"&gt;1&lt;/span&gt;, de a CouchObject - a CouchResthez k&#233;pest pluszk&#233;nt - lehet&#337;v&#233; teszi, hogy m&#225;s dokumentumokra is hivatkozhassunk. &#205;gy a rel&#225;ci&#243;s adatb&#225;zisokn&#225;l megszokott kapcsolatokat (N-N, 1-N, 1-1) is l&#233;trehozhatunk az egyes dokumentumok &#233;s oszt&#225;lyok k&#246;z&#246;tt - mint l&#225;tni fogjuk ez a funkci&#243; nagyon hasonl&#237;t az ActiveRecord megold&#225;s&#225;hoz. N&#233;zz&#252;nk erre is egy p&#233;ld&#225;t:&lt;/p&gt;
&lt;pre&gt;class Book&amp;#x000A;  include CouchObject::Persistable&amp;#x000A;  database 'http://localhost:5984/books'&amp;#x000A;&amp;#x000A;  belongs_to :publisher, :as =&gt; :books&amp;#x000A;end&amp;#x000A;&amp;#x000A;class Publisher&amp;#x000A;  include CouchObject::Persistable&amp;#x000A;  database 'http://localhost:5984/books'&amp;#x000A;&amp;#x000A;  has_many :books&amp;#x000A;end&amp;#x000A;&amp;#x000A;book = Book.get('18c7df416f4f5cea94b1e420c614d4a1') &amp;#x000A;book.publisher = Publisher.new()&amp;#x000A;book.save&amp;#x000A;&amp;#x000A;book.publisher.books[0] == book &amp;#x000A;=&gt; true&amp;#x000A;&lt;/pre&gt;
&lt;em&gt;Ism&#233;t csak tekintsd &#250;gy, mintha az el&#337;z&#337; p&#233;ld&#225;nk oszt&#225;lyait kiterjesztett&#252;k volna.&lt;/em&gt;
&lt;p&gt;Mint tal&#225;n &#233;szrevetted a kapcsolatok a:&lt;/p&gt;
&lt;pre&gt;belongs_to :kapcsolat_neve, :as =&gt; :has_many_kapcsolat_neve&amp;#x000A;has_many :has_many_kapcsolat_neve&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;elnevez&#233;st k&#246;vetik, &#233;s ez ugyan&#237;gy alkalmazhat&#243; az 1-1 kapcsolatokhoz is - itt ugye a has_one, belongs_to p&#225;rost kell haszn&#225;lnunk. Ezzel m&#225;r tulajdonk&#233;ppen el&#233;g k&#233;nyelmes kis kapcsolati h&#225;l&#243;t tudunk l&#233;trehozni az oszt&#225;lyok &#233;s &#237;gy az objektumok k&#246;z&#246;tt, komplex dokumentumok kezel&#233;s&#233;n&#233;l ez mindenk&#233;pp j&#243;l j&#246;het.&lt;/p&gt;
&lt;p&gt;Ugyanakkor arra figyelj&#252;nk, hogy mind a CouchObject, mind a CouchRest 'teleszemeteli' a dokumentumokat az tulajdons&#225;gokhoz tartoz&#243; oszt&#225;lyok nev&#233;vel &#233;s ez nem f&#233;lt&#233;tlen&#252;l hasznos akkor, ha a Rubyban &#237;rt alkalmaz&#225;son k&#237;v&#252;l is szeretn&#233;nk az adatainkat lek&#233;rdezni &#233;s haszn&#225;lni.&lt;/p&gt;
&lt;p&gt;V&#233;g&#252;l harmadik versenyz&#337;k&#233;nt a RelaxDB-t n&#233;zz&#252;k meg.&lt;/p&gt;
&lt;h2&gt;RelaxDB&lt;/h2&gt;
&lt;h4&gt;Telep&#237;t&#233;s&lt;/h4&gt;
&lt;p&gt;Ha m&#233;g nem tett&#252;k volna, ezzel a paranccsal adjuk hozz&#225; a gemforr&#225;sok list&#225;j&#225;hoz a GitHubot:&lt;/p&gt;
&lt;pre&gt;gem sources -a http://gems.github.com&lt;/pre&gt;
&lt;p&gt;Majd a gem telep&#237;t&#233;s&#233;hez adjuk ki a k&#246;vetkez&#337; parancsot:&lt;/p&gt;
&lt;pre&gt;sudo gem install paulcarey-relaxdb&lt;/pre&gt;
&lt;p&gt;A RelaxDB sokkal ink&#225;bb egy ORM megold&#225;s, mint egy szimpla Ruby interf&#233;sz a CoucDB-hez - ami egyfel&#337;l j&#243;, mert mindent a kez&#252;nkbe ad, de t&#250;lkomplik&#225;ltt&#225; is teheti a dolgokat amikor valami egyszer&#369;bb megold&#225;sra v&#225;gyunk.&lt;/p&gt;
&lt;p&gt;Els&#337;k&#233;nt l&#225;ssuk az el&#337;z&#337; p&#233;lda megold&#225;s&#225;t a RelaxDB seg&#237;ts&#233;g&#233;vel:&lt;/p&gt;
&lt;pre&gt;require 'rubygems'&amp;#x000A;require 'relaxdb'&amp;#x000A;&amp;#x000A;RelaxDB.configure :host =&gt; 'localhost', :port =&gt; 5984&amp;#x000A;RelaxDB.use_db 'books'&amp;#x000A;&amp;#x000A;&amp;#x000A;class Book &lt; RelaxDB::Document&amp;#x000A;  property :author&amp;#x000A;  property :title&amp;#x000A;  property :year, :validator =&gt; lambda{ |y| y &gt; 2005}, :validation_msg =&gt; "2005 el&#337;tt nem is volt Rails"&amp;#x000A;&amp;#x000A;  belongs_to :publisher, :class =&gt; 'Publisher'&amp;#x000A;end&amp;#x000A;&amp;#x000A;class Publisher &lt; RelaxDB::Document&amp;#x000A;&amp;#x000A;  has_many :books&amp;#x000A;end&amp;#x000A;&amp;#x000A;Book.new({:title=&gt;"Agile Web Development with Rails", :author=&gt;"Dave Thomas", :year=&gt;2006, '_id'=&gt;"awdwr"}).save&amp;#x000A;&amp;#x000A;book = Book.new({:title=&gt;"Yet Another Rails book", :year=&gt;2002 })&amp;#x000A;book.save&amp;#x000A;=&gt; false&amp;#x000A;book.errors&amp;#x000A;=&gt; {:year=&gt;"2005 el&#337;tt nem is volt Rails"}&amp;#x000A;&amp;#x000A;book.publisher = Publisher.new()&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A RelaxDB eset&#233;ben explicite meg kell adnunk a modell&#252;nk tulajdons&#225;gait, viszont mindj&#225;rt rendelhet&#252;nk mell&#233;j&#252;k valid&#225;torokat is, ez el&#233;g kezdetleges megold&#225;s de m&#369;k&#246;dik. A kapcsolatok l&#233;trehoz&#225;sa is a m&#225;r szokott m&#243;don t&#246;rt&#233;nik - a RelaxDB am&#250;gy is meglehet&#337;sen az ActiveRecord konvenci&#243;it k&#246;veti, &#250;gyhogy sok meglepet&#233;s nem &#233;rhet benn&#252;nket.&lt;/p&gt;
&lt;p&gt;A RelaxDB h&#225;tr&#225;nya ugyanakkor, hogy abszol&#250;t nincs dokument&#225;lva. Az elindul&#225;shoz j&#243; alapot ny&#250;jt a gem README f&#225;jl&#225;nak az elolvas&#225;sa, de egy&#233;bk&#233;nt a forr&#225;sk&#243;d tanulm&#225;nyoz&#225;s&#225;ra lesz sz&#252;ks&#233;g&#252;nk, ha minden funkci&#243;j&#225;t szeretn&#233;nk megtal&#225;lni. Ebben a programhoz &#237;rt tesztek &#225;tfut&#225;sa j&#243; szolg&#225;ltatot tehet. Arra azonban &#252;gyelj&#252;nk, hogy a leg&#250;jabb gem m&#225;r a CouchDB trunk (0.9-es) v&#225;ltozat&#225;ra &#233;p&#237;t, &#237;gy sok funkci&#243;t nem &#233;rhet&#252;nk el a MacPortson kereszt&#252;l telep&#237;tett 0.8.1-es CouchDB-ben.&lt;/p&gt;
&lt;p&gt;Sajnos nekem b&#337;vebb lehet&#337;s&#233;gem nem volt elmer&#252;lni a RelaxDB-ben, mindenesetre &#237;g&#233;retesnek t&#369;nik, m&#233;gha kicsit m&#225;s koncepci&#243;ban - ink&#225;bb ORM - k&#246;zel&#237;ti is meg a CouchDB el&#233;r&#233;s&#233;t.&lt;/p&gt;
&lt;h2&gt;&#214;sszefoglal&#243;&lt;/h2&gt;
&lt;p&gt;Rem&#233;lem ez a k&#233;t hossz&#250;ra ny&#250;lt bejegyz&#233;s nem vette el senki kedv&#233;t &#233;s tesz egy pr&#243;b&#225;t a CouchDB-vel. A koncepci&#243;ja kiss&#233; szokatlan, de a vil&#225;gos &#233;s tiszta REST API-nak k&#246;sz&#246;nhet&#337;en nagyon gyorsan beletanulhatunk. R&#225;ad&#225;sul, mint l&#225;ttuk Rubyban is egyszer&#369;en haszn&#225;lhatjuk: a v&#225;ltozatos interf&#233;szek k&#246;z&#252;l m&#233;g v&#225;logathatunk is - &#201;n a fentiek k&#246;z&#252;l a CouchObjectre tenn&#233;m a voksom - , vagy ak&#225;r belev&#225;ghatunk egy saj&#225;t implement&#225;l&#225;s&#225;ba is. Ezut&#225;n pedig j&#246;hetnek a CouchDB-ben &#237;rt alkalmaz&#225;sok, nekem m&#225;r van is egy &#246;tletem...&lt;/p&gt;
&lt;h2&gt;Tov&#225;bbi olvasnival&#243;k&lt;/h2&gt;
&lt;p&gt;
  &lt;strong&gt;
    &lt;a href='/tutorialok/couchdb.html'&gt;A bejegyz&#233;s els&#337; r&#233;sze: CouchDB - szak&#237;t&#225;s a rel&#225;ci&#243;s adatb&#225;zisokkal&lt;/a&gt;
  &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;a href='http://jan.prima.de/~jan/plok/archives/129-Another-week-or-two-in-CouchDB.html'&gt;&#201;rdekes projektek &#233;s sok-sok link a CouchDB-r&#337;l&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;a href='http://aimee.mychores.co.uk/2008/09/07/post/320/'&gt;Nyolc r&#233;szes cikksorozat szint&#233;n a CouchDB haszn&#225;lat&#225;r&#243;l Rubyban&lt;/a&gt;
&lt;/p&gt;
</description>
      <pubDate>Sun, 08 Feb 2009 00:00:00 +0100</pubDate>
      <guid>/tutorialok/couchdb_rubyban.html</guid>
    </item>
    <item>
      <title>CouchDB - szak&#237;t&#225;s a rel&#225;ci&#243;s adatb&#225;zisokkal</title>
      <link>http://csiszarattila.com/tutorialok/couchdb.html</link>
      <description>&lt;p&gt;&lt;a href="http://lackac.hu/2009/01/19/bibliaolvaso"&gt;B&#225;csi L&#225;szl&#243;(lackac) blogbejegyz&#233;s&#233;ben&lt;/a&gt; olvastam el&#337;sz&#246;r a CoucDB-r&#337;l, &#233;s annyira megtetszett a koncepci&#243;ja, hogy gondoltam &#201;n is teszek egy m&#233;lyebb ismerked&#233;st vele - mintegy kikapcs&#243;l&#243;d&#225;sk&#233;nt k&#233;t z&#225;r&#243;vizsga t&#233;tel k&#246;z&#246;tt.&lt;/p&gt;
&lt;p&gt;A k&#246;vetkez&#337; bejegyz&#233;st k&#233;t r&#233;szre bontottam, az elk&#246;vetkez&#337;ben a CouchDB koncepci&#243;j&#225;t ismerheted meg m&#369;k&#246;d&#233;s k&#246;zben, p&#233;ld&#225;kon kereszt&#252;l. M&#237;g &lt;a href="/tutorialok/couchdb_rubyban.html"&gt;a cikk m&#225;sodik r&#233;sze megmutatja hogyan haszn&#225;lhatjuk a CoucDB-t Rubyban&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Koncepci&#243; - r&#246;viden&lt;/h2&gt;
&lt;p&gt;A CouchDB t&#246;bb szempontb&#243;l sem mindennapi adatb&#225;zis kezel&#337;. Mindenekel&#337;tt szak&#237;t a hagyom&#225;nyos rel&#225;ci&#243;s adatb&#225;zisok koncepci&#243;j&#225;val: az adatainkat s&#233;ma-mentes form&#225;ban t&#225;rolhatjuk benne. A t&#225;bl&#225;zatok helyett dokumentumaink vannak, amelyek mez&#337;n&#233;v/attrib&#250;tum/tulajdons&#225;g &#233;s a hozz&#225;juk tartoz&#243; adatok form&#225;j&#225;ban t&#225;rolj&#225;k az inform&#225;ci&#243;kat. Mivel nincsenek el&#337;re meghat&#225;rozott s&#233;m&#225;ink az egyes dokumentumok b&#225;rmilyen adatp&#225;rt felvehetnek.&lt;/p&gt;
&lt;p&gt;M&#225;sr&#233;szt a CouchDB-vel a HTTP protokollon kereszt&#252;lt kommonik&#225;lhatunk az adatb&#225;zisunkkal! R&#225;ad&#225;sul a HTTP protokoll haszn&#225;lata &#233;s az URL-k kioszt&#225;sa a REST elveire &#233;p&#252;l: az adatb&#225;zisaink benne a dokumentumaikkal lesznek az er&#337;forr&#225;saink, a HTTP met&#243;dusok pedig a m&#369;velet c&#233;lj&#225;t jel&#246;lik majd. De, hogy a dolgok ne legyenek ennyire egyszer&#369;ek: az adatok kinyer&#233;se &#233;s felvitele JSON form&#225;tumban t&#246;rt&#233;nik.&lt;/p&gt;
&lt;h2&gt;Telep&#237;t&#233;s&lt;/h2&gt;
&lt;p&gt;Ez&#250;ttal nem sok kedvem volt manu&#225;lisan, forr&#225;sb&#243;l telep&#237;teni a sok f&#252;gg&#337;s&#233;g miatt &#233;s mivel a kipr&#243;b&#225;l&#225;son volt a hangs&#250;ly, &#237;gy a MacPorts-on kereszt&#252;l tettem fel a CouchDB-t. Ehhez el&#337;sz&#246;r &#233;rdemes ellen&#337;rizni, hogy naprak&#233;sz-e a csomagok(portok) list&#225;ja:&lt;/p&gt;
&lt;pre&gt;sudo port selfupdate&lt;/pre&gt;
&lt;em&gt;&#201;n err&#337;l megfeledkeztem, &#233;s egy kor&#225;bbi (0.7.2-es) verzi&#243; telep&#252;lt fel, ami persze k&#246;sz&#246;n&#337; viszonyban sem &#225;llt a dokument&#225;ci&#243;ban &#225;ll&#237;tottakkal, sok dolog m&#225;sk&#233;nt m&#369;k&#246;d&#246;tt, ugyanis az &#250;j verzi&#243; &#243;ta (0.8.1) &lt;a href="http://wiki.apache.org/couchdb/Breaking_changes"&gt;renteget v&#225;ltoz&#225;s&lt;/a&gt; t&#246;rt&#233;nt.&lt;/em&gt;
&lt;p&gt;Majd telep&#237;ts&#252;k a couchdb csomagj&#225;t:&lt;/p&gt;
&lt;pre&gt;sudo port install couchdb&lt;/pre&gt;
&lt;em&gt;Itt m&#225;ris tarthatunk egy kis sz&#252;netet, ugyanis az Erlang csomag telep&#237;t&#233;se eltarthat egy ideig.&lt;/em&gt;
&lt;p&gt;Sikeres telep&#237;t&#233;s ut&#225;n ind&#237;tsuk el a CouchDB szervert a k&#246;vetkez&#337; paranccsal:&lt;/p&gt;
&lt;pre&gt;sudo couchdb&lt;/pre&gt;
&lt;p&gt;Els&#337;k&#233;nt &#233;rdemes egy b&#246;ng&#233;sz&#337; seg&#237;ts&#233;g&#233;vel a CouchDB webes kezel&#337;fel&#252;let&#233;t kipr&#243;b&#225;lni a &lt;a href="http://localhost:5984/_utils/index.html"&gt;http://localhost:5984/_utils/index.html&lt;/a&gt; c&#237;men. Itt l&#233;trehozhatunk &#250;j adatb&#225;zisokat &#233;s dokumentumokat, valamint felt&#246;lthetj&#252;k &#337;ket adatokkal. &#201;rdemes a Firebug seg&#237;ts&#233;g&#233;vel k&#246;vetni a felhaszn&#225;l&#243;i fel&#252;let parancsait, hogy l&#225;ssuk a h&#225;tt&#233;rben milyen HTTP k&#233;r&#233;seket k&#252;ld &#233;s mik&#233;pp adja meg az adatokat JSON form&#225;tumban.&lt;/p&gt;
&lt;div class='img'&gt;
  &lt;img src='http:/csiszarattila.com/rubysztan/images/couchdb_web_interface.jpg' /&gt;
  &lt;p&gt;Futon - a CouchDB web alap&#250; interf&#233;sze&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Ismerked&#233;s&lt;/h2&gt;
&lt;p&gt;Miel&#337;tt Rubyban kezden&#233;nk el haszn&#225;lni a CouchDB-t &#233;rdemes a HTTP vagy REST API-n &#225;tr&#225;gni magunkat, m&#233;g akkor is, ha tiszt&#225;ban vagyunk ezeknek az elveivel, van ugyanis p&#225;r elem, ami nagyban meghat&#225;rozza az elk&#252;ldend&#337; adatok form&#225;tum&#225;t. Ehhez pr&#243;b&#225;ljunk parancssorb&#243;l kommunik&#225;lni az adatb&#225;zissal a telnet vagy a curl seg&#237;ts&#233;g&#233;vel.&lt;/p&gt;
&lt;p&gt;El&#337;sz&#246;r hozzunk l&#233;tre egy adatb&#225;zist a PUT met&#243;dussal:&lt;/p&gt;
&lt;pre&gt;curl -i -X PUT http://localhost:5984/blog/&lt;/pre&gt;
&lt;em&gt;A curl i kapcsol&#243;j&#225;val ki&#237;rathatjuk a HTTP v&#225;lasz fejl&#233;c&#233;t, az X el pedig a HTTP k&#233;r&#233;s met&#243;dus&#225;t adhatjuk meg.&lt;/em&gt;
&lt;p&gt;Hasonl&#243; v&#225;laszt kell, hogy kapjunk:&lt;/p&gt;
&lt;pre&gt;HTTP/1.1 201 Created&amp;#x000A;Content-Type: text/plain;charset=utf-8&amp;#x000A;&lt;/pre&gt;
&lt;h2&gt;Dokumentumok kezel&#233;se&lt;/h2&gt;
&lt;p&gt;Most hogy l&#233;trehoztuk az adatb&#225;zist, adjunk hozz&#225; egy dokumentumot, &#233;s helyezz&#252;nk el benne k&#252;l&#246;nf&#233;le adatokat.&lt;/p&gt;
&lt;pre&gt;curl -i -X PUT http://localhost:5984/blog/couchdb_cikk \&amp;#x000A;-d '{ "author":"Csiszar Attila", "title":"CouchDB cikk"}'&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Ezut&#225;n k&#233;rdezz&#252;k le a GET met&#243;dussal:&lt;/p&gt;
&lt;em&gt;Ez&#250;ttal a telnet-et haszn&#225;ltam mivel a curl valami&#233;rt nem akar&#243;dzott a HTTP v&#225;lasz t&#246;rzs&#233;t kiolvasni.&lt;/em&gt;
&lt;pre&gt;$ telnet localhost 5984&amp;#x000A;&amp;#x000A;GET http://localhost:5984/blog/couchdb_cikk/ HTTP/1.0&amp;#x000A;&amp;#x000A;HTTP/1.1 200 OK&amp;#x000A;Content-Type: text/plain;charset=utf-8&amp;#x000A;Etag: 2482599723&amp;#x000A;&amp;#x000A;{"_id":"couchdb_cikk","_rev":"2482599723","author":"Csiszar Attila","title":"CouchDB cikk"}&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Mint l&#225;tjuk a CouchDB k&#233;t speci&#225;lis mez&#337;t rendelt a dokumentumunkhoz: az &lt;strong&gt;id&lt;/strong&gt;t, mint azonos&#237;t&#243;t amely felvette az er&#337;forr&#225;sunk c&#237;m&#233;t - ezt a k&#233;r&#233;s&#252;nkkel adtuk meg -, valamint hozz&#225;rendelt egy &lt;strong&gt;rev&lt;/strong&gt; tulajdons&#225;got is.&lt;/p&gt;
&lt;em&gt;A &lt;strong&gt;_&lt;/strong&gt; jellel kezd&#337;d&#337; tulajdons&#225;gok a CouchDB sz&#225;m&#225;ra fentartott &#233;rt&#233;kek, nem m&#243;dos&#237;thatjuk &#337;ket.&lt;/em&gt;
&lt;p&gt;Az azonos&#237;t&#243;knak adatb&#225;zis szinten egyedinek kell lenni&#252;k, hiszen ezt haszn&#225;ljuk az URL-kben is - gyakorlatilag b&#225;rmilyen karaktersorozatot felvehetnek. Ha nem szeretn&#233;nk az egyedi azonos&#237;t&#243;k megad&#225;s&#225;val bajl&#243;dni, haszn&#225;lhatjuk a POST met&#243;dust dokumentumok l&#233;trehoz&#225;s&#225;ra, mivel ez egyedi azonos&#237;t&#243;t fog rendelni a dokumentumhoz. Mivel POST met&#243;dus eset&#233;n nem konkr&#233;t er&#337;forr&#225;sra, hanem er&#337;forr&#225;s-kollekci&#243;ra szoktunk hivatkozni, a c&#237;m&#252;nknek ez&#250;ttal az adatb&#225;zis el&#233;r&#233;s&#233;t kell megadnunk:&lt;/p&gt;
&lt;pre&gt;curl -i -X POST http://localhost:5984/blog/ \&amp;#x000A;-d '{ "author":"Csiszar Attila", "title":"M&#225;sik CouchDB cikk"}'&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A v&#225;lasszal visszakapjuk a l&#233;trehozott dokumentum (er&#337;forr&#225;s) azonos&#237;t&#243;j&#225;t:&lt;/p&gt;
&lt;pre&gt;HTTP/1.1 201 Created&amp;#x000A;Content-Type: text/plain;charset=utf-8&amp;#x000A;&amp;#x000A;{"ok":true,"id":"19BF2F4BF267E8CCF120A2B3EB444C19","rev":"3269339116"}&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A m&#225;sik fontos mez&#337;, a &lt;strong&gt;rev&lt;/strong&gt; &#233;rt&#233;k: ez jel&#246;li a dokumentum aktu&#225;lis v&#225;ltozat&#225;t. Ez m&#233;g fontos lesz a v&#225;ltoztat&#225;sok felvitelekor, ugyanis azt meg kell adnunk az adataink k&#246;z&#246;tt, l&#225;ssuk:&lt;/p&gt;
&lt;pre&gt;curl -i -X PUT http://localhost:5984/blog/couchdb_cikk \&amp;#x000A;-d '{ "_rev":"2482599723", "body": "Ez hosszu cikk lesz..." }'&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Ha a megadott azonos&#237;t&#243; nem egyezik az adatb&#225;zisban l&#233;v&#337; dokumentum aktu&#225;lis &#233;rt&#233;k&#233;vel, akkor a v&#225;ltoztat&#225;sok nem ker&#252;lnek &#233;rv&#233;nyre &#233;s egy 409 Conflict v&#225;laszt kapunk vissza. A rev &#233;rt&#233;ke megjelenik az Etag HTTP fejl&#233;cben is, &#237;gy remek&#252;l haszn&#225;lhatjuk konfliktuskezel&#233;sre.&lt;/p&gt;
&lt;p&gt;A fentiekb&#337;l l&#225;that&#243;, hogy a CouchDB REST APIj&#225;ban a dokumentumaink - teh&#225;t az adataink elvi t&#225;rol&#243;i - lesznek az er&#337;forr&#225;saink, az el&#233;r&#233;s&#252;kh&#246;z(URL) az azonos&#237;t&#243;ikat haszn&#225;ljuk fel, &#233;s a megfelel&#337; HTTP met&#243;dusokkal tudunk rajtuk m&#369;veleteket v&#233;gezni.&lt;/p&gt;
&lt;h2&gt;Mell&#233;kletek&lt;/h2&gt;
&lt;p&gt;A CouchDB tov&#225;bbi &#233;rdekess&#233;ge, hogy a dokumetumaink mell&#233; lehet&#337;s&#233;g&#252;nk van mell&#233;kleteket csatolni, csak&#250;gy, mint az e-mailek eset&#233;ben. Ezt a speci&#225;lis &lt;strong&gt;_attachments&lt;/strong&gt; tulajdons&#225;ggal tehetj&#252;k meg &#233;s az adatoknak base64 enk&#243;dol&#225;s&#250;aknak kell lenni&#252;k.&lt;/p&gt;
&lt;pre&gt;curl -i -X PUT http://localhost:5984/blog/couchdb_cikk \&amp;#x000A;-d '{ "_id":"couchdb_cikk", "_rev": "2812696990", "_attachments": { "csatolt.txt": { "content_type":"text\/plain", "data":"Q3NhdG9sdCBkb2t1bWVudHVt"} } }'&amp;#x000A;&lt;/pre&gt;
&lt;em&gt;&#201;rdekes m&#369;k&#246;d&#233;s, hogy b&#225;r az URL-ben szerepel a dokumentum azonos&#237;t&#243;ja azt ugyan&#250;gy meg kell adnunk az &#225;tadott JSON adatban is.&lt;/em&gt;
&lt;p&gt;Az &#225;tadott JSON adat kicsit &#225;ttekinthet&#337;bben:&lt;/p&gt;
&lt;pre&gt;{ "_id":"couchdb_cikk",&amp;#x000A;  "_rev": "2812696990",&amp;#x000A;  "_attachments": &amp;#x000A;  { &amp;#x000A;    "csatolt.txt": &amp;#x000A;      { &amp;#x000A;        "content_type":"text\/plain", &amp;#x000A;        "data":"Q3NhdG9sdCBkb2t1bWVudHVt"&amp;#x000A;      } &amp;#x000A;  }&amp;#x000A;}&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Ism&#233;t csak a telnet seg&#237;ts&#233;g&#233;vel k&#233;rdezz&#252;k le a dokumentumot.&lt;/p&gt;
&lt;pre&gt;GET /blog/couchdb_cikk/ HTTP/1.0&amp;#x000A;&amp;#x000A;{&amp;#x000A;  "_id":"couchdb_cikk",&amp;#x000A;  "_rev":"3172282319",&amp;#x000A;  "_attachments":&amp;#x000A;  {&amp;#x000A;    "csatolt.txt":&amp;#x000A;    {&amp;#x000A;      "stub":true,&amp;#x000A;      "content-type":"text\/plain",&amp;#x000A;      "length":18&amp;#x000A;    }&amp;#x000A;  }&amp;#x000A;}&amp;#x000A;&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A csatolm&#225;nyokat nem kapjuk vissza a dokumentum lek&#233;r&#233;sekor automatikusan - ezt jelzi a stub:true &#233;rt&#233;k - azokat k&#252;l&#246;n URL-ken, a nev&#252;k&#246;n kereszt&#252;l &#233;rhetj&#252;k el a dokumentum alatt, p&#233;ld&#225;ul &#237;gy:  &lt;strong&gt;/blog/couchdb_cikk/csatolt.txt&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;GET /blog/couchdb_cikk/csatolt.txt HTTP/1.0&amp;#x000A;&amp;#x000A;HTTP/1.1 200 OK&amp;#x000A;Content-Type: text/plain&amp;#x000A;Content-Length: 18&amp;#x000A;&amp;#x000A;Csatolt dokumentum&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Ezt az URL el&#233;r&#233;st felhaszn&#225;lhatjuk a dokumentumok m&#243;dos&#237;t&#225;s&#225;ra, s&#337;t felt&#246;lt&#233;s&#233;re is. &#205;gy nem kell a JSON form&#225;tummal &#233;s base64 enk&#243;dol&#225;ssal bajl&#243;dni, mind&#246;ssze a Content-Type HTTP fejl&#233;ccel kell jelezn&#252;nk az adatunk form&#225;tum&#225;t.&lt;/p&gt;
&lt;pre&gt;PUT /blog/couchdb_cikk/kep.jpg&amp;#x000A;Content-Type:image/jpeg&amp;#x000A;Content-Length:123&amp;#x000A;&amp;#x000A;&amp;lt;JPEG adat&amp;gt;&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A csatolm&#225;nyok egyik &#233;rdekes felhaszn&#225;l&#225;sa lehet, hogy k&#233;peket t&#225;roljunk adatb&#225;zisszinten, amelyet azut&#225;n egyszer&#369;en meg tudunk jelen&#237;teni a weboldalainkon a HTTP-s el&#233;r&#233;snek k&#246;sz&#246;nhet&#337;en.&lt;/p&gt;
&lt;h2&gt;N&#233;zetek&lt;/h2&gt;
&lt;p&gt;A CouchDB-ben a n&#233;zetek felelnek meg a rel&#225;ci&#243;s adatb&#225;zisok lek&#233;rdez&#233;seinek. A n&#233;zetek JavaScript nyelven &#237;rt k&#243;dok.&lt;/p&gt;
&lt;p&gt;A n&#233;zetek kipr&#243;b&#225;l&#225;s&#225;ra &#233;rdemes a fentebb m&#225;r eml&#237;tett http://localhost:5984/_utils/index.html c&#237;met megkeresni, ha bel&#233;p&#252;nk az adatb&#225;zisunkba jobb oldalt fel&#252;l tal&#225;lunk egy Select View leg&#246;rd&#252;l&#337; list&#225;t innen pedig v&#225;lasszuk a Custom query... pontot - &#237;gy kicsit interakt&#237;vabb m&#243;don ellen&#337;rizhetj&#252;k a v&#225;ltoztat&#225;saink k&#246;zvetlen eredm&#233;ny&#233;t.&lt;/p&gt;
&lt;p&gt;N&#233;zz&#252;nk egy egyszer&#369;bb n&#233;zetet:&lt;/p&gt;
&lt;pre&gt;function(doc) {&amp;#x000A;  map(null, doc)&amp;#x000A;}&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Amint l&#225;that&#243; a n&#233;zetek egyszer&#369; JavaScript funkci&#243;k, param&#233;terk&#233;nt pedig megkapj&#225;k a bej&#225;r&#225;s sor&#225;n &#233;pp aktu&#225;lis dokumentumot - &lt;strong&gt;doc&lt;/strong&gt; v&#225;ltoz&#243;. A funkci&#243;n bel&#252;l b&#225;rmilyen logik&#225;t elhelyezhet&#252;nk, egy a l&#233;nyeg, ha szeretn&#233;nk egy dokumentumot visszaadni a n&#233;zetben akkor az &lt;strong&gt;emit&lt;/strong&gt; funkci&#243;t kell haszn&#225;lnunk. Ennek els&#337; param&#233;terek&#233;nt megadhatjuk a dokumentum egy tulajdons&#225;g&#225;t, a n&#233;zet dokumentumait ez alapj&#225;n fogja sorba rendezni, m&#225;sodik param&#233;terk&#233;nt a dokumentum visszaadott tulajdons&#225;gait sz&#369;k&#237;thetj&#252;k le. L&#225;sd a k&#246;vetkez&#337; p&#233;ld&#225;t:&lt;/p&gt;
&lt;pre&gt;function(doc) {&amp;#x000A;  emit(doc.title, {"Cim":doc.title, "Datum":doc.date, "ID":doc.id })&amp;#x000A;}&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Ebben a n&#233;zetben a c&#237;mek alapj&#225;n lesz rendezve az &#246;sszes dokumentum, &#233;s csak a megadott tulajdons&#225;gok (Title, Date, Id) szerepelnek mellett&#252;k, a megadott nevekkel.&lt;/p&gt;
&lt;p&gt;A n&#233;zeteket k&#233;tf&#233;lek&#233;ppen "&#233;rhetj&#252;k" el a HTTP API-n kereszt&#252;l. Egyr&#233;szt POST k&#233;r&#233;sk&#233;nt &#225;tadhatjuk a meg&#237;rt n&#233;zet f&#252;ggv&#233;nyt az /{dbn&#233;v}/_slow_view URL-nek.&lt;/p&gt;
&lt;pre&gt;curl -X POST  \&amp;#x000A;-H 'Content-Type: text/javascript' \&amp;#x000A;-d 'function(doc){map(null, {"Title":doc.title, "Date":doc.date, "Id":doc.id }) }' \&amp;#x000A;http://localhost:5984/blog/_slow_view&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A visszakapott v&#225;lasz:&lt;/p&gt;
&lt;pre&gt;{&amp;#x000A;  "total_rows":3,&amp;#x000A;  "offset":0,&amp;#x000A;  "rows":&amp;#x000A;  [&amp;#x000A;    {&amp;#x000A;      "id":"19BF2F4BF267E8CCF120A2B3EB444C19",&amp;#x000A;      "key":null,&amp;#x000A;      "value":&amp;#x000A;      {&amp;#x000A;        "Title":"CouchDB cikk"&amp;#x000A;      }&amp;#x000A;    },&amp;#x000A;  &amp;#x000A;    {&amp;#x000A;      "id":"B7CFF70741ED178736D044F342B085EE",&amp;#x000A;      "key":null,&amp;#x000A;      "value":&amp;#x000A;      {&amp;#x000A;        "Title":"Masik CouchDB cikk"&amp;#x000A;      }&amp;#x000A;    }&amp;#x000A;  ]&amp;#x000A;}&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A CouchDB terminol&#243;gus&#225;ban ezeket ideiglenes n&#233;zeteknek nevezz&#252;k, &#233;s ink&#225;bb csak tesztel&#233;si c&#233;lokra aj&#225;nlott haszn&#225;latuk - erre is utal a _\_slow\_view_ URL elnevez&#233;s. Enn&#233;l sokkal hat&#233;konyabb, ha a n&#233;zeteinket is dokumentumokk&#233;nt, az adatb&#225;zisban t&#225;roljuk el: ekkor azok minden adatb&#225;zisban t&#246;rt&#233;nt v&#225;ltoz&#225;s hat&#225;s&#225;ra - teh&#225;t p&#233;ld&#225;ul ha m&#243;dos&#237;tunk egy dokumentumot - automatikusan lefutnak, az eredm&#233;nyeik pedig el&#337;re elt&#225;rol&#243;dnak! Ez sokkal gyorsabb m&#369;k&#246;d&#233;st eredm&#233;nyez.&lt;/p&gt;
&lt;p&gt;A n&#233;zetek mint dokumentumok a k&#246;vetkez&#337; form&#225;ban t&#225;rol&#243;dnak:&lt;/p&gt;
&lt;pre&gt;{&amp;#x000A;  "_id": "_design/posts",&amp;#x000A;  "_rev": "3294989902",&amp;#x000A;  "language": "javascript",&amp;#x000A;  "views":&amp;#x000A;  { &amp;#x000A;    "all_by_title":&amp;#x000A;    { &amp;#x000A;      "map" : "function(doc){ emit(doc.title, {'Title':doc.title, 'Date':doc.date, 'Id':doc.id })}"&amp;#x000A;    },&amp;#x000A;  &amp;#x000A;    "all_by_author":&amp;#x000A;    {&amp;#x000A;      "map" : "function(doc){ emit(doc.author, doc)}"&amp;#x000A;    }&amp;#x000A;  }&amp;#x000A;}&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A kulcs a n&#233;zet-dokumentumok elnevez&#233;s&#233;ben ad&#243;dik: mindegyiket a &lt;strong&gt;_design/&lt;/strong&gt; form&#225;val kell kezden&#252;nk. A n&#233;zet-dokumentumok nemcsak egy, hanem tetsz&#337;leges sz&#225;m&#250; n&#233;zetet tartalmazhatnak, elk&#252;l&#246;n&#237;t&#233;s&#252;kben az egyedi elnevez&#233;s&#252;k seg&#237;t. A fenti p&#233;ld&#225;ban p&#233;ld&#225;ul az els&#337;, all_by_title c&#237;m szerint, m&#237;g a m&#225;sodik, all_by_author szerz&#337; szerint fogja visszadni a dokumentumjainkat.&lt;/p&gt;
&lt;p&gt;A fenti n&#233;zet-dokumentumot egyszer&#369;en hozhatjuk l&#233;tre az adatb&#225;zisunkban:&lt;/p&gt;
&lt;pre&gt;curl -X PUT \&amp;#x000A;-d '{ "language": "javascript", "views":{ "all_by_title": { "map" : "function(doc){ emit(doc.title,{'Title':doc.title, 'Date':doc.date, 'Id':doc.id })}" }, "all_by_author":{ "map" : "function(doc){ emit(doc.author, doc)}" } }}' \&amp;#x000A;http://localhost:5984/blog/_design/posts&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;V&#225;laszk&#233;nt pedig valami hasonl&#243;t kell kapnunk:&lt;/p&gt;
&lt;pre&gt;{"ok":true,"id":"_design\/posts","rev":"3294989902"}&lt;/pre&gt;
&lt;p&gt;A t&#225;rolt n&#233;zetek eredm&#233;ny&#233;t ezut&#225;n egyszer&#369;en egy GET k&#233;r&#233;ssel olvashatjuk ki, de erre m&#225;r a &lt;strong&gt;_view/&lt;/strong&gt; &#250;tvonalat kell haszn&#225;lnunk. Mivel eredetileg a _design/&lt;strong&gt;posts&lt;/strong&gt; azonos&#237;t&#243;t adtuk a n&#233;zetet t&#225;rol&#243; dokumentumnak, a teljes el&#233;r&#233;st a _view/&lt;strong&gt;posts/&lt;/strong&gt;all_by_title URL fogja szolg&#225;ltatni.&lt;/p&gt;
&lt;pre&gt;GET http://localhost:5984/blog/_view/posts/all_by_title HTTP/1.0 &amp;#x000A;&amp;#x000A;{&amp;#x000A;  "id":"4fbdaedba5b66d4894191b8a52895c76",&amp;#x000A;  "key":"CouchDB cikk",&amp;#x000A;  "value":&amp;#x000A;  {&amp;#x000A;    "Title":"CouchDB cikk"&amp;#x000A;  }&amp;#x000A;},&amp;#x000A;{&amp;#x000A;  "id":"5126ff560acb43f444149b502fd1484b",&amp;#x000A;  "key":"CouchDB cikk",&amp;#x000A;  "value":&amp;#x000A;  {&amp;#x000A;    "Title":"CouchDB cikk"&amp;#x000A;  }&amp;#x000A;}&amp;#x000A;&lt;/pre&gt;
&lt;h2&gt;&#214;sszegz&#233;s&lt;/h2&gt;
&lt;p&gt;A fenti csak n&#233;h&#225;ny p&#233;lda volt a CouchDB REST API-j&#225;nak a haszn&#225;lat&#225;ra, a teljess&#233;g ig&#233;nye n&#233;lk&#252;l pr&#243;b&#225;ltam bemutatni a f&#337;bb m&#369;k&#246;d&#233;st. R&#233;szletesebb inform&#225;ci&#243;k&#233;rt &#233;rdemes &#225;tr&#225;gni magunkat a &lt;a href="http://wiki.apache.org/couchdb/Reference"&gt;CouchDB teljes referenci&#225;j&#225;n&lt;/a&gt;, ha szeretn&#233;nk megismerni az &#246;sszes lehet&#337;s&#233;get.&lt;/p&gt;
&lt;p&gt;Mindezt azonban &#233;rdemes volt &#246;sszefoglani, miel&#337;tt r&#225;t&#233;rn&#233;nk arra, hogy hogyan is haszn&#225;lhatjuk a CouchDB-t Rubyban.&lt;/p&gt;
&lt;strong&gt;&lt;a href="/tutorialok/couchdb_rubyban.html"&gt;A bejegyz&#233;s folytat&#225;s&#225;t: A CouchDB tal&#225;lkoz&#225;sa a Rubyval ezen a linken kereszt&#252;l &#233;rheted el.&lt;/a&gt;&lt;/strong&gt;
&lt;h2&gt;Tov&#225;bbi olvasnival&#243;k&lt;/h2&gt;
&lt;p&gt;
  &lt;a href='http://www.benatkin.com/weblog/2008/09/13/trying-out-couchdb-in-firebug/'&gt;CouchDB kipr&#243;b&#225;l&#225;sa Firebugban&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;a href='http://jan.prima.de/~jan/plok/archives/129-Another-week-or-two-in-CouchDB.html'&gt;&#201;rdekes projektek &#233;s sok-sok link a CouchDB-r&#337;l&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;a href='http://aimee.mychores.co.uk/2008/09/07/post/320/'&gt;Nyolc r&#233;szes cikksorozat szint&#233;n a CouchDB haszn&#225;lat&#225;r&#243;l Rubyban&lt;/a&gt;
&lt;/p&gt;
</description>
      <pubDate>Fri, 06 Feb 2009 00:00:00 +0100</pubDate>
      <guid>/tutorialok/couchdb.html</guid>
    </item>
    <item>
      <title>Felhaszn&#225;l&#243;i-fel&#252;letek HTML protot&#237;pusokkal</title>
      <link>http://csiszarattila.com/tutorialok/html_prototipizalas.html</link>
      <description>&lt;p&gt;A k&#246;vetkez&#337; bejegyz&#233;st k&#233;t k&#246;zelm&#250;ltban elolvasott bejegyz&#233;s ihlette. El&#337;sz&#246;r &lt;a href=" http://www.rubyrailways.com/getting-real-with-balsamiq-amazing-mockups-in-a-breeze/"&gt;Szinek P&#233;ter blogj&#225;ban mutatott be egy &#246;tletes programot&lt;/a&gt;amelyet nemcsak weboldalak, hanem b&#225;rmilyen alkalmaz&#225;s v&#225;zlatainak az elk&#233;sz&#237;t&#233;s&#233;hez is haszn&#225;lhatjuk, majd a 37Signals f&#233;le Signal vs. Noise blogban &lt;a href="http://www.37signals.com/svn/posts/1061-why-we-skip-photoshop"&gt;olvastam &#233;rveket a HTML+CSS alap&#250; tervez&#233;sr&#337;l szemben a grafikai (Photoshop) programokkal&lt;/a&gt;, amely igen &#233;rdekes vit&#225;t sz&#369;lt a hozz&#225;sz&#243;l&#225;sokban.&lt;/p&gt;
&lt;p&gt;&#218;gy gondoltam teh&#225;t, hogy megosztom a saj&#225;t tapasztalataimat is. A szakdolgozatom elk&#233;sz&#237;t&#233;se sor&#225;n alkalmaztam el&#337;sz&#246;r a HTML alap&#250; protot&#237;piz&#225;l&#225;st, amelyet nagyon megszerettem, rem&#233;lhet&#337;leg a k&#246;vetkez&#337; bejegyz&#233;s felkelti m&#225;sok &#233;rdekl&#337;d&#233;s&#233;t is, &#233;s kedvet kapnak a technik&#225;hoz.&lt;/p&gt;
&lt;p&gt;B&#225;r a fenti linkek alapvet&#337;n csak az alkalmaz&#225;s kin&#233;zet&#233;r&#337;l, az els&#337; elk&#233;pzel&#233;sek pap&#237;rra vet&#233;s&#233;r&#337;l sz&#243;lnak, komolyabb alkalmaz&#225;sokn&#225;l sz&#252;ks&#233;g&#252;nk van &#246;sszetettebb, a teljes m&#369;k&#246;d&#233;si folyamatokat bemutat&#243; v&#225;zlatokra, amelyek seg&#237;tenek elk&#233;pzelni az alapvet&#337; m&#369;k&#246;d&#233;st. P&#233;ld&#225;ul egy web&#225;ruh&#225;z eset&#233;ben milyen n&#233;zeteket, v&#225;laszokat, reakci&#243;kat ny&#250;jtsunk, amikor egy felhaszn&#225;l&#243; behelyez egy term&#233;ket a kosar&#225;ba.&lt;/p&gt;
&lt;p&gt;&#201;n a tervez&#233;s els&#337; szakasz&#225;ban mindig felhaszn&#225;l&#243;i folyamatokban &#233;s a hozz&#225;juk tartoz&#243; fel&#252;letekben gondolkodom, amelyekhez egy-egy v&#225;zlatk&#233;pet rendelek. Mindez seg&#237;t elk&#233;pzelni, hogyan &#225;ll majd &#246;ssze a v&#233;gs&#337; alkalmaz&#225;s. Ebben a f&#225;zisban szeretek pap&#237;ron dolgozni, mert sokkal gyorsabb &#233;s sz&#243;rakoztat&#243;bb b&#225;rmin&#233;l - b&#225;r nem tartom grafikusi v&#233;n&#225;kkal meg&#225;ldott embernek magam, de sok j&#243; &#246;tletet kapok rajzol&#225;s k&#246;zben &#233;s az alkalmaz&#225;s v&#233;gs&#337; megjelen&#233;s&#233;nek a form&#225;ja is k&#246;nnyebben kialak&#237;that&#243; - sz&#225;momra.&lt;/p&gt;
&lt;p&gt;Ugyanakkor mivel a v&#225;zlataim t&#246;bbs&#233;g&#233;re nagyfok&#250; absztrakci&#243; jellemz&#337; nehezen tudom &#225;t&#252;ltetni &#337;ket a gyakorlatba - a pap&#237;ron j&#243;nak t&#369;n&#337; &#246;tlet v&#233;geredm&#233;nyben katasztr&#243;f&#225;lisan mutat. Ezt a probl&#233;m&#225;t is sokat seg&#237;tett kompenz&#225;lni az el&#337;zetes HTML+CSS alap&#250; megval&#243;s&#237;t&#225;s, mivel a hirtelen j&#246;tt &#246;tleteket ki tudom pr&#243;b&#225;lni val&#243;jukban nem a v&#233;gs&#337; alkalmaz&#225;st kell teljesen &#225;ttervezni.&lt;/p&gt;
&lt;p&gt;De igyekszem hangs&#250;lyozni, hogy mindezek szerintem csak olyan webes alkalmaz&#225;sok - teh&#225;t komplexebb h&#225;tt&#233;rrel rendelkez&#337;ek - eset&#233;ben alkalmazhat&#243;, ahol a m&#369;k&#246;d&#233;s legal&#225;bb olyan fontos, mint a kin&#233;zet.&lt;/p&gt;
&lt;p&gt;&#201;pp ez&#233;rt azt gondolom a felhaszn&#225;l&#243;i fel&#252;letek megtervez&#233;se nemcsak azt kell, hogy jelentse, hogy megtervezz&#252;k p&#233;ld&#225;ul, hogyan n&#233;zzen ki az webalkalmaz&#225;sunk nyit&#243;oldala, hanem sokkal ink&#225;bb seg&#237;tenie kell elk&#233;pzelni az alkalmaz&#225;s k&#252;l&#246;nb&#246;z&#337; m&#369;k&#246;d&#233;si folyamatait, seg&#237;tenie kell a m&#369;k&#246;d&#233;s k&#246;zben felmer&#252;l&#337; feladatok &#233;s probl&#233;m&#225;k el&#337;revet&#237;t&#233;s&#233;ben. A felhaszn&#225;l&#243;i fel&#252;letek ilyen m&#243;don val&#243; megtervez&#233;s&#233;vel olyan probl&#233;m&#225;kat, feladatokat is felfedezhet&#252;nk, amelyek egy&#233;bk&#233;nt csak az implement&#225;l&#225;s - programoz&#225;s - sor&#225;n bukkann&#225;nak el&#337;.&lt;/p&gt;
&lt;p&gt;A fentiek miatt a felhaszn&#225;l&#243;i fel&#252;letek tervez&#233;s&#233;t ez&#233;rt &#233;rdemes egy komolyabb protot&#237;pus elk&#233;sz&#237;t&#233;s&#233;vel v&#233;gezni. A web k&#246;zege miatt ezt &#233;rdemes HTML nyelven elk&#233;sz&#237;ten&#252;nk, amelyre k&#246;nnyed&#233;n r&#225;h&#250;zhatjuk a v&#233;gs&#337; diz&#225;jnunkat is CSS haszn&#225;lat&#225;val.&lt;/p&gt;
&lt;h2&gt;Hogyan m&#369;k&#246;dj&#246;n egy HTML protot&#237;pus?&lt;/h2&gt;
&lt;p&gt;A p&#233;lda kedv&#233;&#233;rt vegy&#252;k a szakdolgozatom p&#233;ld&#225;j&#225;t, ahol a web&#225;ruh&#225;z protot&#237;pusa a k&#246;vetkez&#337;k&#233;ppen n&#233;zett ki: minden n&#233;zethez (vagy akci&#243;hoz) egy-egy oldalt rendeltem, ahol a n&#233;zetek k&#246;z&#246;tti &#225;tj&#225;r&#225;st a linkek biztos&#237;tott&#225;k, csak&#250;gy, mint a v&#233;gs&#337; alkalmaz&#225;sban. A val&#243;s m&#369;k&#246;d&#233;st ugyanakkor csak szimul&#225;ltam: amikor egy felhaszn&#225;l&#243; p&#233;ld&#225;ul elhelyez a kosar&#225;ban egy term&#233;ket valamelyik link seg&#237;ts&#233;g&#233;vel, akkor a k&#246;vetkez&#337; n&#233;zetben &#250;gy &#225;ll&#237;tottam be, mintha m&#225;r lenne term&#233;k a kosar&#225;ban - val&#243;s adat nincs m&#246;g&#246;tte. Amikor kiv&#225;laszt egy kateg&#243;ri&#225;t a k&#246;vetkez&#337; n&#233;zetben egy fikt&#237;v kateg&#243;ria fikt&#237;v term&#233;keit tekintheti meg &#8211; megint csak an&#233;lk&#252;l, hogy val&#243;s adatokat venn&#233;nk a h&#225;tt&#233;rb&#337;l, mondjuk egy adatb&#225;zis felhaszn&#225;l&#225;s&#225;val.&lt;/p&gt;
&lt;p&gt;Ugyan&#237;gy ha a felhaszn&#225;l&#243; kit&#246;lt egy &#369;rlapot, &#233;s az elk&#252;ld&#233;s&#233;re kattint a k&#246;vetkez&#337; n&#233;zetben azt szimul&#225;ltam, hogyan jelenjenek meg a hib&#225;s kit&#246;lt&#233;sb&#337;l ered&#337; hiba&#252;zenetek, teljesen f&#252;ggetlen&#252;l att&#243;l, hogy milyen adatokat adott meg el&#337;z&#337;leg.&lt;/p&gt;
&lt;p&gt;A fenti m&#243;dszereket b&#225;rmilyen alkalmaz&#225;s eset&#233;n felhaszn&#225;lhatjuk, amivel egy igaz&#225;n &#233;letszer&#369; protot&#237;pust kaphatunk. Fontos azonban l&#225;tnunk, hogy az alapvet&#337; tervez&#233;si folyamatokat nem &#250;szhatjuk meg, an&#233;lk&#252;l nem &#233;rdemes elkezden&#252;nk a protot&#237;pus elk&#233;sz&#237;t&#233;s&#233;t! &#201;pp ez&#233;rt miel&#337;tt hozz&#225;l&#225;tn&#225;nk a protot&#237;pus elk&#233;sz&#237;t&#233;s&#233;hez el&#337;bb v&#225;zoljuk milyen funkci&#243;kat &#233;rhetnek el a felhaszn&#225;l&#243;k, majd k&#233;sz&#237;ts&#252;nk egy kezdetleges navig&#225;ci&#243;s tervet: azaz v&#225;zoljuk, hogy a felhaszn&#225;l&#243;k milyen &#250;tvonalakon &#233;rhetik el majd a k&#252;l&#246;nb&#246;z&#337; funkci&#243;kat &#233;s milyen n&#233;zeteket kell majd megval&#243;s&#237;tanunk.&lt;/p&gt;
&lt;h2&gt;De mindez milyen el&#337;ny&#246;kkel j&#225;r?&lt;/h2&gt;
&lt;p&gt;El&#337;sz&#246;r is az egyszer&#369;s&#233;ge. Ahelyett, hogy grafikai &#233;s fel&#252;lettervez&#337; eszk&#246;z&#246;k elsaj&#225;t&#237;t&#225;s&#225;val bajl&#243;dn&#225;nk HTML alapokon egyszer&#369;en tudunk tervezni, r&#225;ad&#225;sul nem ker&#252;l semmibe, szemben egy komolyabb grafikai program &#225;r&#225;val.&lt;/p&gt;
&lt;p&gt;M&#225;sodsorban, &#233;s ez fontosabb t&#233;ny, a kipr&#243;b&#225;lhat&#243;s&#225;g. Mivel HTML alapon k&#233;sz&#252;l, az elk&#233;sz&#252;lt protot&#237;pus m&#369;k&#246;d&#233;s k&#246;zben egy b&#246;ng&#233;sz&#337; seg&#237;ts&#233;g&#233;vel kipr&#243;b&#225;lhat&#243;. &#205;gy a fejleszt&#337;csapat &#233;s maga a megrendel&#337; is pontos k&#233;pet kaphat a v&#233;gs&#337; alkalmaz&#225;sr&#243;l m&#233;g az implement&#225;l&#225;s el&#337;tt. A f&#233;lre&#233;rt&#233;sek &#237;gy kor&#225;n kik&#252;sz&#246;b&#246;lhet&#337;ek, a megjegyz&#233;sek pedig pontos&#237;thatj&#225;k az elk&#233;pzel&#233;seket, amivel fejleszt&#233;si id&#337;t sp&#243;rolunk meg, mert nem a v&#233;gs&#337; alkalmaz&#225;st kell &#225;tszabnunk &#250;j ig&#233;nyek eset&#233;n.&lt;/p&gt;
&lt;p&gt;A harmadik szempont: a hat&#233;konys&#225;g &#233;s &#250;jrafelhaszn&#225;lhat&#243;s&#225;g. A l&#233;trehozott protot&#237;pusok ugyanis gond n&#233;lk&#252;l felhaszn&#225;lhat&#243;ak lesznek a fejleszt&#233;s k&#233;s&#337;bbi szakasz&#225;ban, hiszen a HTML k&#243;dok be&#233;p&#237;thet&#337;ek lesznek a v&#233;gs&#337; alkalmaz&#225;sunkba is, teh&#225;t a befektetett munka nem v&#233;sz k&#225;rba, szemben a grafikai tervekkel.&lt;/p&gt;
&lt;h2&gt;Mikor alkalmazzuk &#233;s mikor ne?&lt;/h2&gt;
&lt;p&gt;Term&#233;szetesen a fenti m&#243;dszernek nyilv&#225;nval&#243; h&#225;tr&#225;nyai is vannak, hiszen egy komplex grafikai megold&#225;st haszn&#225;l&#243; oldaln&#225;l sokkal nehezebb &#233;s id&#337;ig&#233;nyesebb a HTML &#233;s CSS programoz&#225;st megval&#243;s&#237;tani. Ugyanakkor &#233;n azt mondom itt is &#233;rdemes - n&#233;mi egyszer&#369;s&#237;t&#233;s ut&#225;n - a teljes m&#369;k&#246;d&#233;st leprogramozni, &#237;gy ism&#233;t csak egy kipr&#243;b&#225;lhat&#243; verzi&#243;t kapunk. Nyilv&#225;nval&#243;an a protot&#237;pus k&#233;sz&#237;t&#233;se is k&#233;t&#233;l&#369; fegyver, a befektetett munka &#233;s a vele el&#233;rt hozam hat&#225;rozza meg meg&#233;ri-e ilyen szinten foglalkozni vele.&lt;/p&gt;
&lt;p&gt;A k&#246;vetkez&#337; cikkben arra mutatok p&#233;ld&#225;t, hogy milyen m&#243;dszerrel tudtam egyszer&#369;bb&#233; &#233;s ezzel egy&#252;tt gyorsabbb&#225; tenni a protot&#237;pus elk&#233;sz&#237;t&#233;s&#233;t - &#233;s ebben m&#225;r a Ruby is szerepet kap.&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Jan 2009 00:00:00 +0100</pubDate>
      <guid>/tutorialok/html_prototipizalas.html</guid>
    </item>
    <item>
      <title>Rails debug tipp - rails-footnotes plugin</title>
      <link>http://csiszarattila.com/tutorialok/rails_footnotes_plugin.html</link>
      <description>&lt;p&gt;Ha m&#233;g nem hallott&#225;l volna a &lt;a href="http://github.com/josevalim/rails-footnotes/wikis"&gt;rails-footnotes plugin&lt;/a&gt;r&#243;l, mindenk&#233;pp pr&#243;b&#225;ld ki! Feltelep&#237;t&#233;se ut&#225;n minden oldalhoz hozz&#225;ad egy navig&#225;ci&#243;s elemet, amelyr&#337;l k&#246;nnyed&#233;n el&#233;rheted a munkamenetek, s&#252;tik, k&#246;rnyezeti v&#225;ltoz&#243;k tartalm&#225;t:&lt;/p&gt;
&lt;div class='img'&gt;
  &lt;img src='http:/csiszarattila.com/rubysztan/images/rails-footnotes-plugin.tiff' /&gt;
  &lt;p&gt;A rails-footnotes plugin bevet&#233;s k&#246;zben&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;S&#337;t meg is nyithatod a megh&#237;vott vez&#233;rl&#337;t, n&#233;zetet vagy a let&#246;lt&#246;tt css st&#237;luslapok tartalm&#225;t a be&#225;ll&#237;tott sz&#246;vegszerkeszt&#337;dben - alap&#233;rtelmezettk&#233;nt a &lt;a href="http://macromates.com/"&gt;Textmate&lt;/a&gt;-el van integr&#225;lva. Ez ut&#243;bbi funkci&#243; el&#233;rhet&#337; akkor is, ha kiv&#233;telt dob az alkalmaz&#225;sunk - &#237;gy egy kattint&#225;ssal el&#233;rhetj&#252;k a kiv&#233;telt produk&#225;l&#243; k&#243;dsort.&lt;/p&gt;
&lt;h2&gt;Telep&#237;t&#233;s&lt;/h2&gt;
&lt;p&gt;Igaz&#225;b&#243;l a plugin dokument&#225;ci&#243;ja minden l&#233;nyeges pontra kit&#233;r, de az&#233;rt:&lt;/p&gt;
&lt;p&gt;Ha m&#233;g nem telep&#237;tett&#252;nk volna gem-et kor&#225;bban a GitHub-r&#243;l, adjuk hozz&#225; a list&#225;nkhoz:&lt;/p&gt;
&lt;pre&gt;gem sources -a http://gems.github.com&lt;/pre&gt;
&lt;em&gt;Innent&#337;l kezdve, ha egy gemre keres&#252;nk a GitHubosokat is kilist&#225;zza - a gemek t&#246;bbs&#233;ge pedig ma m&#225;r innen &#233;rhet&#337; el.&lt;/em&gt;
&lt;p&gt;Telep&#237;ts&#252;k a gemet a szok&#225;sos m&#243;don:&lt;/p&gt;
&lt;pre&gt;sudo gem install josevalim-rails-footnotes&lt;/pre&gt;
&lt;p&gt;Majd adjuk hozz&#225; az alkalmaz&#225;sunk fejleszt&#337;i k&#246;rnyezet&#233;hez. Mivel nyilv&#225;n nem lenne c&#233;lszer&#369; &#233;les k&#246;rnyezetben is haszn&#225;lni ez&#233;rt a &lt;strong&gt;config/environments/development.rb&lt;/strong&gt; f&#225;jlban defini&#225;ljuk, mint gem f&#252;gg&#337;s&#233;get:&lt;/p&gt;
&lt;pre&gt;config.gem "josevalim-rails-footnotes",  :lib =&gt; "rails-footnotes", :source =&gt; "http://gems.github.com"&lt;/pre&gt;
&lt;p&gt;A gem el&#233;g j&#243; API-val rendelkezik &#237;gy ak&#225;r egyedi tartalmakat is hozz&#225;adhatunk a f&#252;lekhez.&lt;/p&gt;
</description>
      <pubDate>Fri, 09 Jan 2009 00:00:00 +0100</pubDate>
      <guid>/tutorialok/rails_footnotes_plugin.html</guid>
    </item>
    <item>
      <title>A Rails munkamenet kezel&#233;se</title>
      <link>http://csiszarattila.com/tutorialok/rails_session.html</link>
      <description>&lt;p&gt;Ebben a cikkben igyekszem &#246;sszefoglalni a Rails munkamenet kezel&#233;si megold&#225;s&#225;nak alapjait: hogyan m&#369;k&#246;dik, mik&#233;nt haszn&#225;lhatjuk azt. Ha nem ismern&#233;d pontosan mi az a munkamenet-kezel&#233;s &#233;s mi&#233;rt van r&#225; sz&#252;ks&#233;g&#252;nk webalkalmaz&#225;sok fejleszt&#233;sekor a cikk elej&#233;n &#246;sszefoglaltam. Ha ezekkel tiszt&#225;ban vagy nyugodtan ugorj a &lt;a href="#rails"&gt;Rails specifikus r&#233;szekhez&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Mi az a munkamenet-kezel&#233;s?&lt;/h2&gt;
&lt;em&gt;&#8222;Amikor egy asztali (desktop) alkalmaz&#225;ssal dolgozunk, megnyitjuk, v&#225;ltoztatunk valamit, majd bez&#225;rjuk. A sz&#225;m&#237;t&#243;g&#233;p tudja, hogy ki v&#233;gzi a m&#369;veletet. Tudja, amikor elind&#237;tjuk az alkalmaz&#225;st, &#233;s amikor bez&#225;rjuk. De az interneten ez nem &#237;gy van. A webszerver nem tudja, hogy kik vagyunk &#233;s mit csin&#225;lunk, mert a HTTP protokoll nem tartja meg a k&#233;r&#233;sek k&#246;zt az &#225;llapot&#225;t.&lt;/em&gt;
&lt;a href='http://nagygusztav.hu/?q=web_programozas_i_jegyzet_0_7_verzio'&gt;Nagy Guszt&#225;v: Web programoz&#225;s jegyzet 0.7 - 8.2.6. fejezet, 171 .oldal&lt;/a&gt;
&lt;p&gt;A HTTP protokollt &#225;llapot&#225;tmeneti protokollnak is nevezz&#252;k, mivel nem k&#233;pes a k&#233;r&#233;sek k&#246;z&#246;tt egy&#233;rtelm&#369; kapcsolatot teremteni. A HTTP protokoll szabv&#225;nya ezt nem &#237;rja el&#337;, viszont sok esetben sz&#252;ks&#233;g&#252;nk van r&#225;: ha egy&#233;rtelm&#369;en meg tudn&#225;nk &#225;llap&#237;tani hogy ki int&#233;zte a HTTP k&#233;r&#233;st megtudn&#225;nk mondani, hogy kor&#225;bban milyen m&#369;veleteket v&#233;gzett(pl. egy web&#225;ruh&#225;zn&#225;l milyen term&#233;keket helyezett egy kos&#225;rba) vagy, hogy jogosult-e a m&#369;velet elv&#233;gz&#233;s&#233;re. Ennek lek&#252;zd&#233;s&#233;re az id&#337;k folyam&#225;n t&#246;bbf&#233;le megold&#225;st is kital&#225;ltak, amelyeket egys&#233;gesen munkamenet kezel&#233;sk&#233;nt defini&#225;lunk.&lt;/p&gt;
&lt;h2&gt;Milyen munkamenet-kezel&#233;si megold&#225;sok vannak?&lt;/h2&gt;
&lt;p&gt;A munkamenet-kezel&#233;sek t&#246;bbs&#233;ge valamilyen egyedi azonos&#237;t&#243; el&#337;&#225;ll&#237;t&#225;s&#225;ra &#233;s tov&#225;bb&#237;t&#225;s&#225;ra &#233;p&#252;l. Amikor a felhaszn&#225;l&#243; bel&#233;p vagy elind&#237;tja az alkalmaz&#225;sunkat egy - annak lej&#225;rat&#225;ig mindenk&#233;pp - egyedi azonos&#237;t&#243;t kap, amelyet valahogy a v&#225;laszokkal el kell k&#252;lden&#252;nk &#233;s minden k&#233;r&#233;ssel meg kell kapnunk.&lt;/p&gt;
&lt;h3&gt;Mutasd az URL-ed, megmondom ki vagy!&lt;/h3&gt;
&lt;p&gt;Ennek a legegyszer&#369;bb megold&#225;sa, ha a k&#233;r&#233;sek URL-j&#233;ben helyezz&#252;k el ezt az azonos&#237;t&#243;t. Mivel a felhaszn&#225;l&#243; leggyakrabban linkeken kereszt&#252;l kommunik&#225;l az alkalmaz&#225;sunkkal gyakran tal&#225;lkozhatunk (kor&#225;bban mindenk&#233;pp) ilyen URL-kel:&lt;/p&gt;
&lt;pre&gt;http://szupertitkos-alkalamazas.com/index.php?PHPSESSID=04934454521c14300dd2faaa99deff&lt;/pre&gt;
&lt;p&gt;Ahol nyilv&#225;nval&#243;an az alkalmaz&#225;s feladata, hogy az URL-t feldolgozva &#233;rtelmezze azt, az el&#337;&#225;ll&#237;tott HTML v&#225;laszokban pedig a megfelel&#337; azonos&#237;t&#243;kat elhelyezze a linkekben.&lt;/p&gt;
&lt;p&gt;Ez a megold&#225;s viszont t&#246;bb szempontb&#243;l sem szerencs&#233;s. Egyr&#233;szt nem t&#250;l felhaszn&#225;l&#243;bar&#225;t: zavar&#243;, adott esetben t&#250;l hossz&#250; URL-eket eredm&#233;nyez, amelyek r&#225;ad&#225;sul nem k&#246;nyvjelz&#337;zhet&#337;ek. M&#225;sr&#233;szt k&#246;nnyebben kivannak t&#233;ve rossz indulat&#250; t&#225;mad&#225;sok c&#233;lpontj&#225;nak, teh&#225;t nem t&#250;l biztons&#225;gosak.&lt;/p&gt;
&lt;em&gt;Arr&#243;l nem is besz&#233;lve, hogy a felhaszn&#225;l&#243; ak&#225;r tudt&#225;n k&#237;v&#252;l is biztons&#225;gos vagy szem&#233;lyes inform&#225;ci&#243;kat adhat &#225;t - ak&#225;r ismer&#337;s&#233;nek is - azzal, hogy a teljes URL-t elk&#252;ldi neki, az ismer&#337;s pedig megnyitva azt bel&#233;p az &#337; munkamenet&#233;be. Ez&#233;rt az egyedi azonos&#237;t&#243;t &#233;rdemesebb m&#225;s m&#243;dszerekkel &#225;tadni k&#233;t k&#233;r&#233;s k&#246;z&#246;tt.&lt;/em&gt;
&lt;p&gt;Az is nyilv&#225;nval&#243;, hogy ez a probl&#233;ma csak a GET met&#243;dus&#250; k&#233;r&#233;seket &#233;rinti, ha POSTtal k&#252;ldj&#252;k el a munkamenet-azonos&#237;t&#243;t akkor az nem fog megjelenni az URL-ekben.&lt;/p&gt;
&lt;p&gt;A felhaszn&#225;l&#243; b&#246;ng&#233;sz&#337;je viszont POST-olt adatokat csak &#369;rlapelemekkel k&#252;ldhet az alkalmaz&#225;sunk sz&#225;m&#225;ra &#250;gy, hogy egy submit tipus&#250; gombra kattint el&#337;tte - ekkor nyilv&#225;nval&#243;an c&#233;lszer&#369;bb a munkamenet-azonos&#237;t&#243;t rejtett &#369;rlapelemk&#233;nt &#225;tadni a k&#233;r&#233;sekkel. De ez a t&#233;ny nyilv&#225;nval&#243;an csak akkor seg&#237;t, ha a felhaszn&#225;l&#243;nak egy&#233;bk&#233;nt is valamilyen &#369;rlapot kell kit&#246;ltenie, m&#225;sk&#252;l&#246;nben minden link&#252;nket gomb elemre kellene cser&#233;ln&#252;nk, amit k&#246;rbefogunk, egy a linkre mutat&#243; form elemmel.&lt;/p&gt;
&lt;p&gt;De ne agg&#243;djunk, l&#233;tezik egy enn&#233;l sokkal jobb, transzparens megold&#225;s.&lt;/p&gt;
&lt;h3&gt;S&#252;ss&#252;nk s&#252;tit!&lt;/h3&gt;
&lt;p&gt;A b&#246;ng&#233;sz&#337;k t&#246;bbs&#233;ge ma m&#225;r kiv&#233;tel n&#233;lk&#252;l t&#225;mogatja a &lt;a href="http://tools.ietf.org/html/rfc2965"&gt;s&#252;tiket (cookies)&lt;/a&gt;, amelyek lehet&#337;v&#233; teszik, hogy inform&#225;ci&#243;t helyezz&#252;nk el a l&#225;togat&#243;n&#225;l, majd azt a k&#246;vetkez&#337; k&#233;r&#233;ssel visszakapjuk.&lt;/p&gt;
&lt;p&gt;S&#252;tiket egyszer&#369;en a HTTP v&#225;laszokkal k&#252;ldhet&#252;nk a l&#225;togat&#243;nak. P&#233;ld&#225;ul egy ilyen v&#225;lasz fejl&#233;ce a k&#246;vetkez&#337;k&#233;ppen n&#233;zhetne ki:&lt;/p&gt;
&lt;pre&gt;HTTP/1.1 200 OK&amp;#x000A;Set-Cookie: azonositod=abcdef12345&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Amikor a felhaszn&#225;l&#243; b&#246;ng&#233;sz&#337;je &#233;rtelmezi a HTTP v&#225;lasz fejl&#233;c&#233;t &#233;s s&#252;tit tal&#225;l benne elt&#225;rolja azt, semmi m&#225;st nem csin&#225;l vele.&lt;/p&gt;
&lt;em&gt;Sokan v&#233;lik vesz&#233;lyesnek a s&#252;tik haszn&#225;lat&#225;t &#233;s blokkolj&#225;k, de ez teljesen felesleges, mivel a szabv&#225;ny pontosan el&#337;&#237;rja, hogy a b&#246;ng&#233;sz&#337;knek csak t&#225;rolniuk kell azokat, majd a k&#246;vetkez&#337; k&#233;r&#233;sekkel visszaadniuk a szervernek, nem k&#246;telesek futtatni, &#237;gy k&#225;rt&#233;kony k&#243;dok elhelyez&#233;se is haszontalan benn&#252;k.&lt;/em&gt;
&lt;p&gt;A fentebb elt&#225;rolt s&#252;tit ekkor a b&#246;ng&#233;sz&#337; visszak&#252;ldi a k&#246;vetkez&#337; k&#233;r&#233;s&#233;vel - &#246;sszeveti, hogy a k&#233;rt c&#237;mhez tartozik-e elt&#225;rolt s&#252;ti:&lt;/p&gt;
&lt;pre&gt;GET / HTTP/1.1&amp;#x000A;Cookie: azonositod=abcdef12345&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A szerver&#252;nk sz&#225;m&#225;ra mindez m&#233;g ugyan&#250;gy nem jelent semmilyen plusz inform&#225;ci&#243;t, a mi dolgunk, hogy a s&#252;ti adataib&#243;l valahogy munkamenetet var&#225;zsoljunk.&lt;/p&gt;
&lt;p&gt;Ugyanakkor, mint l&#225;thattuk a s&#252;tik haszn&#225;lat&#225;val k&#233;t megold&#225;s k&#246;z&#252;l is v&#225;laszhatunk:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;egyr&#233;szt ak&#225;r elk&#252;ldhetj&#252;k a teljes munkamenetet is, az &#246;sszes adat&#225;val egy&#252;tt. Nyilv&#225;n ekkor &#233;rdemes figyelembe venni, hogy bizalmas adatokat csak k&#243;dolt form&#225;ban tov&#225;bb&#237;tsunk! Egyr&#233;szt a HTTP forgalmat b&#225;rmikor lehallgathatj&#225;k, &#237;gy bizalmas inform&#225;ci&#243;khoz juthatnak hozz&#225; illet&#233;ktelenek, ugyanakkor a s&#252;tik tartalm&#225;t a felhaszn&#225;l&#243; is b&#225;rmikor megtekintheti.&lt;/p&gt;
    &lt;em&gt;Sokszor vesz&#233;lytelennek t&#369;n&#337; inform&#225;ci&#243;k is okozhatnak gondokat p&#233;ld&#225;ul, ha egy web&#225;ruh&#225;z kos&#225;r&#225;t szint&#233;n s&#252;tikben t&#225;roljuk egy lelem&#233;nyes felhaszn&#225;l&#243; ak&#225;r bele is piszk&#225;lhat a rendel&#233;si- v&#233;g&#246;sszegbe el&#233;g komoly galib&#225;kat okozva.&lt;/em&gt;
  &lt;/li&gt;
  &lt;li&gt;m&#225;sr&#233;szt - &#233;s ez a leggyakoribb - a fentebb m&#225;r eml&#237;tett m&#243;don egy munkamenetet-azonos&#237;t&#243;t rendel&#252;nk a HTTP k&#233;r&#233;shez, amit visszajuttatunk a neki sz&#243;l&#243; v&#225;laszunkkal. Ehhez a munkamenet-azonos&#237;t&#243;hoz a szerveren adott er&#337;forr&#225;sok - adatok - fognak tartozni.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mindk&#233;t megold&#225;s rendelkezik el&#337;ny&#246;kkel &#233;s h&#225;tr&#225;nyokkal, ezeket a Rails munkamenetkezel&#233;s&#233;nek jellemz&#233;sekor b&#337;vebben is l&#225;tni fogjuk.&lt;/p&gt;
&lt;a name='rails'&gt;&lt;/a&gt;
&lt;h2&gt;A Rails munkamenet-kezel&#233;se&lt;/h2&gt;
&lt;p&gt;A cikk els&#337; r&#233;sz&#233;ben l&#225;thattuk, hogyan tudunk az &#225;llapotmentes HTTP protokollb&#243;l azonos&#237;that&#243; munkameneteket l&#233;trehozni. Miel&#337;tt m&#233;lyebbre n&#233;zn&#233;nk, hogy a Rails keretrendszer ezeket hogyan alkalmazza, &#233;rdemes a felsz&#237;nen maradni &#233;s megn&#233;zni, hogyan rejti el mindezt a szem&#252;nk el&#337;l.&lt;/p&gt;
&lt;h3&gt;Csacsog a felsz&#237;n, hallgat a m&#233;ly&lt;/h3&gt;
&lt;p&gt;A Rails sok m&#225;s keretrendszerhez hasonl&#243;an egy k&#246;zpontos&#237;tott v&#225;ltoz&#243;t haszn&#225;l adatok elhelyez&#233;s&#233;re illetve kiv&#233;tel&#233;re a munkamenetek k&#246;z&#246;tt. A &lt;strong&gt;session&lt;/strong&gt; nev&#369; hash t&#246;lti be ezt a szerepet - a PHP-ben p&#233;ld&#225;ul hasonl&#243; a $_SESSION nev&#369; szuperglob&#225;lis v&#225;ltoz&#243;.&lt;/p&gt;
&lt;p&gt;A session v&#225;ltoz&#243;t a hasheknek megfelel&#337;en tudjuk haszn&#225;lni, &#237;gy:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    Adat elhelyez&#233;se
    &lt;pre&gt;session[:user_id] = user.id&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    Adat lek&#233;rdez&#233;se
    &lt;pre&gt;user_id = session[:user_id]&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    Adat T&#246;rl&#233;se
    &lt;pre&gt;session[:user_id] = nil&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mind&#246;sszesen ennyit elegend&#337; tudnunk, ha munkameneteket akarunk kezelni a Rails keretrendszerrel. Az ugyanis minden m&#225;st elint&#233;z helyett&#252;nk, az alap&#233;rtelmezett be&#225;ll&#237;t&#225;sok pedig megfelelnek a hat&#233;kony/biztons&#225;gos sz&#369;r&#337;nek.&lt;/p&gt;
&lt;h3&gt;A Rails alap&#233;rtelmezett be&#225;ll&#237;t&#225;sai&lt;/h3&gt;
&lt;p&gt;Miel&#337;tt m&#233;lyebbre &#225;sn&#225;nk a Rails munkamenet-kezel&#233;si be&#225;ll&#237;t&#225;saiban &#233;rdemes tudnunk, hogy az teljes eg&#233;sz&#233;ben a Ruby CGI modulj&#225;nak Session oszt&#225;ly&#225;ra &#233;p&#252;l.&lt;/p&gt;
&lt;p&gt;A Rails alap&#233;rtelmezettk&#233;nt - a 2.0-&#225;s verzi&#243; &#243;ta - a munkamenetek-tartalm&#225;t s&#252;tiken kereszt&#252;l tov&#225;bb&#237;tja, &#237;gy a szerver helyett a felhaszn&#225;l&#243; b&#246;ng&#233;sz&#337;je t&#225;rolja az adatokat, azok a s&#252;tikben v&#225;ndorolnak a k&#233;r&#233;sek k&#246;z&#246;tt.&lt;/p&gt;
&lt;p&gt;Egy Rails alkalmaz&#225;s HTTP v&#225;lasza ez esetben a k&#246;vetkez&#337;k&#233;ppen n&#233;zhet ki, ha n&#233;mi adatot helyez&#252;nk el a munkamenetben:&lt;/p&gt;
&lt;pre&gt;HTTP/1.1 200 OK&amp;#x000A;Set-Cookie: _testapp_session=BAh7CDoMY3NyZl9pZCIlMmEyMzA5YmRjZmRiMjU4M2RkYzkxOWVhYm&amp;#x000A;  Y2ZGFj%0AMjE6DHVzZXJfaWQiBzIyIgpmbGFzaElDOidBY3Rpb25Db250cm9sbGVyOjpG%0AbGFzaDo6Rmxhc2h&amp;#x000A;  IYXNoewAGOgpAdXNlZHsA--5c40d34a7d2c084988efba2ba5fdfc17ed6f9244; path=/&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Mint l&#225;that&#243; a munkamenetek biztons&#225;gi szempontb&#243;l er&#337;sen titkos&#237;tva vannak. Vedd &#233;szre, hogy a karaktersorozat tartalmaz k&#233;t elv&#225;laszt&#243; karaktert(--), az ez ut&#225;n &#225;ll&#243; karakterl&#225;nc a munkamenet-adatainak a hash &#246;sszege, amit az alkalmaz&#225;shoz tartoz&#243; egyedi kulccsal k&#233;pez. Ezt a &lt;strong&gt;config/environment.rb&lt;/strong&gt; f&#225;jlban tal&#225;ljuk meg:&lt;/p&gt;
&lt;pre&gt;...&amp;#x000A;# Your secret key for verifying cookie session data integrity.&amp;#x000A;# If you change this key, all old sessions will become invalid!&amp;#x000A;# Make sure the secret is at least 30 characters and all random, &amp;#x000A;# no regular words or you'll be exposed to dictionary attacks.&amp;#x000A;config.action_controller.session = {&amp;#x000A;  :session_key =&gt; '_webshop_session',&amp;#x000A;  :secret      =&gt; 'bba3ecbb125287724a7ed4107b5d467a653b85fc5a672b104f9237e00943c5658b169e3df97aaf322fe2bdb81a8b48fca27299c936232d0c1dfb4581bb965bee'&amp;#x000A;}&amp;#x000A;...&amp;#x000A;&lt;/pre&gt;
&lt;em&gt;Ha szeretn&#233;nk megv&#225;ltoztatni az alkalmaz&#225;shoz tartoz&#243; egyedi kulcsot, gener&#225;lhatunk egyet a &lt;strong&gt;rake secret&lt;/strong&gt; parancs seg&#237;ts&#233;g&#233;vel.&lt;/em&gt;
&lt;p&gt;A s&#252;tik titkos&#237;t&#225;sa egy szintig elegend&#337; biztons&#225;got ny&#250;jt: a felhaszn&#225;l&#243;k nem tudj&#225;k &#233;rtelmezni, a munkamenetek felt&#246;r&#233;se &#233;s &#225;t&#237;r&#225;sa a titkos&#237;t&#225;s er&#337;ss&#233;ge miatt pedig szinte lehetetlen. Ugyanakkor nyilv&#225;nval&#243; h&#225;tr&#225;nyokkal is rendelkezik: ha az alkalmaz&#225;sban olyan v&#225;ltoztat&#225;sokat v&#233;gz&#252;nk, amelyek &#233;rintik a munkameneteket is, a felhaszn&#225;l&#243;kn&#225;l l&#233;v&#337; elavult tartalmak miatt k&#246;nnyen &#233;rv&#233;nytelen adatokat kaphatunk vissza, &#233;s a kor&#225;bbiakat csak k&#252;l&#246;nb&#246;z&#337; tr&#252;kk&#246;k bevet&#233;s&#233;vel tudjuk megv&#225;ltoztatni. R&#225;ad&#225;sul a b&#246;ng&#233;sz&#337;k t&#246;bbs&#233;ge mind&#246;sszesen 4KiByteban maximaliz&#225;lja a s&#252;tikben t&#225;rolt adatok m&#233;ret&#233;t, amit a CookieStore megold&#225;s is korl&#225;toz&#225;sk&#233;nt alkalmaz.&lt;/p&gt;
&lt;em&gt;A s&#252;tik idev&#225;g&#243; szabv&#225;nya (RFC2965) egy&#233;bir&#225;nt aj&#225;nl&#225;sk&#233;nt 20 db, egyenk&#233;nt minimum 4KiB-os s&#252;tit fogalmaz meg domainenk&#233;nt a b&#246;ng&#233;sz&#337;k sz&#225;m&#225;ra.&lt;/em&gt;
&lt;p&gt;Nem kell azonban r&#246;gt&#246;n keresztet vetn&#252;nk, a Rails ugyanis biztos&#237;t sz&#225;munkra t&#246;bbf&#233;le m&#243;dot is a munkamenetek tartalm&#225;nak t&#225;rol&#225;s&#225;hoz.&lt;/p&gt;
&lt;h3&gt;Munkamenet t&#225;rol&#225;si m&#243;dok&lt;/h3&gt;
&lt;p&gt;Az nyilv&#225;nval&#243;, hogy ha a munkameneteket nem a felhaszn&#225;l&#243;k, hanem a szerver oldal&#225;n szeretn&#233;nk t&#225;rolni akkor h&#225;rom lehet&#337;s&#233;g&#252;nk ad&#243;dik:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;T&#225;rolhatjuk adatb&#225;zisban&lt;/li&gt;
  &lt;li&gt;F&#225;jlokban&lt;/li&gt;
  &lt;li&gt;A mem&#243;ri&#225;ban&lt;/li&gt;
&lt;/ul&gt;
&lt;em&gt;A h&#225;rom lehet&#337;s&#233;g k&#246;z&#252;l nyilv&#225;nval&#243;an a mem&#243;ri&#225;ban val&#243; t&#225;rol&#225;s lesz a leggyorsabb - nincs felesleges I/O &#237;r&#225;s illetve olvas&#225;s.&lt;/em&gt;
&lt;p&gt;A Railsben - legjobb tudom&#225;som szerint - hat t&#225;rol&#225;si m&#243;d k&#246;z&#252;l v&#225;laszthatunk. Ezek fel&#233;t a Ruby CGI modulj&#225;nak Session oszt&#225;lya biztos&#237;tja a sz&#225;munkra, &#250;gymint:&lt;/p&gt;
&lt;dl&gt;
  &lt;dh&gt;FileStore&lt;/dh&gt;
  &lt;dd&gt;A munkamenet-adatok sz&#246;vegk&#233;nt val&#243; t&#225;rol&#225;s&#225;t jelenti - a HTTP fejl&#233;cben form&#225;zottnak megfelel&#337;en t&#225;rol&#243;dnak.&lt;/dd&gt;
  &lt;dh&gt;PStore&lt;/dh&gt;
  &lt;dd&gt;Szint&#233;n f&#225;jlban val&#243; t&#225;rol&#225;st jelent, de bin&#225;ris form&#225;ban. &#205;gy lehet&#337;s&#233;g&#252;nk van objektumok, &#225;llapot alap&#250; lement&#233;s&#233;re is (ha j&#243;l tudom ezt nevezik marshalling-nak).&lt;/dd&gt;
  &lt;dh&gt;Memory Store&lt;/dh&gt;
  &lt;dd&gt;Mint a neve is mutatja a munkamenetek adatai teljes eg&#233;sz&#233;ben a mem&#243;ri&#225;ban t&#225;rol&#243;dnak el.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;A munkamenet-kezel&#233;s pontos m&#369;k&#246;d&#233;sr&#337;l r&#233;szletes inform&#225;ci&#243;khoz juthatunk, ha v&#233;gigtanulm&#225;nyozzuk a &lt;a href="http://www.ruby-doc.org/stdlib/libdoc/cgi/rdoc/classes/CGI/Session.html"&gt;CGI modul Session oszt&#225;ly&#225;t&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A Rails h&#225;rom saj&#225;t t&#225;rol&#225;si form&#225;val eg&#233;sz&#237;ti ki ezeket:&lt;/p&gt;
&lt;dh&gt;CookieStore&lt;/dh&gt;
&lt;dd&gt;A fentebb m&#225;r eml&#237;tett, teljes eg&#233;sz&#233;ben a s&#252;tikben val&#243; adatt&#225;rol&#225;st jelenti.&lt;/dd&gt;
&lt;dh&gt;DRbStore&lt;/dh&gt;
&lt;dd&gt;Az ActionPack modul defini&#225;lja, gyors &#233;s ide&#225;lis t&#246;bb processz k&#246;z&#246;tt megosztand&#243; adatok t&#225;rol&#225;s&#225;ra.&lt;/dd&gt;
&lt;dh&gt;ActiveRecordStore&lt;/dh&gt;
&lt;dd&gt;Adatb&#225;zisban val&#243; t&#225;rol&#225;st jelent. Ennek seg&#237;ts&#233;g&#233;vel az ActiveRecord-os modelljeinkhez hasonl&#243;an fognak a munkamenet-adatok kezel&#337;dni - sz&#225;munkra ez teljesen transzparens lesz, hiszen a munkamenet-adatokat a fentieknek megfelel&#337;en tov&#225;bbra is a &lt;strong&gt;session hash&lt;/strong&gt;-el &#233;rhetj&#252;k el.&lt;/dd&gt;
&lt;p&gt;
  &lt;em&gt;A CGI module Session oszt&#225;lya ugyanakkor lehet&#337;v&#233; teszi, hogy saj&#225;t t&#225;rol&#225;si m&#243;dokat is l&#233;trehozzunk.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;A munkamenet-t&#225;rol&#225;si m&#243;dok mindegyike nyilv&#225;nval&#243;an rendelkezik &lt;a href="http://scott.elitists.net/sessions.html"&gt;el&#337;ny&#246;kkel &#233;s h&#225;tr&#225;nyokkal&lt;/a&gt;, k&#246;z&#252;l&#252;k most az adatb&#225;zisban val&#243; t&#225;rol&#225;st szeretn&#233;m kiemelni.&lt;/p&gt;
&lt;h3&gt;ActiveRecordStore&lt;/h3&gt;
&lt;p&gt;Ennek a t&#225;rol&#225;si m&#243;dnak a haszn&#225;lat&#225;hoz el&#337;sz&#246;r l&#233;tre kell hoznunk a munkamenet-adatok t&#225;rol&#225;s&#225;ra szolg&#225;l&#243; t&#225;bl&#225;t: a &lt;em&gt;db:sessions:create rake taszk&lt;/em&gt; elv&#233;gzi helyett&#252;nk a sz&#252;ks&#233;ges s&#233;ma el&#337;&#225;ll&#237;t&#225;s&#225;t, &#237;gy csak futtatnunk kell a migr&#225;ci&#243;t.&lt;/p&gt;
&lt;pre&gt;rake db:sessions:create&amp;#x000A;rake db:migrate&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A l&#233;trej&#246;v&#337; t&#225;bl&#225;zat egy nagyon egyszer&#369; strukt&#250;r&#225;val rendelkezik:&lt;/p&gt;
&lt;pre&gt;create_table "sessions", :force =&gt; true do |t|&amp;#x000A;  t.string   "session_id", :default =&gt; "", :null =&gt; false&amp;#x000A;  t.text     "data"&amp;#x000A;  t.datetime "created_at"&amp;#x000A;  t.datetime "updated_at"&amp;#x000A;end&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A t&#225;bl&#225;zat l&#233;trehoz&#225;sa ut&#225;n meg kell adnunk, hogy a keretrendszer az adatb&#225;zison kereszt&#252;l kezelje a munkameneteket: a k&#246;rnyezet&#252;nk konfigur&#225;ci&#243;j&#225;ban ( hogy az &#246;sszesre &#233;rv&#233;nyes legyen a &lt;strong&gt;config/enviroment.rb&lt;/strong&gt; f&#225;jlban) a &lt;strong&gt;config.action_controller.session_store &lt;/strong&gt; be&#225;ll&#237;t&#225;sn&#225;l az &lt;em&gt;:active_record_store&lt;/em&gt; param&#233;tert kell megadnunk:&lt;/p&gt;
&lt;pre&gt;# Use the database for sessions instead of the cookie-based default,&amp;#x000A;# which shouldn't be used to store highly confidential information&amp;#x000A;# (create the session table with "rake db:sessions:create")&amp;#x000A;config.action_controller.session_store = :active_record_store&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A szerver&#252;nk &#250;jraind&#237;t&#225;sa ut&#225;n a s&#252;tikben m&#225;r csak a munkamenetekhez rendelt azonos&#237;t&#243;k fognak utazni: ennek a seg&#237;ts&#233;g&#233;vel fogja a keretrendszer a munkamenethez tartoz&#243; adatokat el&#337;szedni az adatb&#225;zisb&#243;l. Ha t&#246;r&#246;lni szeretn&#233;nk minden kor&#225;bbi munkamenet adat&#225;t az adatb&#225;zisb&#243;l futtassuk a &lt;strong&gt;db:session:clear&lt;/strong&gt; rake taszkot.&lt;/p&gt;
&lt;h3&gt;Az ActionController::InvalidAuthenticityToken kiv&#233;tel felold&#225;sa&lt;/h3&gt;
&lt;p&gt;K&#246;zvetlen&#252;l az adatb&#225;zisos munkamenet t&#225;rol&#225;sra val&#243; &#225;t&#225;ll&#225;s ut&#225;n botlottam a fenti kiv&#233;telbe. Az els&#337;re &#233;rthetetlennek t&#369;n&#337; probl&#233;ma &lt;a href="http://kl93.blogspot.com/2008/04/actioncontrollerinvalidauthenticitytoke.html"&gt;gyorsan orvosolhat&#243;&lt;/a&gt;: az &lt;strong&gt;app/controllers/application.rb&lt;/strong&gt; f&#225;jlban vegy&#252;k ki a komment jelet a protect_from_forgery met&#243;dus ut&#225;n &#225;ll&#243; secret szimb&#243;lum&lt;span class="signal"&gt;1&lt;/span&gt; el&#337;l.&lt;/p&gt;
&lt;pre&gt;...
# See ActionController::RequestForgeryProtection for details
# Uncomment the :secret if you're not using the cookie session store

protect_from_forgery  &lt;span class="signal"&gt;1&lt;/span&gt;:secret =&gt; 'f62528d702c4231e586e9d688f824a8e'
...&lt;/pre&gt;
&lt;p&gt;A Rails ugyanis az ActiveRecordos munkamenet kezel&#233;sre val&#243; &#225;t&#225;ll&#225;s ut&#225;n minden &#369;rlapban elhelyez egy titkos&#237;tott k&#243;dsz&#243;t(Authenticity Token) rejtett &#369;rlapmez&#337;k&#233;nt, majd a k&#233;r&#233;sek fogad&#225;sakor ellen&#337;rzi azokat, ezzel megel&#337;zve, hogy - a GET met&#243;dusos k&#233;r&#233;sek kiv&#233;tel&#233;vel - k&#233;r&#233;seket lehessen k&#252;ldeni az alkalmaz&#225;son k&#237;v&#252;lr&#337;l is mintegy v&#233;dekez&#233;sk&#233;pp a CSRF (Cross-Site Request Forgery) t&#225;mad&#225;sok ellen. Ha konkr&#233;tabban is &#233;rdekel a probl&#233;ma &#233;s mag&#225;nak a t&#225;mad&#225;snak a le&#237;r&#225;sa az &lt;a href="http://api.rubyonrails.org/classes/ActionController/RequestForgeryProtection/ClassMethods.html"&gt;API ide v&#225;g&#243; r&#233;sz&#233;t&lt;/a&gt; &#233;rdemes elolvasni.&lt;/p&gt;
&lt;h2&gt;Mit tegy&#252;nk, ha tiltottak a s&#252;tik&lt;/h2&gt;
&lt;p&gt;Mint l&#225;thattuk a Rails munkamenet-kezel&#233;se a s&#252;tikre &#233;p&#252;l azonban ha a felhaszn&#225;l&#243; b&#246;ng&#233;sz&#337;j&#233;ben a s&#252;tik-kezel&#233;se tiltva van ez nem m&#369;k&#246;d&#337;k&#233;pes megold&#225;s. A keretrendszer ekkor az &#369;rlapokban automatikusan minden v&#225;lasszal gener&#225;l egy rejtett form elemet is, amely &#237;gy visszak&#252;ldheti a munkamenet-azonos&#237;t&#243;t vagy a munkamenet-adatokat a k&#246;vetkez&#337; k&#233;r&#233;ssel a szervernek - a CGI modul val&#243;j&#225;ban automatikusan elv&#233;gzi ezt a m&#369;veletet helyett&#252;nk. Ugyanakkor ez csak az &#369;rlappal elk&#252;ld&#246;tt k&#233;r&#233;seket &#233;rinti, ha URL-ben param&#233;terk&#233;nt szeretn&#233;nk tov&#225;bb&#237;tani a munkamenet-azonos&#237;t&#243;t arr&#243;l magunknak kell gondoskodnunk.&lt;/p&gt;
&lt;h2&gt;Flash hash - a Rails egy speci&#225;lis munkamenet elj&#225;r&#225;sa&lt;/h2&gt;
&lt;p&gt;Szorosan a Rails munkameneteihez tartozik a flash hash haszn&#225;lata. Bizonyos esetekben ugyanis sz&#252;ks&#233;g&#252;nk van arra, hogy &#252;zeneteket tudjunk &#225;tadni k&#233;t &#225;tir&#225;ny&#237;tott esem&#233;ny k&#246;z&#246;tt, p&#233;ld&#225;ul hogy hiba&#252;zeneteket vagy inform&#225;ci&#243;kat k&#246;z&#246;lj&#252;nk a felhaszn&#225;l&#243;val.&lt;/p&gt;
&lt;p&gt;Azonban mivel minden &#225;tir&#225;ny&#237;t&#225;s sor&#225;n a Rails &#250;j vez&#233;rl&#337; objektumokat hoz l&#233;tre &#233;s &#237;gy az el&#337;z&#337;leg l&#233;trehozott p&#233;ld&#225;nyv&#225;ltoz&#243;k elvesznek, ezeket k&#233;nytelenek vagyunk a munkamenetben elhelyezni, majd minden leh&#237;v&#225;skor t&#246;r&#246;lni az eredeti &#252;zenetet. A Rails ezt a folyamatot teszi automatikuss&#225;(sz&#252;ks&#233;gtelenn&#233;) a flash hash haszn&#225;lat&#225;val.&lt;/p&gt;
&lt;p&gt;A flash v&#225;ltoz&#243;t ugyan&#250;gy haszn&#225;lhatjuk, mint a session v&#225;ltoz&#243;t, azzal a k&#252;l&#246;nbs&#233;ggel, hogy a benne t&#225;rolt adat mind&#246;sszesen egy v&#225;laszig &#337;rzi meg tartalm&#225;t, ut&#225;na automatikusan t&#246;rl&#337;dik.&lt;/p&gt;
&lt;p&gt;A flash rendelkezik tov&#225;bb&#225; k&#233;t seg&#233;d met&#243;dussal: flash#new[] &#233;s flash#keep(). Az el&#337;bbi a flash tartalm&#225;t csak az &#233;ppen fut&#243; esem&#233;nyig t&#225;rolja el, nem adja &#225;t azt egy k&#246;vetkez&#337;nek a munkamenetben. M&#237;g ut&#243;bbi meg&#337;rzi a m&#225;r l&#233;tez&#337; flash tartalmat a k&#246;vetkez&#337;  &#225;tir&#225;ny&#237;t&#225;sig is.&lt;/p&gt;
&lt;h2&gt;Tov&#225;bbi olvasnival&#243;k&lt;/h2&gt;
&lt;p&gt;
  &lt;a href='http://wiki.rubyonrails.com/rails/pages/sessions'&gt;A Rails Wiki bejegyz&#233;se a munkamenetekr&#337;l&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;a href='http://github.com/rails/rails/tree/master/actionpack/lib/action_controller/session/cookie_store.rb'&gt;A CookieStore megval&#243;s&#237;t&#225;sa&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;a href='http://www.rorsecurity.info/2007/11/20/rails-20-cookies/'&gt;Biztons&#225;gi kock&#225;zatok a CookieStore-al kapcsolatban.&lt;/a&gt;
&lt;p&gt;
  &lt;a href='http://www.quarkruby.com/2007/10/21/sessions-and-cookies-in-ruby-on-rails'&gt;F&#337;k&#233;nt linkekkelt telet&#369;zdelt, de hasznos &#246;sszefoglal&#243; a Rails munkameneteir&#337;l.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;a href='http://scott.elitists.net/sessions.html'&gt;Kicsit r&#233;gi cikk, de teljes&#237;tm&#233;nytesztekkel mutatja be a t&#225;rol&#225;si m&#243;dokat&lt;/a&gt;
&lt;/p&gt;
</description>
      <pubDate>Sun, 04 Jan 2009 00:00:00 +0100</pubDate>
      <guid>/tutorialok/rails_session.html</guid>
    </item>
    <item>
      <title>Egyedi FormBuilder Railsben</title>
      <link>http://csiszarattila.com/tutorialok/custom_form_builder.html</link>
      <description>&lt;p&gt;A Rails sok automatizmust ad a kez&#252;nkbe, ezeket legt&#246;bbsz&#246;r azonban fel&#252;l kell b&#237;r&#225;lnunk. Viszont a Rubynak &#233;s a Rails logikus tervez&#233;s&#233;nek k&#246;sz&#246;nhet&#337;en k&#246;nny&#369; dolgunk van.&lt;/p&gt;
&lt;p&gt;Tegy&#252;k fel, hogy a k&#246;vetkez&#337;re van sz&#252;ks&#233;g&#252;nk:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A form beviteli mez&#337;it vegy&#252;k k&#246;r&#252;l egy div elemmel&lt;/li&gt;
  &lt;li&gt;Rendelj&#252;nk hozz&#225; label tagot&lt;/li&gt;
  &lt;li&gt;A befog&#243; div oszt&#225;lya legyen hib&#225;s beviteli adat eset&#233;n field-with-error&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Az els&#337; k&#233;t pontot ak&#225;r le is k&#243;dolhatn&#225;nk minden form eset&#233;ben, vagy haszn&#225;lhatn&#225;nk partialt, esetleg helpert, a megold&#225;s majdnem nyert ugyanis sz&#252;ks&#233;g&#252;nk lesz egy egyedi FormBuilder-re.&lt;/p&gt;
&lt;h2&gt;FormBuilder l&#233;trehoz&#225;sa&lt;/h2&gt;
&lt;p&gt;Hozzunk l&#233;tre egy &#250;j oszt&#225;lyt a helpereink k&#246;z&#233; (&#250;jabb rails konvenci&#243;: app/helpers mapp&#225;ban a form builder-&#252;nk nev&#233;vel hozzunk l&#233;tre egy f&#225;jlt, pl my_form_builder.rb), &#237;gy automatikusan be fog t&#246;lt&#337;dni.&lt;/p&gt;
&lt;p&gt;Ahelyett, hogy meg&#237;rn&#225;nk minden form helper met&#243;dust sz&#225;rmaztassuk le az oszt&#225;lyt a Rails alap&#233;rtelmezett builder-j&#233;b&#337;l - ActionView::Helpers::FormBuilder.&lt;/p&gt;
&lt;p&gt;Kezdj&#252;k a text_field met&#243;dus fel&#252;l&#237;r&#225;s&#225;val&lt;/p&gt;
&lt;pre&gt;...&amp;#x000A;def text_field(field, *args)&amp;#x000A;  label = label(field,options[:label])&lt;span class="signal"&gt;1&lt;/span&gt;&amp;#x000A;  &amp;#x000A;  &lt;span class="signal"&gt;2&lt;/span&gt;@template.content_tag(:div,label+"&lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;"+super&lt;span class="signal"&gt;3&lt;/span&gt;,:class=&gt;"input")&amp;#x000A;end&amp;#x000A;...&lt;/pre&gt;
&lt;p&gt;A label met&#243;dus&lt;span class="signal"&gt;1&lt;/span&gt; egy sima label tag-et hoz l&#233;tre, ne feledj&#252;k ez az oszt&#225;lyunk met&#243;dusa, egyenl&#337; a template-ben meghivott ActionView helperrel. A &lt;span class="signal"&gt;2&lt;/span&gt; pedig a sz&#252;l&#337; builder oszt&#225;lyunkb&#243;l &#233;rj&#252;k el, ez megintcsak egyenl&#337; a template-ben meghivott content_tag ActionView helperrel. A super-rel&lt;span class="signal"&gt;3&lt;/span&gt; pedig egyszer&#369;en megh&#237;vjuk az &#337;soszt&#225;ly hasonl&#243; met&#243;dus&#225;t, hogy ne kelljen meg&#237;rnunk a m&#369;k&#246;d&#233;s&#233;t.&lt;/p&gt;
&lt;p&gt;Az oszt&#225;ly haszn&#225;lat&#225;hoz adjuk meg a formok eset&#233;ben a builder opci&#243;t:&lt;/p&gt;
&lt;pre&gt;form_for ... :builder=&gt;MyFormBuilder ... do |f|&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A text t&#237;pus&#250; &#369;rlap beviteli(form input) tagokat teh&#225;t siker&#252;lt div-be csomagolni, mostm&#225;r csak a t&#246;bbi helpert kell meg&#237;rnunk, amelyek gyakorlatilag megegyeznek a fentivel. A DRY elveit k&#246;vetve azonban nem akarunk k&#243;dism&#233;tl&#233;sbe kezdeni. Vess&#252;k be a Ruby dinamizmus&#225;t: a define_method a seg&#237;ts&#233;g&#252;nkre van!&lt;/p&gt;
&lt;pre&gt;...&amp;#x000A;helpers = field_helpers - %w(hidden_field label fields_for)&lt;span class="signal"&gt;1&lt;/span&gt;&amp;#x000A;&amp;#x000A;helpers.each do |name|&amp;#x000A;  define_method(name) do |field,*args|&amp;#x000A;    label = label(field,options[:label])&amp;#x000A;    @template.content_tag(:div,label+"&lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;"+super :class=&gt;"input")&amp;#x000A;  end&amp;#x000A;...&lt;/pre&gt;
&lt;span class="signal"&gt;1&lt;/span&gt; A sz&#252;l&#337; oszt&#225;ly majd elb&#225;nik ezekkel, nek&#252;nk nincs sz&#252;ks&#233;g&#252;nk r&#225;juk.
&lt;p&gt;M&#225;rcsak a hib&#225;s mez&#337;k kezel&#233;s&#233;t kell megoldanunk.&lt;/p&gt;
&lt;h2&gt;Rails form hibakezel&#233;s&#233;nek fel&#252;lb&#237;r&#225;l&#225;sa&lt;/h2&gt;
&lt;p&gt;Hib&#225;s adat eset&#233;n a div-hez k&#246;nnyen hozz&#225;adhatjuk a k&#237;v&#225;nt oszt&#225;lynevet(field-with-error), mind&#246;sszesen a fel&#252;lb&#237;r&#225;lt formbuilder&#252;nkben kell ellen&#337;rizni, hogy tartozik-e a mez&#337;h&#246;z(field) hiba&#252;zenetet.&lt;/p&gt;
&lt;pre&gt;...&amp;#x000A;wrapper_div_classes &lt;&lt; INPUT_CLASS_NAME&amp;#x000A;wrapper_div_classes &lt;&lt; " #{ERROR_CLASS_NAME}" unless &lt;span class="signal"&gt;1&lt;/span&gt;@object.errors.on(field).nil?&amp;#x000A;@template.content_tag(:div,label+"&lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;"+super,:class=&gt;wrapper_div_classes&lt;span class="signal"&gt;2&lt;/span&gt;)&amp;#x000A;...&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Mind&#246;ssze annyit kell tudnunk, hogy a lesz&#225;rmaztat&#225;s miatt az @object oszt&#225;lyv&#225;ltoz&#243;b&#243;l&lt;span class="signal"&gt;1&lt;/span&gt; el&#233;rhetj&#252;k a mez&#337;h&#246;z tartoz&#243; ActiveRecord tipus&#250; objektumot, ahonnan megtudhatjuk tartozik-e az adott mez&#337;h&#246;z hiba&#252;zenet. A &lt;span class="signal"&gt;2&lt;/span&gt;-es pontban pedig hozz&#225;adjuk a div oszt&#225;lyait.&lt;/p&gt;
&lt;p&gt;Friss&#237;t&#233;s ut&#225;n l&#225;thatjuk, hogy a hib&#225;s mez&#337;k eset&#233;ben val&#243;ban hozz&#225;ad&#243;dott az oszt&#225;lyn&#233;v, de hogyan iktassuk ki a Rails alap&#233;rtelmezett hibakezel&#233;s&#233;t, ami div-vel veszi k&#246;r&#252;l nemcsak a hib&#225;s mez&#337;t, de a hozz&#225; tartoz&#243; c&#237;mk&#233;t(labelt) is.&lt;/p&gt;
&lt;p&gt;Nos, kev&#233;ss&#233; dokument&#225;lt &#233;s nem is sz&#233;p megold&#225;s, de m&#369;k&#246;dik: fel&#252;l kell &#237;rni az ActionView::Base.field_error_proc-t.&lt;/p&gt;
&lt;pre&gt;ActionView::Base.field_error_proc = Proc.new do |html_tag,instance_tag|&amp;#x000A;  html_tag&amp;#x000A;end&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Helyezz&#252;k el a fenti k&#243;dot a config/initializers k&#246;nyvt&#225;rban pl. field_error_proc.rb n&#233;ven. Szerver &#250;jraind&#237;t&#225;s ut&#225;n(!) a probl&#233;ma megold&#243;dik.&lt;/p&gt;
&lt;p&gt;A forr&#225;s el&#233;rhet&#337; &lt;a href="http://github.com/csiszarattila/myformbuilder/tree/master"&gt;GitHub&lt;/a&gt;-r&#243;l, &#237;gy:&lt;/p&gt;
&lt;pre&gt;git clone git://github.com/csiszarattila/myformbuilder.git&lt;/pre&gt;
</description>
      <pubDate>Sat, 22 Nov 2008 00:00:00 +0100</pubDate>
      <guid>/tutorialok/custom_form_builder.html</guid>
    </item>
    <item>
      <title>Haml sz&#246;vegbeviteli(textarea) mez&#337;kben</title>
      <link>http://csiszarattila.com/tutorialok/rails_textarea_haml.html</link>
      <description>&lt;p&gt;Nemsokkal az els&#337; Rails-es alkalmaz&#225;son meg&#237;r&#225;sa ut&#225;n elkezdtem haszn&#225;lni a &lt;a href="http://haml.hamptoncatlin.com/"&gt;Haml&lt;/a&gt;-t, ami egy remek HTML templ&#233;tez&#337; vagy sablon motor. Annak aki m&#233;g nem ismern&#233;, javaslom mindenk&#233;ppen vessen r&#225; egy pillant&#225;st.&lt;/p&gt;
&lt;p&gt;A blogmotorom &#237;r&#225;sa k&#246;zben &#246;tl&#246;tt fel a gondolat, mi lenne ha integr&#225;ln&#225;m a haszn&#225;lat&#225;t a sz&#246;vegbeviteli mez&#337;kbe is, hiszen &#237;gy sokkal egyszer&#369;bb lenne form&#225;zott bevitelt el&#337;&#225;ll&#237;tani. A Haml ugyanis nem rugaszkodik el teljesen a HTML nyelvt&#337;l, mint teszi azt sok sablon nyelv, m&#225;sr&#233;szt nem ig&#233;nyel olyan &#246;sszetett megold&#225;st, mint p&#233;ld&#225;ul a TinyMCE.&lt;/p&gt;
&lt;p&gt;Maga a Haml alap&#250; sz&#246;veg el&#337;&#225;ll&#237;t&#225;sa, elment&#233;se, &#233;s megjelen&#237;t&#233;se nem ig&#233;nyel t&#250;l sok probl&#233;m&#225;t, de mit tegy&#252;nk, ha valamilyen hib&#225;t v&#233;t&#252;nk a form&#225;z&#225;s k&#246;zben, hiszen ekkor a Haml ford&#237;t&#243; kiv&#233;telt k&#252;ld.&lt;/p&gt;
&lt;h2&gt;1.l&#233;p&#233;s: A kiv&#233;telek elkap&#225;sa&lt;/h2&gt;
&lt;p&gt;Ford&#237;tsuk el&#337;ny&#252;kre &#233;s haszn&#225;ljuk ki a Haml kiv&#233;telkezel&#233;s&#233;t: ellen&#337;rizz&#252;k m&#233;g elment&#233;s el&#337;tt a bejegyz&#233;s sz&#246;veg&#233;t megfelel-e a szab&#225;lyoknak.&lt;/p&gt;
&lt;pre&gt;def validate_haml_syntax&amp;#x000A;  begin&amp;#x000A;    Haml::Engine.new(read_attribute :body).render unless body.nil?&lt;span class="signal"&gt;1&lt;/span&gt;&amp;#x000A;  rescue Haml::SyntaxError =&gt; e&lt;span class="signal"&gt;2&lt;/span&gt;&amp;#x000A;    line = e.line.nil? ? 1 : e.line+1&amp;#x000A;    errors.add(:body,"Haml error on line #{line}: #{e.message}")&lt;span class="signal"&gt;3&lt;/span&gt;&amp;#x000A;  end&amp;#x000A;end&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Els&#337;k&#233;nt egy &#250;j Haml objektumot hozunk l&#233;tre, majd megh&#237;vjuk r&#225; a render met&#243;dust&lt;span class="signal"&gt;1&lt;/span&gt;. Ami hiba eset&#233;n Haml::SyntaxError-t dob&lt;span class="signal"&gt;2&lt;/span&gt;, ezt pr&#243;b&#225;ljuk meg lekezelni. Az &#225;tadott kiv&#233;tel-objektum tartalmazza: a hiba &#252;zenet&#233;t(message) illetve a hiba sorsz&#225;m&#225;t(line). Ezt a kett&#337;t hozz&#225;adva a modell&#252;nk errors t&#246;mbj&#233;hez k&#233;t dolog k&#246;vetkezik be: egyr&#233;szt a Rails &#233;rz&#233;keli, hogy hib&#225;s a modell&#252;nk &#233;s &#250;jrah&#237;vja az el&#337;z&#337; kontrollert (pl. update vagy create), megjelen&#237;tve a hiba &#252;zenetet (error_messages helper).&lt;/p&gt;
&lt;h2&gt;2.l&#233;p&#233;s: Valid&#225;l&#225;s hozz&#225;ad&#225;sa&lt;/h2&gt;
&lt;p&gt;Egyszer&#369;en megh&#237;vjuk a validate_haml_syntax() met&#243;dusunkat a modell validate() met&#243;dus&#225;ban, amely automatikusan v&#233;grehajt&#243;dik a modell elment&#233;se el&#337;tt.&lt;/p&gt;
&lt;pre&gt;def validate&amp;#x000A;  validate_haml_syntax()&amp;#x000A;end&amp;#x000A;&lt;/pre&gt;
&lt;h2&gt;3.l&#233;p&#233;s: A sz&#246;veg "ford&#237;t&#225;sa" HTML-re&lt;/h2&gt;
&lt;p&gt;M&#225;r csak egy dolgot kell megoldanunk, az adatb&#225;zisban Hamlk&#233;nt t&#225;rolt sz&#246;veg visszaalak&#237;t&#225;s&#225;t Html-&#233;, ami tulajdonk&#233;ppen a Haml::Engine(text).render megh&#237;v&#225;s&#225;t jelenti.&lt;/p&gt;
&lt;p&gt;Ak&#225;r fel&#252;lb&#237;r&#225;hatn&#225;nk ezzel a modell&#252;nk body attrib&#250;tum&#225;nak olvas&#225;si met&#243;dus&#225;t - body() - &#237;gy viszont a szerkeszt&#233;si fel&#252;leten is a Html sz&#246;veg jellene meg ment&#233;s ut&#225;n, mi viszont ragaszkodunk a Haml form&#225;zott sz&#246;veghez.&lt;/p&gt;
&lt;p&gt;Vagy hozz&#225;adhatn&#225;nk ak&#225;r egy to_html met&#243;dust a modell&#252;nkh&#246;z, viszont mennyivel egy&#233;rtelm&#369;bb lenne, ha x.to_html helyett x.body.to_html()-t haszn&#225;lhatn&#225;nk.&lt;/p&gt;
&lt;p&gt;Ehhez k&#233;t ismeretre van sz&#252;ks&#233;g&#252;nk. El&#337;sz&#246;r is minden Rails modell rendelkezik egy after_initialize() met&#243;dussal&lt;span class="signal"&gt;1&lt;/span&gt;, ami megoldja a initialize() met&#243;dus fel&#252;lb&#237;r&#225;l&#225;si gondjait, m&#225;sodszor a Ruby lehet&#337;v&#233; teszi, hogy objektumokhoz egyed v. p&#233;ld&#225;ny met&#243;dusokat rendelj&#252;nk!&lt;span class="signal"&gt;2&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;def after_initialize&lt;span class="signal"&gt;1&lt;/span&gt;&amp;#x000A;  class &lt;&lt; body &amp;#x000A;    def to_html&lt;span class="signal"&gt;2&lt;/span&gt;&amp;#x000A;      Haml::Engine.new(self).render&amp;#x000A;    end&amp;#x000A;  end&amp;#x000A;end&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;
  &lt;em&gt;Hozz&#225;adhattuk volna mag&#225;t a met&#243;dust a String oszt&#225;ly megnyit&#225;s&#225;val is - a body elem&#252;nk String p&#233;ld&#225;ny, ekkor azonban minden tov&#225;bbi String oszt&#225;ly&#250; objektumunk is rendelkezne a met&#243;dussal, amit szeretn&#233;nk elker&#252;lni.&lt;/em&gt;
&lt;/p&gt;
</description>
      <pubDate>Sun, 09 Nov 2008 00:00:00 +0100</pubDate>
      <guid>/tutorialok/rails_textarea_haml.html</guid>
    </item>
    <item>
      <title>MySQL Gem telep&#237;t&#233;se OSX 10.4.11(Tiger) al&#225;</title>
      <link>http://csiszarattila.com/tutorialok/mysql_gem_telepites_osx_tiger.html</link>
      <description>&lt;p&gt;Mi tegy&#252;nk ha a Rails(2.1) logj&#225;ban ilyen &#252;zenetekkel tal&#225;lkozunk:&lt;/p&gt;
&lt;pre&gt;DEPRECATION WARNING: You're using the Ruby-based MySQL library that ships with Rails. This library will be REMOVED FROM RAILS 2.2. Please switch to the offical mysql gem: `gem install mysql`  See http://www.rubyonrails.org/deprecation for details. (called from mysql_connection at /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/mysql_adapter.rb:81)&lt;/pre&gt;
&lt;p&gt;A MySQL adatb&#225;ziskezel&#337; pedig m&#225;r nem is haszn&#225;lhat&#243; a Rails 2.2-es verzi&#243;j&#225;t&#243;l a MySQL Gem megl&#233;te n&#233;lk&#252;l.&lt;/p&gt;
&lt;p&gt;A Ruby ugyanis b&#225;r rendelkezik a maga kis mysql lib-implement&#225;ci&#243;j&#225;val, csakhogy a MySQL-es fi&#250;k sem pihentek &#233;s kiadt&#225;k a saj&#225;t verzi&#243;jukat, ami j&#243;val gyorsabb. A Rails teh&#225;t szeretn&#233; ezt haszn&#225;lni.&lt;/p&gt;
&lt;h2&gt;Telep&#237;t&#233;s Gemk&#233;nt&lt;/h2&gt;
&lt;pre&gt;sudo gem install mysql&lt;/pre&gt;
&lt;p&gt;De a gem csak nem fordul mivel explicit meg kell adnunk a mysql-dev f&#225;jlok - C header f&#225;jlok - hely&#233;t. Pr&#243;b&#225;lkozzunk a mysql hely&#233;nek a megad&#225;s&#225;val:&lt;/p&gt;
&lt;pre&gt;sudo gem install mysql -- --with-mysql-dir=/usr/local/mysql&lt;/pre&gt;
&lt;p&gt;Csak nem j&#243;, b&#337;vebben:&lt;/p&gt;
&lt;pre&gt;sudo gem install mysql -- --with-mysql-config=/usr/local/mysql/bin/mysql_config&lt;/pre&gt;
&lt;p&gt;Majdnem, csak ekkor a ford&#237;t&#225;s elsz&#225;ll ezzel:&lt;/p&gt;
&lt;pre&gt;mysql.c: In function 'Init_mysql':&amp;#x000A;mysql.c:2015: error: 'ulong' undeclared (first use in this function)&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;De &#250;gy t&#369;nik nem vagyunk ezzel egyed&#252;l, mivel &lt;a href="http://blog.maxdunn.com/articles/2006/12/12/installing-mysql-gem-on-mac-os-x-10-4"&gt;itt olvashatunk egy lehets&#233;ges megold&#225;st&lt;/a&gt;. A probl&#233;ma &lt;a href="http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/249986"&gt;r&#233;szletesen.&lt;/a&gt;&lt;/p&gt;
Pr&#243;b&#225;ljuk meg magunk ford&#237;tani, azzal, hogy el&#337;bb l&#233;pj&#252;nk be a &lt;strong&gt;usr/local/lib/ruby/gems/1.8/gems/mysql-2.7/&lt;/strong&gt; k&#246;nyvt&#225;rba, majd adjuk hozz&#225; a k&#246;vetkez&#337; sort a &lt;strong&gt;mysql.c&lt;/strong&gt; f&#225;jlhoz:
&lt;pre&gt;#define ulong unsigned long&lt;/pre&gt;
&lt;p&gt;Majd ford&#237;tsuk manu&#225;lisan:&lt;/p&gt;
&lt;pre&gt;sudo ruby ./exconf.rb --with-mysql-config=/usr/local/mysql/bin/mysql_config&amp;#x000A;sudo make&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;
  &lt;em&gt;Tesztel&#233;s: Nos, mint azt az els&#337;k&#233;nt linkelt bejegyz&#233;s &#237;r&#243;ja is &#237;rja, nem fut le a ./test.rb. Rossz felhaszn&#225;l&#243;val akar csatlakozni. A f&#225;jlokat vizsg&#225;lva kider&#252;l, hogy nem veszi &#225;t a param&#233;tereket. Manu&#225;lisan beillesztve a param&#233;teket(host,user,pass) m&#369;k&#246;dik, csak p&#225;r teszt hasal el; long, meg bin&#225;ris konverzi&#243;kon, gondolom ez architekt&#250;r&#225;lis probl&#233;ma, ett&#337;l m&#233;g mennie kell...&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;Telep&#237;t&#233;s:&lt;/p&gt;
&lt;pre&gt;sudo make install&lt;/pre&gt;
&lt;p&gt;Ha a Rails &#233;s a Ruby tov&#225;bb panaszkodna, hogy nem tal&#225;lja a gem-et pr&#243;b&#225;ljuk meg a k&#246;vetkez&#337;t:&lt;/p&gt;
&lt;pre&gt;/usr/bin/install -c -m 0755 mysql.bundle /usr/local/lib/ruby/site_ruby/1.8/i686-darwin8.11.1&lt;/pre&gt;
&lt;p&gt;Ellen&#337;rz&#233;s:&lt;/p&gt;
&lt;pre&gt;irb&amp;#x000A;irb(main):001:0&gt;require 'mysql' =&gt; true&lt;/pre&gt;
</description>
      <pubDate>Sun, 02 Nov 2008 00:00:00 +0100</pubDate>
      <guid>/tutorialok/mysql_gem_telepites_osx_tiger.html</guid>
    </item>
    <item>
      <title>Ruby friss&#237;t&#233;se OSX 10.4(Tiger) alatt</title>
      <link>http://csiszarattila.com/tutorialok/ruby_frissitese_osx_alatt.html</link>
      <description>&lt;p&gt;A Mac OSX rendszerek - legjobb tudom&#225;som szerint - a 10.3-as verzi&#243; &#243;ta el&#337;telep&#237;tve tartalmazz&#225;k a Ruby interpretert. Az OSX 10.4 (Tiger) mindenk&#233;pp, ugyanakkor ez csak(?) a Ruby 1.8.4-es verzi&#243;j&#225;t jelenti. A k&#246;vetkez&#337; le&#237;r&#225;s &#233;pp ez&#233;rt a legfrisebb verzi&#243;kra val&#243; friss&#237;t&#233;sben seg&#237;t.&lt;/p&gt;
&lt;p&gt;
  &lt;em&gt;A Ruby interpreter Matz - a Ruby nyelv megalkot&#243;ja - f&#233;le v&#225;ltozata (MRI - Matz Ruby Interpreter) jelenleg k&#233;t f&#337; verzi&#243;t tartalmaz: az 1.8.6-ost &#233;s az 1.8.7-est. A sz&#225;moz&#225;s itt kiss&#233; f&#233;lrevezet&#337; lehet, mivel a k&#233;t f&#337; verzi&#243; k&#233;t f&#337; ir&#225;nyt jelent, p&#233;ld&#225;ul ut&#243;bbi jelent&#337;s v&#225;ltoztat&#225;sokat tartalmaz &#233;s az alatta &#237;rt k&#243;dok nem felt&#233;tlen&#252;l kompatibilisek a 1.8.6-os verzi&#243;val. &#201;pp ez&#233;rt, ha nincsenek m&#233;g kor&#225;bbi Ruby verzi&#243;k alatt &#237;rt programjaink &#233;n az 1.8.7-es verzi&#243;, ellenkez&#337; esetben az 1.8.6-os verzi&#243;t &#225;j&#225;nlom.&lt;/em&gt;
&lt;/p&gt;
&lt;h2&gt;Parancssori telep&#237;t&#233;s&lt;/h2&gt;
&lt;p&gt;T&#246;lts&#252;k le az 1.8.7 patchlevel 22-es verzi&#243;t (A cikk &#237;r&#225;s&#225;nak id&#337;pontj&#225;ban ez sz&#225;m&#237;t a legfrissebb kiad&#225;snak, amely t&#246;bb biztons&#225;gi hiba jav&#237;t&#225;s&#225;t is tartalmazza az alap 1.8.7-es verzi&#243;hoz k&#233;pest)&lt;/p&gt;
Majd csomagoljuk ki parancssorban:
&lt;pre&gt;tar -xf ruby-1.8.7-p22 &amp;#x000A;cd ruby-1.8.7-p22&lt;/pre&gt;
&lt;pre&gt;./configure --with-readline-lib=/usr/local/lib --enable-pthread&lt;/pre&gt;
&lt;p&gt;A &lt;em&gt;--with-readline-lib&lt;/em&gt; kapcsol&#243; megad&#225;sa fontos, ha szeretn&#233;nk &#233;kezetes karaktereket haszn&#225;lni az &lt;strong&gt;irb&lt;/strong&gt; alatt.&lt;/p&gt;
&lt;pre&gt;make&amp;#x000A;(make test)&amp;#x000A;sudo make install&amp;#x000A;&lt;/pre&gt;
Ellen&#337;rz&#233;s:
&lt;pre&gt;ruby -v&amp;#x000A;ruby 1.8.7 (2008-06-20 patchlevel 22) [i686-darwin8.11.1]&lt;/pre&gt;
</description>
      <pubDate>Sun, 26 Oct 2008 00:00:00 +0200</pubDate>
      <guid>/tutorialok/ruby_frissitese_osx_alatt.html</guid>
    </item>
    <item>
      <title>Ruby blokkok k&#246;zelebbr&#337;l</title>
      <link>http://csiszarattila.com/tutorialok/ruby_blokkok.html</link>
      <description>&lt;p&gt;A mai c&#233;l&#252;nk megtanulni, hogy a k&#246;vetkez&#337; kifejez&#233;s:&lt;/p&gt;
&lt;pre&gt;Array.new(3) { n += 1; n * 10 }&amp;#x000A;=&gt;[10, 20, 30]&lt;/pre&gt;
&lt;p&gt;mit is jelent, hogyan is m&#369;k&#246;dik pontosan.&lt;/p&gt;
&lt;p&gt;A Ruby fontos nyelvi elemeit jelentik a blokkok, amelyet szinte minden, Ruby-t haszn&#225;l&#243; programoz&#243; ismer, a k&#233;rd&#233;s csak csup&#225;n az, tudja is hogy hogyan is m&#369;k&#246;dik?&lt;/p&gt;
&lt;p&gt;Sokak sz&#225;m&#225;ra r&#233;miszt&#337;nek t&#369;nnek, de a blokkok m&#369;k&#246;d&#233;s&#233;nek meg&#233;rt&#233;se nem ig&#233;nyel bonyolult logik&#225;t,&lt;/p&gt;
ugyanakkor haszn&#225;latuk nagy seg&#237;ts&#233;get jelenthet bizonyos probl&#233;m&#225;k egyszer&#369; megold&#225;s&#225;ban.
&lt;p&gt;A k&#246;vetkez&#337;ekben p&#233;ld&#225;kkal szeretn&#233;m bemutatni, hogyan haszn&#225;lhatjuk a blokkokat Rubyban.&lt;/p&gt;
&lt;h2&gt;Hogyan k&#233;sz&#237;ts&#252;nk saj&#225;t blokkot kezel&#337; met&#243;dust&lt;/h2&gt;
&lt;p&gt;Azt m&#225;r tudjuk hogyan adhatunk &#225;t blokkot egy met&#243;dusnak:&lt;/p&gt;
&lt;pre&gt;Array(1, 2, 3).each() {&amp;#x000A;  # Ez itt egy blokk&amp;#x000A;}&lt;/pre&gt;
&lt;p&gt;vagy m&#225;s form&#225;ban:&lt;/p&gt;
&lt;pre&gt;Array(1, 2, 3).each() do&amp;#x000A;  # Ez is egy blokk&amp;#x000A;end&amp;#x000A;&lt;/pre&gt;
&lt;em&gt;&#201;n szem&#233;ly szerint a &lt;strong&gt;do end&lt;/strong&gt; kulcsszavas megad&#225;st t&#246;bbsoros, a kapcsos z&#225;r&#243;jeleket pedig r&#246;vid, egy sorban is elf&#233;r&#337; utas&#237;t&#225;s&#250; blokkok eset&#233;ben haszn&#225;lom.&lt;/em&gt;
&lt;p&gt;Vizsg&#225;ljuk meg ezek m&#369;k&#246;d&#233;s&#233;t kicsit k&#246;zelebbr&#337;l:&lt;/p&gt;
&lt;pre&gt;class MyBlock&amp;#x000A;  def handle_block  (2)&amp;#x000A;    puts "A met&#243;dus megkapta a vez&#233;rl&#233;st"&amp;#x000A;    yield   (1)&amp;#x000A;    puts "A blokk visszaadta a vez&#233;rl&#233;st a blokknak"&amp;#x000A;  end&amp;#x000A;end&amp;#x000A;&lt;/pre&gt;
&lt;pre&gt;MyBlock.handle_block() do&amp;#x000A;  puts "A met&#243;dus &#225;tadta a vez&#233;rl&#233;st a blokknak"&amp;#x000A;end&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Els&#337; &#237;zben a met&#243;dusunk h&#237;v&#243;dik meg(1), a (2) yield nyelvi elem szolg&#225;l a blokkok 'vez&#233;rl&#233;s&#233;re'.&lt;/p&gt;
&lt;p&gt;Amint az l&#225;that&#243; a met&#243;dusokban ezzel tudjuk a program tov&#225;bbi fut&#225;s&#225;t &#225;tadni a kapott blokknak,&lt;/p&gt;
majd ha az v&#233;gzett a feladataival &#250;jb&#243;l visszaadja a vez&#233;rl&#233;st a met&#243;dusunknak.
Term&#233;szetesen a yieldet ak&#225;rh&#225;nyszor megh&#237;vhatjuk a met&#243;dusunkban: az mindannyiszor &#225;tadja a vez&#233;rl&#233;st a blokknak, majd visszat&#233;r.
Most n&#233;zz&#252;k meg hogyan tudunk param&#233;tereket is &#225;tadni a blokkunknak:
&lt;pre&gt;class MyBlock&amp;#x000A;  def handle_block&amp;#x000A;    puts "A met&#243;dus megkapta a vez&#233;rl&#233;st"&amp;#x000A;    n=1&amp;#x000A;    while(n &lt; 4)&amp;#x000A;      yield(n)&amp;#x000A;      n += 1&amp;#x000A;    end&amp;#x000A;    puts "A blokk visszaadta a vez&#233;rl&#233;st a blokknak"&amp;#x000A;  end&amp;#x000A;end&amp;#x000A;&amp;#x000A;MyBlock.handle_block() { |value|  puts value }&amp;#x000A;=&gt; 1 2 3&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A met&#243;dus a yield(n) megh&#237;v&#225;s&#225;val ad &#225;t param&#233;tereket a blokknak, m&#237;g a blokk a |value| kifejez&#233;ssel vesz &#225;t param&#233;tereket. A blokk eset&#233;ben teh&#225;t a neki &#225;tadott param&#233;tereket a || (pipes - cs&#246;vek) jelek k&#246;z&#233; kell tenn&#252;nk, a yield()-t pedig a megfelel&#337; param&#233;ter sorrenddel kell ell&#225;tnunk.&lt;/p&gt;
&lt;h2&gt;Blokk visszadott &#233;rt&#233;ke&lt;/h2&gt;
&lt;p&gt;De hogyan tudjuk a blokk visszaadott &#233;rt&#233;k&#233;t felhaszn&#225;lni. P&#233;ld&#225;ul t&#233;telezz&#252;k fel, hogy egy blokk seg&#237;ts&#233;g&#233;vel k&#233;pez&#252;nk &#233;rt&#233;keket &#233;s azok seg&#237;ts&#233;g&#233;vel l&#233;trehozzuk az objektum adott attrib&#250;tumait.&lt;/p&gt;
&lt;pre&gt;class Szazadok&amp;#x000A;  attr_reader :values&amp;#x000A;  def initialize(size)&amp;#x000A;    n = 0; @ertekek = []&amp;#x000A;    size.times do&amp;#x000A;      n += 1&amp;#x000A;      value = yield(n) (1)&amp;#x000A;      @values &lt;&lt; value&amp;#x000A;    end&amp;#x000A;    end&amp;#x000A;end&amp;#x000A;&amp;#x000A;Szazadok.new(3){ |n| n.to_s.upper+".sz&#225;zad"(2) }&amp;#x000A;p Szazadok.values =&gt; ["1.sz&#225;zad","2.sz&#225;zad","3.sz&#225;zad"]&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A l&#233;nyeg az (1)-sel megjel&#246;lt kifejez&#233;sn&#233;l van, azaz a blokk visszat&#233;r&#337; &#233;rt&#233;k&#233;t(2) a yield kifejez&#233;s(met&#243;dus?) visszat&#233;r&#233;si &#233;rt&#233;ke tartalmazza. Eml&#233;kezz&#252;nk csak, hogy a Ruby nyelvben egy k&#243;dblokk eset&#233;ben a visszat&#233;r&#233;si &#233;rt&#233;k mindig a legutols&#243;nak ki&#233;rt&#233;kelt sor visszaadott &#233;rt&#233;ke - ha nem b&#237;r&#225;ljuk fel&#252;l egy megfelel&#337; helyre besz&#250;rt &lt;strong&gt;return&lt;/strong&gt; kulcssz&#243;val.&lt;/p&gt;
&lt;p&gt;A initialize met&#243;dus pedig a neki &#225;tadott &#233;rt&#233;kb&#337;l (3) tudja, hogy h&#225;nyszor kell a neki &#225;tadott blokkot megh&#237;vnia.&lt;/p&gt;
&lt;p&gt;
  &lt;em&gt;Term&#233;szetesen a fenti programot enn&#233;l sokkal egyszer&#369;bben is megoldhattuk volna, ez&#250;ttal csak a blokkok visszat&#233;r&#233;si &#233;rt&#233;k&#233;nek bemutat&#225;sa volt a f&#337; c&#233;lom.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;Pontosan ez a m&#369;k&#246;d&#233;s zajlik le, amikor megh&#237;vjuk a bejegyz&#233;s elej&#233;n bemutatott p&#233;ld&#225;t:&lt;/p&gt;
&lt;pre&gt;Array.new(3) { n += 1; n * 10 }&amp;#x000A;=&gt;[10, 20, 30]&lt;/pre&gt;
</description>
      <pubDate>Sun, 19 Oct 2008 00:00:00 +0200</pubDate>
      <guid>/tutorialok/ruby_blokkok.html</guid>
    </item>
    <item>
      <title>Git ford&#237;t&#225;sa OSX Tiger alatt (SVN modullal)</title>
      <link>http://csiszarattila.com/tutorialok/git_compile_osx.html</link>
      <description>&lt;p&gt;Rendhagy&#243; m&#243;don nem egy Rubys t&#233;m&#225;j&#250; bejegyz&#233;ssel nyitom meg az oldalt, de rem&#233;lem eln&#233;z&#337;ek lesztek. Terveim szerint egy&#233;bk&#233;nt sem csak a kedvenc programoz&#225;si nyelv&#252;nkr&#337;l sz&#243;lna ez a blog, id&#337;nk&#233;nt el&#337;fordulhat, hogy k&#246;r&#252;lj&#225;rok egy hasonl&#243;an &#233;rdekes t&#233;m&#225;t. Ez&#250;ttal a &lt;a href="http://git.or.cz/"&gt;Git verzi&#243;kezel&#337;&lt;/a&gt; telep&#237;t&#233;s&#233;n a sor.&lt;/p&gt;
&lt;p&gt;Hogy a t&#233;ma mennyire aktu&#225;lis azt az mutatja, hogy az ut&#243;bbi id&#337;ben egyre t&#246;bb Rubys projekt - t&#246;bbek k&#246;z&#246;tt a Rails is - &#225;tt&#233;rt a Git verzi&#243;kezel&#337;re &#233;s nem v&#233;letlen&#252;l.&lt;/p&gt;
&lt;p&gt;(Ha id&#337;m engedi &#233;s ti is j&#243;nak l&#225;tj&#225;tok &#237;rok majd egy Git gyorstalpal&#243;t, b&#225;r &#233;n magam sem r&#233;g&#243;ta haszn&#225;lom - egy&#233;bk&#233;nt nagy megel&#233;gedetts&#233;ggel.)&lt;/p&gt;
&lt;p&gt;Az els&#337; probl&#233;ma amit le kell k&#252;zden&#252;nk, hogy feltelep&#237;ts&#252;k rendszer&#252;nkre a verzi&#243;kezel&#337;t. Mivel &#233;n a Mac OSX Tiger, 10.4-es verzi&#243;j&#225;t haszn&#225;lom &#233;s csak Leop&#225;rd(OSX 10.5) al&#225; adtak ki el&#337;ford&#237;tott csomagokat, parancsorb&#243;l kellett telep&#237;tenem. R&#225;ad&#225;sul szerettem volna a kor&#225;bbi SVN-es projekteimet is import&#225;lni, amelyet csak n&#233;mi hekkel&#233;s &#225;r&#225;n siker&#252;lt megoldani.&lt;/p&gt;
&lt;p&gt;A telep&#237;t&#233;s menete teh&#225;t els&#337;sorban Mac OSX 10.4 - Tiger oper&#225;ci&#243;s rendszert haszn&#225;l&#243;knak k&#233;sz&#252;lt, de szerintem b&#225;rmilyen *nix alap&#250; rendszerre meg&#225;llja a hely&#233;t.&lt;/p&gt;
&lt;p&gt;(Term&#233;szetesen telep&#237;thetj&#252;k a Git-et &lt;a href="http://www.finkproject.org/"&gt;Fink&lt;/a&gt;-en vagy &lt;a href="http://www.macports.org/"&gt;Macports&lt;/a&gt;-on kereszt&#252;l is, ez a bejegyz&#233;s viszont azoknak sz&#243;l akik nem szeretik a csomagkezel&#337;ket, vagy csak az &#233;ppen aktu&#225;lis forr&#225;st szeretn&#233;k haszn&#225;lni).&lt;/p&gt;
&lt;h2&gt;A telep&#237;t&#233;s menete&lt;/h2&gt;
&lt;p&gt;Szerencs&#233;re nem sok f&#252;gg&#337;s&#233;ge van a Git-nek, ezek t&#246;bbs&#233;ge el&#337;telep&#237;tve megtal&#225;lhat&#243; az oper&#225;ci&#243;s rendszer mellett, tal&#225;n csak az expat jelent kiv&#233;telt ez al&#243;l. (A Git f&#252;gg&#337;s&#233;geinek a t&#246;bbs&#233;ge am&#250;gy is csak a dokument&#225;ci&#243; t&#246;bbf&#233;le form&#225;tumra alak&#237;t&#225;sa miatt kell.)&lt;/p&gt;
&lt;p&gt;Teh&#225;t t&#246;lts&#252;k le a legfrissebb Git forr&#225;sk&#243;dot - a bejegyz&#233;s &#237;r&#225;sakor ez a 1.5.5-nek felel meg, de a telep&#237;t&#233;s meg&#225;llja a hely&#233;t a k&#233;s&#337;bbi verzi&#243;kra is -, majd a 'szok&#225;sos' telep&#237;t&#233;si forgat&#243;k&#246;nyvet k&#246;vetve:&lt;/p&gt;
&lt;pre&gt;./git-1.5.5&amp;#x000A;./configure --prefix=/usr/local/git-1.5.5&amp;#x000A;make&amp;#x000A;sudo make install&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Hozzunk l&#233;tre egy szimbolikus linket a program k&#246;nyvt&#225;r&#225;ra, &#237;gy egyszer&#369;bben megadhatjuk az el&#233;r&#233;s&#233;t parancssorb&#243;l, &#250;j verzi&#243;k telep&#237;t&#233;sekor pedig el&#233;g csak a linket m&#243;dos&#237;tani:&lt;/p&gt;
&lt;pre&gt;ln -s /usr/local/git-1.5.5 /usr/local/git&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Ahhoz, hogy a Git parancsait ne kelljen ezen a hossz&#250; &#250;tvonalon kereszt&#252;l el&#233;rn&#252;nk, &#233;s kiad&#225;sukkor a h&#233;j megtal&#225;lja automatikusan &#337;ket, hozz&#225; kell adnunk a PATH k&#246;rnyezeti v&#225;ltoz&#243;hoz a fent l&#233;trehozott hivatkoz&#225;s &lt;strong&gt;bin&lt;/strong&gt; k&#246;nyvt&#225;r&#225;t:&lt;/p&gt;
&lt;pre&gt;export $PATH="$PATH:/usr/local/git/bin/"&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;
  &lt;em&gt;A fenti l&#233;p&#233;ssorozat a legt&#246;bb program telep&#237;t&#233;s&#233;n&#233;l j&#225;rhat&#243; &#250;t, akinek teh&#225;t nem ismer&#337;s &#233;rdemes megtanulnia, k&#233;s&#337;bb pedig ut&#225;naj&#225;rnia, hogy mi&#233;rt is m&#369;k&#246;dik mindez &#250;gy, ahogy.&lt;/em&gt;
&lt;/p&gt;
&lt;h2&gt;SVN rep&#243;k import&#225;l&#225;sa Git al&#225;.&lt;/h2&gt;
&lt;p&gt;Ha Subversionr&#337;l akarunk &#225;t&#225;llni &#233;s szeretn&#233;nk a kor&#225;bbi projekteinket haszn&#225;lni Git alatt is, a &lt;strong&gt;git-svn&lt;/strong&gt; parancsot kell haszn&#225;lnuk.&lt;/p&gt;
&lt;p&gt;Nos &#233;n m&#225;r az els&#337; haszn&#225;latakor probl&#233;m&#225;ba &#252;tk&#246;ztem, ugyanis az al&#225;bbi hiba&#252;zenetet kaptam:&lt;/p&gt;
&lt;pre&gt;Can't locate SVN/Core.pm in @INC (@INC contains: ... )&lt;/pre&gt;
&lt;p&gt;A git-svn ugyanis Perl nyelven &#237;r&#243;dott: az SVN Perl modulj&#225;ra &#233;p&#252;l. Haszn&#225;lat&#225;hoz ez&#233;rt telep&#237;ten&#252;nk kell az SVN SWIG Perl modulj&#225;t, amihez sz&#252;ks&#233;g&#252;nk lesz az SVN forr&#225;sk&#243;dj&#225;ra. Ha let&#246;lt&#246;tt&#252;k:&lt;/p&gt;
&lt;pre&gt;./subversion_forraskod&amp;#x000A;make swig-pl&amp;#x000A;sudo make install-swig-pl&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;A r&#233;szletes utas&#237;t&#225;sokat &#233;n is &lt;a href="http://larrytheliquid.com/2007/12/29/compiling-git-and-git-svn-on-osx-tiger/"&gt;err&#337;l az oldalr&#243;l szedtem.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;De hi&#225;ba, a git-svn parancs n&#225;lam ism&#233;t csak elsz&#225;llt, ez&#250;ttal egy bus error-ral.&lt;/p&gt;
&lt;p&gt;
  &lt;em&gt;A forr&#225;sk&#243;db&#243;l val&#243; telep&#237;t&#233;skor gyakran szembes&#252;l az ember furcs&#225;nak t&#369;n&#337; probl&#233;m&#225;kkal, amelyek megold&#225;sa sokszor &#243;r&#225;kig tart&#243; keresg&#233;l&#233;st &#233;s inform&#225;ci&#243;gy&#369;jt&#233;st jelent. Amikor azt hihetn&#233;nk megold&#225;st tal&#225;ltunk egy adott probl&#233;m&#225;ra egy &#250;jabb hib&#225;ba is futhatunk, de a legfontosabb, hogy ekkor se adjuk fel (k&#233;t hajt&#233;p&#233;s k&#246;zben az&#233;rt tartsunk egy kis sz&#252;netet:). A frusztr&#225;l&#243; probl&#233;m&#225;k megold&#225;sa nem csak el&#233;gedetts&#233;ggel t&#246;lthet el benn&#252;nket, hanem sok hasznos tapasztalattal is felv&#233;rtezhet.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;Kis keresg&#233;l&#233;s ut&#225;n - az SVN install utas&#237;t&#225;sa alapj&#225;n - kider&#252;lt, hogy csak a SWIG 1.3.29-es verzi&#243;i alatt stabilak a nyelvi bindingek. Telep&#237;ts&#252;k teh&#225;t fel:&lt;/p&gt;
&lt;pre&gt;./swig 1.3.29_forraskod&amp;#x000A;./configure --with-perl=/usr/bin/perl&amp;#x000A;make&amp;#x000A;sudo make install&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;
  &lt;em&gt;A SWIG egy szabv&#225;nyos program, elt&#233;r&#337; nyelvek forr&#225;sk&#243;dj&#225;nak a konverzi&#243;j&#225;ra; p&#233;ld&#225;ul C nyelv&#369; forr&#225;sok&#243;dokat ak&#225;r Ruby nyelvre is &#225;t tudunk "ford&#237;tani" a seg&#237;ts&#233;g&#233;vel.&lt;/em&gt;
&lt;/p&gt;
A telep&#237;t&#233;se ut&#225;n ism&#233;t &#225;ll&#237;tsuk el&#337; a sz&#252;ks&#233;ges Perl modulokat:
&lt;pre&gt;subversion&amp;#x000A;./configure --with-perl=/usr/bin/perl (!)&amp;#x000A;make&amp;#x000A;make swig-pl&amp;#x000A;make check-swig-pl (Ha itt minden OK akkor rendben vagyunk)&amp;#x000A;sudo make install&amp;#x000A;&lt;/pre&gt;
&lt;p&gt;Ezek ut&#225;n mennie kell az SVN rep&#243;k import&#225;l&#225;s&#225;nak Git-re, &#233;s fogadjuk meg, hogy soha nem is t&#233;r&#252;nk vissza hozz&#225;juk:)&lt;/p&gt;
&lt;p&gt;
  &lt;strong&gt;Megjegyz&#233;s(2008.12.23.):&lt;/strong&gt;
  Ezt a cikket el&#233;g sok magyar&#225;z&#243; sz&#246;veggel l&#225;ttam el az els&#337; v&#225;ltozata &#243;ta, a parancsokat viszont nem pr&#243;b&#225;ltam ki &#250;jra, teh&#225;t lehets&#233;ges, hogy t&#246;bb&#233; m&#225;r nem &#225;llj&#225;k meg a hely&#252;ket - els&#337;sorban a git-svn telep&#237;t&#233;s&#233;re gondolok.
&lt;/p&gt;
&lt;p&gt;
  &lt;strong&gt;Megjegyz&#233;s(2008.12.24.):&lt;/strong&gt;
  Ha a Git 1.6.0.6-ra friss&#237;t&#233;sekor a &lt;em&gt;make install&lt;/em&gt; parancs kiad&#225;sa ut&#225;n az al&#225;bbi figyelmeztet&#233;st kapjuk:
  &lt;pre&gt;!! You have installed git-* commands to new gitexecdir.&amp;#x000A;!! Old version git-* commands still remain in bindir.&amp;#x000A;!! Mixing two versions of Git will lead to problems.&amp;#x000A;!! Please remove old version commands in bindir now.&lt;/pre&gt;
  &lt;p&gt;Akkor t&#246;r&#252;lj&#252;k a r&#233;gi bin&#225;risokat a &lt;strong&gt;/usr/local/git/bin&lt;/strong&gt; k&#246;nyvt&#225;rb&#243;l:&lt;/p&gt;
  &lt;pre&gt;rm -f /usr/local/git/bin/*&lt;/pre&gt;
  &lt;p&gt;&#201;s futtassuk &#250;jra a &lt;strong&gt;sudo make install&lt;/strong&gt; parancsot.&lt;/p&gt;
&lt;/p&gt;
</description>
      <pubDate>Sun, 12 Oct 2008 00:00:00 +0200</pubDate>
      <guid>/tutorialok/git_compile_osx.html</guid>
    </item>
  </channel>
</rss>
